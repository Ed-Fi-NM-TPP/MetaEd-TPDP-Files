/****** Table: [extension].[AbsenceEventCategoryDescriptor] ******/

CREATE TABLE [extension].[AbsenceEventCategoryDescriptor](
    [AbsenceEventCategoryDescriptorId] [INT] NOT NULL,
    [AbsenceEventCategoryTypeId] [INT] NULL,
    CONSTRAINT [AbsenceEventCategoryDescriptor_PK] PRIMARY KEY CLUSTERED (
        [AbsenceEventCategoryDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the code describing the type of leave taken, for example: Sick, Personal, Vacation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AbsenceEventCategoryDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AbsenceEventCategoryDescriptor', @level2type=N'COLUMN', @level2name=N'AbsenceEventCategoryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AbsenceEventCategoryDescriptor', @level2type=N'COLUMN', @level2name=N'AbsenceEventCategoryTypeId'
GO


/****** Table: [extension].[AbsenceEventCategoryType] ******/

CREATE TABLE [extension].[AbsenceEventCategoryType](
    [AbsenceEventCategoryTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [AbsenceEventCategoryType_PK] PRIMARY KEY CLUSTERED (
        [AbsenceEventCategoryTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AbsenceEventCategoryType] ADD CONSTRAINT [AbsenceEventCategoryType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[AbsenceEventCategoryType] ADD CONSTRAINT [AbsenceEventCategoryType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[AbsenceEventCategoryType] ADD CONSTRAINT [AbsenceEventCategoryType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the code describing the type of leave taken, for example: Sick, Personal, Vacation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AbsenceEventCategoryType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for AbsenceEventCategory', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AbsenceEventCategoryType', @level2type=N'COLUMN', @level2name=N'AbsenceEventCategoryTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AbsenceEventCategoryType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the AbsenceEventCategory type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AbsenceEventCategoryType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the AbsenceEventCategory type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AbsenceEventCategoryType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[AidType] ******/

CREATE TABLE [extension].[AidType](
    [AidTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [AidType_PK] PRIMARY KEY CLUSTERED (
        [AidTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AidType] ADD CONSTRAINT [AidType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[AidType] ADD CONSTRAINT [AidType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[AidType] ADD CONSTRAINT [AidType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The classification of financial aid awarded to a person for the academic term/year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AidType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for Aid', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AidType', @level2type=N'COLUMN', @level2name=N'AidTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AidType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the Aid type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AidType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the Aid type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AidType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[AidTypeDescriptor] ******/

CREATE TABLE [extension].[AidTypeDescriptor](
    [AidTypeDescriptorId] [INT] NOT NULL,
    [AidTypeId] [INT] NOT NULL,
    CONSTRAINT [AidTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [AidTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The classification of financial aid awarded to a person for the academic term/year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AidTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AidTypeDescriptor', @level2type=N'COLUMN', @level2name=N'AidTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AidTypeDescriptor', @level2type=N'COLUMN', @level2name=N'AidTypeId'
GO


/****** Table: [extension].[AnonymizedStudent] ******/

CREATE TABLE [extension].[AnonymizedStudent](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [EducationOrganizationId] [INT] NULL,
    [CourseCode] [NVARCHAR](60) NULL,
    [UniqueSectionCode] [NVARCHAR](255) NULL,
    [SequenceOfCourse] [INT] NULL,
    [LocalCourseCode] [NVARCHAR](60) NULL,
    [SchoolId] [INT] NULL,
    [TermDescriptorId] [INT] NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NULL,
    [ClassPeriodName] [NVARCHAR](20) NULL,
    [SexTypeId] [INT] NULL,
    [GenderTypeId] [INT] NULL,
    [HispanicLatinoEthnicity] [BIT] NULL,
    [SchoolFoodServicesEligibilityDescriptorId] [INT] NULL,
    [Section504Enrollment] [BIT] NULL,
    [ELLEnrollment] [BIT] NULL,
    [ESLEnrollment] [BIT] NULL,
    [SPEDEnrollment] [BIT] NULL,
    [TitleIEnrollment] [BIT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [AnonymizedStudent_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudent] ADD CONSTRAINT [AnonymizedStudent_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[AnonymizedStudent] ADD CONSTRAINT [AnonymizedStudent_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[AnonymizedStudent] ADD CONSTRAINT [AnonymizedStudent_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Domain entity to collect data for indiviudal students with whom the teacher candidate is associated through field work or student teaching', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudent'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Domain entity to collect data for indiviudal students with whom the teacher candidate is associated through field work or student teaching', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A person''s gender.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'SexTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The gender with which a person associates.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'GenderTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicity'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of a student''s level of eligibility for breakfast, lunch, snack, supper, and milk programs.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'SchoolFoodServicesEligibilityDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the students who are enrolled in a 504 program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'Section504Enrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the ELL enrollment of the student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'ELLEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the ESL enrollment of the student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'ESLEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the enrollment in SPED of the student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'SPEDEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the enrollment in Title I of the student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudent', @level2type=N'COLUMN', @level2name=N'TitleIEnrollment'
GO


/****** Table: [extension].[AnonymizedStudentAcademicRecord] ******/

CREATE TABLE [extension].[AnonymizedStudentAcademicRecord](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [CumulativeGradePointAverage] [DECIMAL](18, 4) NULL,
    [FinalLetterGradeEarned] [NVARCHAR](20) NOT NULL,
    [FinalNumericGradeEarned] [DECIMAL](9, 2) NULL,
    [GPAMax] [DECIMAL](18, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [AnonymizedStudentAcademicRecord_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentAcademicRecord] ADD CONSTRAINT [AnonymizedStudentAcademicRecord_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[AnonymizedStudentAcademicRecord] ADD CONSTRAINT [AnonymizedStudentAcademicRecord_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[AnonymizedStudentAcademicRecord] ADD CONSTRAINT [AnonymizedStudentAcademicRecord_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The academic record for an anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentAcademicRecord'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAcademicRecord', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAcademicRecord', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAcademicRecord', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAcademicRecord', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average cumulative grade point average for a student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAcademicRecord', @level2type=N'COLUMN', @level2name=N'CumulativeGradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The letter indicator of student performance in a class as submitted by the instructor.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAcademicRecord', @level2type=N'COLUMN', @level2name=N'FinalLetterGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The numeric indicator of student performance in a class as submitted by the instructor.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAcademicRecord', @level2type=N'COLUMN', @level2name=N'FinalNumericGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The maximum grade point average that can be achieved by a student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAcademicRecord', @level2type=N'COLUMN', @level2name=N'GPAMax'
GO


/****** Table: [extension].[AnonymizedStudentAssessment] ******/

CREATE TABLE [extension].[AnonymizedStudentAssessment](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [CourseCode] [NVARCHAR](60) NULL,
    [EducationOrganizationId] [INT] NULL,
    [UniqueSectionCode] [NVARCHAR](255) NULL,
    [SequenceOfCourse] [INT] NULL,
    [LocalCourseCode] [NVARCHAR](60) NULL,
    [SchoolId] [INT] NULL,
    [SchoolYear] [SMALLINT] NULL,
    [TermDescriptorId] [INT] NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NULL,
    [ClassPeriodName] [NVARCHAR](20) NULL,
    [AssessmentCategoryDescriptorId] [INT] NULL,
    [AdministrationDate] [DATE] NULL,
    [AssessmentTitle] [NVARCHAR](60) NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [AcademicSubjectDescriptorId] [INT] NULL,
    [GradeLevelDescriptorId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [AnonymizedStudentAssessment_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentAssessment] ADD CONSTRAINT [AnonymizedStudentAssessment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[AnonymizedStudentAssessment] ADD CONSTRAINT [AnonymizedStudentAssessment_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[AnonymizedStudentAssessment] ADD CONSTRAINT [AnonymizedStudentAssessment_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents the analysis or scoring of a Student''s response on an assessment. The analysis results in a value that represents a Student''s performance on a set of items on a test.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentAssessment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term in which the assessment was administered', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The category of an assessment based on format and content. For example: Achievement test Advanced placement test Alternate assessment\grade-level standards Attitudinal test Cognitive and perceptual skills test ...', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'AssessmentCategoryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date the assessment was administered', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'AdministrationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title if any specific assessment given to a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'AssessmentTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The academic subject associated with a student assessment', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Grade level for which effectiveness is measured.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessment', @level2type=N'COLUMN', @level2name=N'GradeLevelDescriptorId'
GO


/****** Table: [extension].[AnonymizedStudentAssessmentPerformanceLevel] ******/

CREATE TABLE [extension].[AnonymizedStudentAssessmentPerformanceLevel](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [PerformanceLevelMet] [BIT] NOT NULL,
    [PerformanceLevelDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [AnonymizedStudentAssessmentPerformanceLevel_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentAssessmentPerformanceLevel] ADD CONSTRAINT [AnonymizedStudentAssessmentPerformanceLevel_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The performance level(s) achieved for the StudentAssessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentAssessmentPerformanceLevel'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessmentPerformanceLevel', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Optional indicator of whether the performance level was met.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessmentPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelMet'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A specification of which performance level value describes the student proficiency.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessmentPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelDescriptorId'
GO


/****** Table: [extension].[AnonymizedStudentAssessmentScoreResult] ******/

CREATE TABLE [extension].[AnonymizedStudentAssessmentScoreResult](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [Result] [NVARCHAR](35) NOT NULL,
    [ResultDatatypeTypeId] [INT] NOT NULL,
    [AssessmentReportingMethodTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [AnonymizedStudentAssessmentScoreResult_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentAssessmentScoreResult] ADD CONSTRAINT [AnonymizedStudentAssessmentScoreResult_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A specification of which performance level value describes the student proficiency.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentAssessmentScoreResult'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessmentScoreResult', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of a meaningful raw score or statistical expression of the performance of an individual. The results can be expressed as a number, percentile, range, level, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessmentScoreResult', @level2type=N'COLUMN', @level2name=N'Result'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessmentScoreResult', @level2type=N'COLUMN', @level2name=N'ResultDatatypeTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The method that the administrator of the assessment uses to report the performance and achievement of all students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentAssessmentScoreResult', @level2type=N'COLUMN', @level2name=N'AssessmentReportingMethodTypeId'
GO


/****** Table: [extension].[AnonymizedStudentCourseAssociation] ******/

CREATE TABLE [extension].[AnonymizedStudentCourseAssociation](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [BeginDate] [DATE] NOT NULL,
    [EndDate] [DATE] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [AnonymizedStudentCourseAssociation_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC,
        [BeginDate] ASC,
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentCourseAssociation] ADD CONSTRAINT [AnonymizedStudentCourseAssociation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[AnonymizedStudentCourseAssociation] ADD CONSTRAINT [AnonymizedStudentCourseAssociation_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[AnonymizedStudentCourseAssociation] ADD CONSTRAINT [AnonymizedStudentCourseAssociation_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the association between an anonymized student and the course they are enrolled in', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentCourseAssociation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseAssociation', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseAssociation', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseAssociation', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseAssociation', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseAssociation', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Begin date for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseAssociation', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The end date for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseAssociation', @level2type=N'COLUMN', @level2name=N'EndDate'
GO


/****** Table: [extension].[AnonymizedStudentCourseTranscript] ******/

CREATE TABLE [extension].[AnonymizedStudentCourseTranscript](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [FinalLetterGradeEarned] [NVARCHAR](20) NULL,
    [FinalNumericGradeEarned] [DECIMAL](9, 2) NULL,
    [CourseRepeatCodeTypeId] [INT] NULL,
    [CourseTitle] [NVARCHAR](60) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [AnonymizedStudentCourseTranscript_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC,
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentCourseTranscript] ADD CONSTRAINT [AnonymizedStudentCourseTranscript_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[AnonymizedStudentCourseTranscript] ADD CONSTRAINT [AnonymizedStudentCourseTranscript_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[AnonymizedStudentCourseTranscript] ADD CONSTRAINT [AnonymizedStudentCourseTranscript_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentCourseTranscript'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseTranscript', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseTranscript', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseTranscript', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseTranscript', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseTranscript', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The final indicator of student performance in a class as submitted by the instructor.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseTranscript', @level2type=N'COLUMN', @level2name=N'FinalLetterGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The final indicator of student performance in a class as submitted by the instructor.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseTranscript', @level2type=N'COLUMN', @level2name=N'FinalNumericGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates that an academic course has been repeated by a student and how that repeat is to be computed in the student''s academic grade average.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseTranscript', @level2type=N'COLUMN', @level2name=N'CourseRepeatCodeTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The official Course Title with which this student acaemic is associated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentCourseTranscript', @level2type=N'COLUMN', @level2name=N'CourseTitle'
GO


/****** Table: [extension].[AnonymizedStudentDisability] ******/

CREATE TABLE [extension].[AnonymizedStudentDisability](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [DisabilityDescriptorId] [INT] NOT NULL,
    [DisabilityDiagnosis] [NVARCHAR](80) NULL,
    [OrderOfDisability] [INT] NULL,
    [DisabilityDeterminationSourceTypeId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [AnonymizedStudentDisability_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC,
        [DisabilityDescriptorId] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentDisability] ADD CONSTRAINT [AnonymizedStudentDisability_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A disability category that describes a child''s impairment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentDisability'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentDisability', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentDisability', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentDisability', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A disability category that describes a child''s impairment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentDisability', @level2type=N'COLUMN', @level2name=N'DisabilityDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A description of the disability diagnosis.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentDisability', @level2type=N'COLUMN', @level2name=N'DisabilityDiagnosis'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The order by severity of student''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentDisability', @level2type=N'COLUMN', @level2name=N'OrderOfDisability'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The source that provided the disability determination.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentDisability', @level2type=N'COLUMN', @level2name=N'DisabilityDeterminationSourceTypeId'
GO


/****** Table: [extension].[AnonymizedStudentEducationOrganizationAssociation] ******/

CREATE TABLE [extension].[AnonymizedStudentEducationOrganizationAssociation](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [BeginDate] [DATE] NOT NULL,
    [EndDate] [DATE] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [AnonymizedStudentEducationOrganizationAssociation_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC,
        [BeginDate] ASC,
        [EducationOrganizationId] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentEducationOrganizationAssociation] ADD CONSTRAINT [AnonymizedStudentEducationOrganizationAssociation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[AnonymizedStudentEducationOrganizationAssociation] ADD CONSTRAINT [AnonymizedStudentEducationOrganizationAssociation_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[AnonymizedStudentEducationOrganizationAssociation] ADD CONSTRAINT [AnonymizedStudentEducationOrganizationAssociation_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the association between an anonymized student and the Education Organziation they are enrolled in', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentEducationOrganizationAssociation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentEducationOrganizationAssociation', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentEducationOrganizationAssociation', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentEducationOrganizationAssociation', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentEducationOrganizationAssociation', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Begin date for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentEducationOrganizationAssociation', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The end date for the assocation', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentEducationOrganizationAssociation', @level2type=N'COLUMN', @level2name=N'EndDate'
GO


/****** Table: [extension].[AnonymizedStudentLanguage] ******/

CREATE TABLE [extension].[AnonymizedStudentLanguage](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [LanguageDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [AnonymizedStudentLanguage_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC,
        [FactsAsOfDate] ASC,
        [LanguageDescriptorId] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentLanguage] ADD CONSTRAINT [AnonymizedStudentLanguage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The language(s) the individual uses to communicate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentLanguage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentLanguage', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentLanguage', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentLanguage', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A specification of which written or spoken communication is being used.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentLanguage', @level2type=N'COLUMN', @level2name=N'LanguageDescriptorId'
GO


/****** Table: [extension].[AnonymizedStudentLanguageUse] ******/

CREATE TABLE [extension].[AnonymizedStudentLanguageUse](
    [LanguageDescriptorId] [INT] NOT NULL,
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [LanguageUseTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [AnonymizedStudentLanguageUse_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC,
        [FactsAsOfDate] ASC,
        [LanguageDescriptorId] ASC,
        [LanguageUseTypeId] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentLanguageUse] ADD CONSTRAINT [AnonymizedStudentLanguageUse_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentLanguageUse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A specification of which written or spoken communication is being used.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentLanguageUse', @level2type=N'COLUMN', @level2name=N'LanguageDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentLanguageUse', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentLanguageUse', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentLanguageUse', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentLanguageUse', @level2type=N'COLUMN', @level2name=N'LanguageUseTypeId'
GO


/****** Table: [extension].[AnonymizedStudentRace] ******/

CREATE TABLE [extension].[AnonymizedStudentRace](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [RaceTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [AnonymizedStudentRace_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC,
        [FactsAsOfDate] ASC,
        [RaceTypeId] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentRace] ADD CONSTRAINT [AnonymizedStudentRace_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentRace'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentRace', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentRace', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentRace', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The data model allows for multiple entries so that each individual can specify all appropriate races.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentRace', @level2type=N'COLUMN', @level2name=N'RaceTypeId'
GO


/****** Table: [extension].[AnonymizedStudentSectionAssociation] ******/

CREATE TABLE [extension].[AnonymizedStudentSectionAssociation](
    [AnonymizedStudentIdentifier] [NVARCHAR](60) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [BeginDate] [DATE] NOT NULL,
    [EndDate] [DATE] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [AnonymizedStudentSectionAssociation_PK] PRIMARY KEY CLUSTERED (
        [AnonymizedStudentIdentifier] ASC,
        [BeginDate] ASC,
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactsAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[AnonymizedStudentSectionAssociation] ADD CONSTRAINT [AnonymizedStudentSectionAssociation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[AnonymizedStudentSectionAssociation] ADD CONSTRAINT [AnonymizedStudentSectionAssociation_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[AnonymizedStudentSectionAssociation] ADD CONSTRAINT [AnonymizedStudentSectionAssociation_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the association between an anonymized student and the Section they are enrolled in', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AnonymizedStudentSectionAssociation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Unique identifier for anonymized student', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'AnonymizedStudentIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Begin date for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The end date for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AnonymizedStudentSectionAssociation', @level2type=N'COLUMN', @level2name=N'EndDate'
GO


/****** Table: [extension].[Applicant] ******/

CREATE TABLE [extension].[Applicant](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [PersonalTitlePrefix] [NVARCHAR](30) NULL,
    [FirstName] [NVARCHAR](75) NOT NULL,
    [MiddleName] [NVARCHAR](75) NULL,
    [LastSurname] [NVARCHAR](75) NOT NULL,
    [GenerationCodeSuffix] [NVARCHAR](10) NULL,
    [MaidenName] [NVARCHAR](75) NULL,
    [SexTypeId] [INT] NULL,
    [BirthDate] [DATE] NULL,
    [HispanicLatinoEthnicity] [BIT] NULL,
    [CitizenshipStatusTypeId] [INT] NULL,
    [HighestCompletedLevelOfEducationDescriptorId] [INT] NULL,
    [YearsOfPriorProfessionalExperience] [DECIMAL](5, 2) NULL,
    [YearsOfPriorTeachingExperience] [DECIMAL](5, 2) NULL,
    [LoginId] [NVARCHAR](60) NULL,
    [HighlyQualifiedTeacher] [BIT] NULL,
    [HighlyQualifiedAcademicSubjectDescriptorId] [INT] NULL,
    [ProspectIdentifier] [NVARCHAR](32) NULL,
    [GenderTypeId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [Applicant_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[Applicant] ADD CONSTRAINT [Applicant_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[Applicant] ADD CONSTRAINT [Applicant_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[Applicant] ADD CONSTRAINT [Applicant_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A person who makes a formal application for an OpenStaffPosition.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'Applicant'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A prefix used to denote the title, degree, position, or seniority of the person.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'PersonalTitlePrefix'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'FirstName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A secondary name given to an individual at birth, baptism, or during another naming ceremony.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'MiddleName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name borne in common by members of a family.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'LastSurname'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'GenerationCodeSuffix'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The person''s maiden name.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'MaidenName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A person''s gender.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'SexTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an individual was born.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'BirthDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino".', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicity'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indicator of whether or not the person is a U.S. citizen.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'CitizenshipStatusTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The extent of formal instruction an individual has received (e.g., the highest grade in school completed or its equivalent or the highest degree received).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'HighestCompletedLevelOfEducationDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of years that an individual has previously held a similar professional position in one or more education institutions.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'YearsOfPriorProfessionalExperience'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of years that an individual has previously held a teaching position in one or more education institutions.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'YearsOfPriorTeachingExperience'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The login ID for the user; used for security access control interface.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'LoginId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of whether a teacher is classified as highly qualified for his/her assignment according to state definition. This attribute indicates the teacher is highly qualified for ALL Sections being taught.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'HighlyQualifiedTeacher'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The academic subject(s) in which the staff is deemed to be "highly qualified".', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'HighlyQualifiedAcademicSubjectDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) The gender with which a person associates.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Applicant', @level2type=N'COLUMN', @level2name=N'GenderTypeId'
GO


/****** Table: [extension].[ApplicantAddress] ******/

CREATE TABLE [extension].[ApplicantAddress](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [StreetNumberName] [NVARCHAR](150) NOT NULL,
    [ApartmentRoomSuiteNumber] [NVARCHAR](50) NULL,
    [BuildingSiteNumber] [NVARCHAR](20) NULL,
    [City] [NVARCHAR](30) NOT NULL,
    [StateAbbreviationTypeId] [INT] NOT NULL,
    [PostalCode] [NVARCHAR](17) NOT NULL,
    [NameOfCounty] [NVARCHAR](30) NULL,
    [CountyFIPSCode] [NVARCHAR](5) NULL,
    [Latitude] [NVARCHAR](20) NULL,
    [Longitude] [NVARCHAR](20) NULL,
    [BeginDate] [DATE] NULL,
    [EndDate] [DATE] NULL,
    [AddressTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantAddress_PK] PRIMARY KEY CLUSTERED (
        [AddressTypeId] ASC,
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantAddress] ADD CONSTRAINT [ApplicantAddress_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The set of elements that describes an address, including the street address, city, state, and ZIP code.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantAddress'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The street number and street name or post office box number of an address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'StreetNumberName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The apartment, room, or suite number of an address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'ApartmentRoomSuiteNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of the building on the site, if more than one building shares the same address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'BuildingSiteNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the city in which an address is located.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'City'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The abbreviation for the state (within the United States) or outlying area in which an address is located.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'StateAbbreviationTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The five or nine digit zip code or overseas postal code portion of an address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'PostalCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'NameOfCounty'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'CountyFIPSCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The geographic latitude of the physical address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'Latitude'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The geographic longitude of the physical address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'Longitude'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The first date the address is valid. For physical addresses, the date the person moved to that address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'EndDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAddress', @level2type=N'COLUMN', @level2name=N'AddressTypeId'
GO


/****** Table: [extension].[ApplicantAid] ******/

CREATE TABLE [extension].[ApplicantAid](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [BeginDate] [DATE] NULL,
    [EndDate] [DATE] NULL,
    [AidConditionDescription] [NVARCHAR](1024) NULL,
    [AidTypeDescriptorId] [INT] NOT NULL,
    [AidAmount] [MONEY] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantAid_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantAid] ADD CONSTRAINT [ApplicantAid_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) This entity represents the financial aid a person is awarded.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantAid'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAid', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAid', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the award was designated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAid', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the award was removed.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAid', @level2type=N'COLUMN', @level2name=N'EndDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the condition (e.g., placement in a high need school) under which the aid was given.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAid', @level2type=N'COLUMN', @level2name=N'AidConditionDescription'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The classification of financial aid awarded to a person for the academic term/year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAid', @level2type=N'COLUMN', @level2name=N'AidTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The amount of financial aid awarded to a person for the term/year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantAid', @level2type=N'COLUMN', @level2name=N'AidAmount'
GO


/****** Table: [extension].[ApplicantBackgroundCheck] ******/

CREATE TABLE [extension].[ApplicantBackgroundCheck](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [BackgroundCheckTypeDescriptorId] [INT] NOT NULL,
    [BackgroundCheckRequestedDate] [DATE] NOT NULL,
    [BackgroundCheckStatusDescriptorId] [INT] NULL,
    [BackgroundCheckCompletedDate] [DATE] NULL,
    [Fingerprint] [BIT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantBackgroundCheck_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [BackgroundCheckTypeDescriptorId] ASC,
        [EducationOrganizationId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantBackgroundCheck] ADD CONSTRAINT [ApplicantBackgroundCheck_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Applicant background check history and disposition.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantBackgroundCheck'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantBackgroundCheck', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantBackgroundCheck', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of background check (e.g., online, criminal, employment).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the background check was requested.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckRequestedDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The status of the background check (e.g., pending, under investigation, offense(s) found, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckStatusDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the background check was completed.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckCompletedDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) Indicates that a person has or has not completed a fingerprint.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantBackgroundCheck', @level2type=N'COLUMN', @level2name=N'Fingerprint'
GO


/****** Table: [extension].[ApplicantCredential] ******/

CREATE TABLE [extension].[ApplicantCredential](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [CredentialExpirationDate] [DATE] NULL,
    [TeachingCredentialBasisTypeId] [INT] NULL,
    [StateOfIssueStateAbbreviationTypeId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantCredential_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantCredential] ADD CONSTRAINT [ApplicantCredential_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The legal document or authorization giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantCredential'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredential', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredential', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredential', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredential', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredential', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredential', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredential', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential held by an individual will expire.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredential', @level2type=N'COLUMN', @level2name=N'CredentialExpirationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the pre-determined criteria for granting the teaching credential that an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredential', @level2type=N'COLUMN', @level2name=N'TeachingCredentialBasisTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a license/credential was issued.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredential', @level2type=N'COLUMN', @level2name=N'StateOfIssueStateAbbreviationTypeId'
GO


/****** Table: [extension].[ApplicantCredentialExtension] ******/

CREATE TABLE [extension].[ApplicantCredentialExtension](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [RevocationDate] [DATE] NULL,
    [RevocationReason] [NVARCHAR](40) NULL,
    [SuspensionDate] [DATE] NULL,
    [SuspensionReason] [NVARCHAR](40) NULL,
    [ValueTypeId] [INT] NOT NULL,
    CONSTRAINT [ApplicantCredentialExtension_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The legal document or authorization giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantCredentialExtension'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential held by an individual was revoked.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'RevocationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Expanded reason for the revocation of credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'RevocationReason'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential held by an individual was suspended.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'SuspensionDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Expanded reason for the suspension of credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'SuspensionReason'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtension', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO


/****** Table: [extension].[ApplicantCredentialExtensionBoardCertification] ******/

CREATE TABLE [extension].[ApplicantCredentialExtensionBoardCertification](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [BoardCertification] [BIT] NULL,
    [BoardCertificationDate] [DATE] NULL,
    [BoardCertificationTypeDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantCredentialExtensionBoardCertification_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantCredentialExtensionBoardCertification] ADD CONSTRAINT [ApplicantCredentialExtensionBoardCertification_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Board certification information for a individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantCredentialExtensionBoardCertification'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of whether a individual is board certified.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertification'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which a board certification was awarded.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertificationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of board certification awarded to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertificationTypeDescriptorId'
GO


/****** Table: [extension].[ApplicantCredentialExtensionCertificationExam] ******/

CREATE TABLE [extension].[ApplicantCredentialExtensionCertificationExam](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [CertificationExamTitle] [NVARCHAR](60) NOT NULL,
    [CertificationExamTypeDescriptorId] [INT] NULL,
    [CertificationExamOverallScore] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantCredentialExtensionCertificationExam_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantCredentialExtensionCertificationExam] ADD CONSTRAINT [ApplicantCredentialExtensionCertificationExam_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Certification information for a individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantCredentialExtensionCertificationExam'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the certification.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of certification exam that taken.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The overall score that was received on the certification exam.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamOverallScore'
GO


/****** Table: [extension].[ApplicantCredentialExtensionRecommendation] ******/

CREATE TABLE [extension].[ApplicantCredentialExtensionRecommendation](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantCredentialExtensionRecommendation_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantCredentialExtensionRecommendation] ADD CONSTRAINT [ApplicantCredentialExtensionRecommendation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the recommenation for the credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantCredentialExtensionRecommendation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO


/****** Table: [extension].[ApplicantCredentialExtensionRecommendingInstitution] ******/

CREATE TABLE [extension].[ApplicantCredentialExtensionRecommendingInstitution](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [RecommendingInstutionName] [NVARCHAR](75) NOT NULL,
    [RecommendingDate] [DATE] NULL,
    [RecommendingInstitutionCountryDescriptorId] [INT] NULL,
    [RecommendingInstutionStateAbbreviationTypeId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantCredentialExtensionRecommendingInstitution_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantCredentialExtensionRecommendingInstitution] ADD CONSTRAINT [ApplicantCredentialExtensionRecommendingInstitution_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information regarding the institution that is recommending a candidate for certification.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantCredentialExtensionRecommendingInstitution'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The full, legally accepted name of the institution.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstutionName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which a recommendation for a candidate is made.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The country that the recommendation for a candidate was made in.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstitutionCountryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a recommendation was issued.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstutionStateAbbreviationTypeId'
GO


/****** Table: [extension].[ApplicantDisability] ******/

CREATE TABLE [extension].[ApplicantDisability](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [DisabilityDescriptorId] [INT] NOT NULL,
    [DisabilityDiagnosis] [NVARCHAR](80) NULL,
    [OrderOfDisability] [INT] NULL,
    [DisabilityDeterminationSourceTypeId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantDisability_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [DisabilityDescriptorId] ASC,
        [EducationOrganizationId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantDisability] ADD CONSTRAINT [ApplicantDisability_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) The disability condition(s) that best describes an individual''s impairment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantDisability'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantDisability', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantDisability', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A disability category that describes a child''s impairment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantDisability', @level2type=N'COLUMN', @level2name=N'DisabilityDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A description of the disability diagnosis.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantDisability', @level2type=N'COLUMN', @level2name=N'DisabilityDiagnosis'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The order by severity of student''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantDisability', @level2type=N'COLUMN', @level2name=N'OrderOfDisability'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The source that provided the disability determination.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantDisability', @level2type=N'COLUMN', @level2name=N'DisabilityDeterminationSourceTypeId'
GO


/****** Table: [extension].[ApplicantElectronicMail] ******/

CREATE TABLE [extension].[ApplicantElectronicMail](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [ElectronicMailAddress] [NVARCHAR](128) NOT NULL,
    [ElectronicMailTypeId] [INT] NOT NULL,
    [PrimaryEmailAddressIndicator] [BIT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantElectronicMail_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [ElectronicMailTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantElectronicMail] ADD CONSTRAINT [ApplicantElectronicMail_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantElectronicMail'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantElectronicMail', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantElectronicMail', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The electronic mail (e-mail) address listed for an individual or organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantElectronicMail', @level2type=N'COLUMN', @level2name=N'ElectronicMailAddress'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of email listed for an individual or organization. For example: Home/Personal, Work, etc.)', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantElectronicMail', @level2type=N'COLUMN', @level2name=N'ElectronicMailTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the electronic mail address should be used as the principal electronic mail address for an individual or organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantElectronicMail', @level2type=N'COLUMN', @level2name=N'PrimaryEmailAddressIndicator'
GO


/****** Table: [extension].[ApplicantIdentificationDocument] ******/

CREATE TABLE [extension].[ApplicantIdentificationDocument](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [DocumentTitle] [NVARCHAR](60) NULL,
    [PersonalInformationVerificationTypeId] [INT] NOT NULL,
    [DocumentExpirationDate] [DATE] NULL,
    [IssuerDocumentIdentificationCode] [NVARCHAR](60) NULL,
    [IssuerName] [NVARCHAR](150) NULL,
    [IssuerCountryDescriptorId] [INT] NULL,
    [IdentificationDocumentUseTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantIdentificationDocument_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [IdentificationDocumentUseTypeId] ASC,
        [PersonalInformationVerificationTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantIdentificationDocument] ADD CONSTRAINT [ApplicantIdentificationDocument_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantIdentificationDocument'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantIdentificationDocument', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantIdentificationDocument', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title of the document given by the issuer.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantIdentificationDocument', @level2type=N'COLUMN', @level2name=N'DocumentTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The category of the document relative to its purpose.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantIdentificationDocument', @level2type=N'COLUMN', @level2name=N'PersonalInformationVerificationTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The day when the document  expires, if null then never expires.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantIdentificationDocument', @level2type=N'COLUMN', @level2name=N'DocumentExpirationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identifier on the issuer''s identification system.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantIdentificationDocument', @level2type=N'COLUMN', @level2name=N'IssuerDocumentIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the entity or institution that issued the document.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantIdentificationDocument', @level2type=N'COLUMN', @level2name=N'IssuerName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Country of origin of the document.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantIdentificationDocument', @level2type=N'COLUMN', @level2name=N'IssuerCountryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The primary function of the document used for establishing identity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantIdentificationDocument', @level2type=N'COLUMN', @level2name=N'IdentificationDocumentUseTypeId'
GO


/****** Table: [extension].[ApplicantInternationalAddress] ******/

CREATE TABLE [extension].[ApplicantInternationalAddress](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [AddressTypeId] [INT] NOT NULL,
    [AddressLine1] [NVARCHAR](150) NOT NULL,
    [AddressLine2] [NVARCHAR](150) NULL,
    [AddressLine3] [NVARCHAR](150) NULL,
    [AddressLine4] [NVARCHAR](150) NULL,
    [CountryDescriptorId] [INT] NOT NULL,
    [Latitude] [NVARCHAR](20) NULL,
    [Longitude] [NVARCHAR](20) NULL,
    [BeginDate] [DATE] NULL,
    [EndDate] [DATE] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantInternationalAddress_PK] PRIMARY KEY CLUSTERED (
        [AddressTypeId] ASC,
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantInternationalAddress] ADD CONSTRAINT [ApplicantInternationalAddress_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The set of elements that describes an international address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantInternationalAddress'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'AddressTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The first line of the address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'AddressLine1'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The second line of the address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'AddressLine2'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The third line of the address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'AddressLine3'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The fourth line of the address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'AddressLine4'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the country.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'CountryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The geographic latitude of the physical address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'Latitude'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The geographic longitude of the physical address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'Longitude'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The first date the address is valid. For physical addresses, the date the person moved to that address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantInternationalAddress', @level2type=N'COLUMN', @level2name=N'EndDate'
GO


/****** Table: [extension].[ApplicantLanguage] ******/

CREATE TABLE [extension].[ApplicantLanguage](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [LanguageDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantLanguage_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [LanguageDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantLanguage] ADD CONSTRAINT [ApplicantLanguage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The language(s) the individual uses to communicate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantLanguage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantLanguage', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantLanguage', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A specification of which written or spoken communication is being used.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantLanguage', @level2type=N'COLUMN', @level2name=N'LanguageDescriptorId'
GO


/****** Table: [extension].[ApplicantLanguageUse] ******/

CREATE TABLE [extension].[ApplicantLanguageUse](
    [LanguageDescriptorId] [INT] NOT NULL,
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [LanguageUseTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantLanguageUse_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [LanguageDescriptorId] ASC,
        [LanguageUseTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantLanguageUse] ADD CONSTRAINT [ApplicantLanguageUse_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantLanguageUse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A specification of which written or spoken communication is being used.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantLanguageUse', @level2type=N'COLUMN', @level2name=N'LanguageDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantLanguageUse', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantLanguageUse', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A description of how the language is used (e.g. Home Language, Native Language, Spoken Language).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantLanguageUse', @level2type=N'COLUMN', @level2name=N'LanguageUseTypeId'
GO


/****** Table: [extension].[ApplicantRace] ******/

CREATE TABLE [extension].[ApplicantRace](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [RaceTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantRace_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [RaceTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantRace] ADD CONSTRAINT [ApplicantRace_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantRace'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantRace', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantRace', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantRace', @level2type=N'COLUMN', @level2name=N'RaceTypeId'
GO


/****** Table: [extension].[ApplicantStaffIdentificationCode] ******/

CREATE TABLE [extension].[ApplicantStaffIdentificationCode](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [IdentificationCode] [NVARCHAR](60) NOT NULL,
    [StaffIdentificationSystemDescriptorId] [INT] NOT NULL,
    [AssigningOrganizationIdentificationCode] [NVARCHAR](60) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantStaffIdentificationCode_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [StaffIdentificationSystemDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantStaffIdentificationCode] ADD CONSTRAINT [ApplicantStaffIdentificationCode_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to an applicant by a school, school system, a state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantStaffIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantStaffIdentificationCode', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantStaffIdentificationCode', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a staff member by a school, school system, a state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantStaffIdentificationCode', @level2type=N'COLUMN', @level2name=N'IdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A coding scheme that is used for identification and record-keeping purposes by schools, social services, or other agencies to refer to a staff member.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantStaffIdentificationCode', @level2type=N'COLUMN', @level2name=N'StaffIdentificationSystemDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The organization code or name assigning the staff Identification Code.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantStaffIdentificationCode', @level2type=N'COLUMN', @level2name=N'AssigningOrganizationIdentificationCode'
GO


/****** Table: [extension].[ApplicantTeacherPreparationProgram] ******/

CREATE TABLE [extension].[ApplicantTeacherPreparationProgram](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [TeacherPreparationProgramName] [NVARCHAR](75) NOT NULL,
    [TeacherPreparationProgramIdentifier] [NVARCHAR](75) NULL,
    [TeacherPreparationProgramTypeDescriptorId] [INT] NOT NULL,
    [NameOfInstitution] [NVARCHAR](75) NOT NULL,
    [MajorSpecialization] [NVARCHAR](75) NOT NULL,
    [GPA] [DECIMAL](18, 4) NULL,
    [LevelOfDegreeAwardedDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantTeacherPreparationProgram_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [TeacherPreparationProgramName] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantTeacherPreparationProgram] ADD CONSTRAINT [ApplicantTeacherPreparationProgram_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The Teacher Preparation Program(s) completed by the teacher.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantTeacherPreparationProgram'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the Teacher Preparation Program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An identifier assigned to the teacher preparation program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of teacher prep program (e.g., college, alternative, TFA, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the organization providing the teacher preparation program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'NameOfInstitution'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The major area for a degree or area of specialization for a certificate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'MajorSpecialization'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The final GPA for the teacher achieved in the program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'GPA'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The level of degree awarded by the teacher preparation program to the person (e.g., Certificate Only, Bachelor''s, Master''s, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'LevelOfDegreeAwardedDescriptorId'
GO


/****** Table: [extension].[ApplicantTeacherPreparationProgramAddress] ******/

CREATE TABLE [extension].[ApplicantTeacherPreparationProgramAddress](
    [TeacherPreparationProgramName] [NVARCHAR](75) NOT NULL,
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [StreetNumberName] [NVARCHAR](150) NOT NULL,
    [ApartmentRoomSuiteNumber] [NVARCHAR](50) NULL,
    [BuildingSiteNumber] [NVARCHAR](20) NULL,
    [City] [NVARCHAR](30) NOT NULL,
    [StateAbbreviationTypeId] [INT] NOT NULL,
    [PostalCode] [NVARCHAR](17) NOT NULL,
    [NameOfCounty] [NVARCHAR](30) NULL,
    [CountyFIPSCode] [NVARCHAR](5) NULL,
    [Latitude] [NVARCHAR](20) NULL,
    [Longitude] [NVARCHAR](20) NULL,
    [BeginDate] [DATE] NULL,
    [EndDate] [DATE] NULL,
    [AddressTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantTeacherPreparationProgramAddress_PK] PRIMARY KEY CLUSTERED (
        [AddressTypeId] ASC,
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [TeacherPreparationProgramName] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantTeacherPreparationProgramAddress] ADD CONSTRAINT [ApplicantTeacherPreparationProgramAddress_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The address of the institution providing the teacher prep program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantTeacherPreparationProgramAddress'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the Teacher Preparation Program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The street number and street name or post office box number of an address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'StreetNumberName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The apartment, room, or suite number of an address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'ApartmentRoomSuiteNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of the building on the site, if more than one building shares the same address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'BuildingSiteNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the city in which an address is located.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'City'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The abbreviation for the state (within the United States) or outlying area in which an address is located.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'StateAbbreviationTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The five or nine digit zip code or overseas postal code portion of an address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'PostalCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'NameOfCounty'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'CountyFIPSCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The geographic latitude of the physical address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'Latitude'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The geographic longitude of the physical address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'Longitude'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The first date the address is valid. For physical addresses, the date the person moved to that address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'EndDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'AddressTypeId'
GO


/****** Table: [extension].[ApplicantTelephone] ******/

CREATE TABLE [extension].[ApplicantTelephone](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [TelephoneNumber] [NVARCHAR](24) NOT NULL,
    [TelephoneNumberTypeId] [INT] NOT NULL,
    [OrderOfPriority] [INT] NULL,
    [TextMessageCapabilityIndicator] [BIT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantTelephone_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [TelephoneNumberTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantTelephone] ADD CONSTRAINT [ApplicantTelephone_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The 10-digit telephone number, including the area code, for the person.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantTelephone'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTelephone', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTelephone', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The telephone number including the area code, and extension, if applicable.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTelephone', @level2type=N'COLUMN', @level2name=N'TelephoneNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of communication number listed for an individual or organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTelephone', @level2type=N'COLUMN', @level2name=N'TelephoneNumberTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTelephone', @level2type=N'COLUMN', @level2name=N'OrderOfPriority'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantTelephone', @level2type=N'COLUMN', @level2name=N'TextMessageCapabilityIndicator'
GO


/****** Table: [extension].[ApplicantVisa] ******/

CREATE TABLE [extension].[ApplicantVisa](
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [VisaTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ApplicantVisa_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [VisaTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ApplicantVisa] ADD CONSTRAINT [ApplicantVisa_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indicator of a non-US citizen''s Visa type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ApplicantVisa'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantVisa', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantVisa', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indicator of a non-US citizen''s Visa type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ApplicantVisa', @level2type=N'COLUMN', @level2name=N'VisaTypeId'
GO


/****** Table: [extension].[AssessmentExtension] ******/

CREATE TABLE [extension].[AssessmentExtension](
    [ProgramGatewayDescriptorId] [INT] NULL,
    [AssessmentTitle] [NVARCHAR](60) NOT NULL,
    [AcademicSubjectDescriptorId] [INT] NOT NULL,
    [AssessedGradeLevelDescriptorId] [INT] NOT NULL,
    [Version] [INT] NOT NULL,
    CONSTRAINT [AssessmentExtension_PK] PRIMARY KEY CLUSTERED (
        [AcademicSubjectDescriptorId] ASC,
        [AssessedGradeLevelDescriptorId] ASC,
        [AssessmentTitle] ASC,
        [Version] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'AssessmentExtension'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the program gateway an assessment may be associated with for continuation in the program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AssessmentExtension', @level2type=N'COLUMN', @level2name=N'ProgramGatewayDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the Assessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AssessmentExtension', @level2type=N'COLUMN', @level2name=N'AssessmentTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AssessmentExtension', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The typical grade level for which an assessment is designed. If the assessment spans a range of grades, then this attribute holds the highest grade assessed. If only one grade level is assessed then only this attribute is used. For example:
Adult
Prekindergarten
First grade
Second grade
...', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AssessmentExtension', @level2type=N'COLUMN', @level2name=N'AssessedGradeLevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The version identifier for the assessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'AssessmentExtension', @level2type=N'COLUMN', @level2name=N'Version'
GO


/****** Table: [extension].[BackgroundCheckStatusDescriptor] ******/

CREATE TABLE [extension].[BackgroundCheckStatusDescriptor](
    [BackgroundCheckStatusDescriptorId] [INT] NOT NULL,
    [BackgroundCheckStatusTypeId] [INT] NULL,
    CONSTRAINT [BackgroundCheckStatusDescriptor_PK] PRIMARY KEY CLUSTERED (
        [BackgroundCheckStatusDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This descriptor holds the  status of the background check (e.g., pending, under investigation, offense(s) found, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'BackgroundCheckStatusDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckStatusDescriptor', @level2type=N'COLUMN', @level2name=N'BackgroundCheckStatusDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckStatusDescriptor', @level2type=N'COLUMN', @level2name=N'BackgroundCheckStatusTypeId'
GO


/****** Table: [extension].[BackgroundCheckStatusType] ******/

CREATE TABLE [extension].[BackgroundCheckStatusType](
    [BackgroundCheckStatusTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [BackgroundCheckStatusType_PK] PRIMARY KEY CLUSTERED (
        [BackgroundCheckStatusTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[BackgroundCheckStatusType] ADD CONSTRAINT [BackgroundCheckStatusType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[BackgroundCheckStatusType] ADD CONSTRAINT [BackgroundCheckStatusType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[BackgroundCheckStatusType] ADD CONSTRAINT [BackgroundCheckStatusType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The status of the background check (e.g., pending, under investigation, offense(s) found, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'BackgroundCheckStatusType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for BackgroundCheckStatus', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckStatusType', @level2type=N'COLUMN', @level2name=N'BackgroundCheckStatusTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckStatusType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the BackgroundCheckStatus type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckStatusType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the BackgroundCheckStatus type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckStatusType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[BackgroundCheckType] ******/

CREATE TABLE [extension].[BackgroundCheckType](
    [BackgroundCheckTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [BackgroundCheckType_PK] PRIMARY KEY CLUSTERED (
        [BackgroundCheckTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[BackgroundCheckType] ADD CONSTRAINT [BackgroundCheckType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[BackgroundCheckType] ADD CONSTRAINT [BackgroundCheckType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[BackgroundCheckType] ADD CONSTRAINT [BackgroundCheckType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of background check (e.g., online, criminal, employment).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'BackgroundCheckType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for BackgroundCheck', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckType', @level2type=N'COLUMN', @level2name=N'BackgroundCheckTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the BackgroundCheck type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the BackgroundCheck type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[BackgroundCheckTypeDescriptor] ******/

CREATE TABLE [extension].[BackgroundCheckTypeDescriptor](
    [BackgroundCheckTypeDescriptorId] [INT] NOT NULL,
    [BackgroundCheckTypeId] [INT] NULL,
    CONSTRAINT [BackgroundCheckTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [BackgroundCheckTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of background check (e.g., online, criminal, employment).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'BackgroundCheckTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckTypeDescriptor', @level2type=N'COLUMN', @level2name=N'BackgroundCheckTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BackgroundCheckTypeDescriptor', @level2type=N'COLUMN', @level2name=N'BackgroundCheckTypeId'
GO


/****** Table: [extension].[BoardCertificationType] ******/

CREATE TABLE [extension].[BoardCertificationType](
    [BoardCertificationTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [BoardCertificationType_PK] PRIMARY KEY CLUSTERED (
        [BoardCertificationTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[BoardCertificationType] ADD CONSTRAINT [BoardCertificationType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[BoardCertificationType] ADD CONSTRAINT [BoardCertificationType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[BoardCertificationType] ADD CONSTRAINT [BoardCertificationType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the board certiciation board types.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'BoardCertificationType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for BoardCertification', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BoardCertificationType', @level2type=N'COLUMN', @level2name=N'BoardCertificationTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BoardCertificationType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the BoardCertification type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BoardCertificationType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the BoardCertification type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BoardCertificationType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[BoardCertificationTypeDescriptor] ******/

CREATE TABLE [extension].[BoardCertificationTypeDescriptor](
    [BoardCertificationTypeDescriptorId] [INT] NOT NULL,
    [BoardCertificationTypeId] [INT] NOT NULL,
    CONSTRAINT [BoardCertificationTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [BoardCertificationTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the  type of board certification awarded to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'BoardCertificationTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BoardCertificationTypeDescriptor', @level2type=N'COLUMN', @level2name=N'BoardCertificationTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'BoardCertificationTypeDescriptor', @level2type=N'COLUMN', @level2name=N'BoardCertificationTypeId'
GO


/****** Table: [extension].[CertificationExamType] ******/

CREATE TABLE [extension].[CertificationExamType](
    [CertificationExamTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [CertificationExamType_PK] PRIMARY KEY CLUSTERED (
        [CertificationExamTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CertificationExamType] ADD CONSTRAINT [CertificationExamType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[CertificationExamType] ADD CONSTRAINT [CertificationExamType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[CertificationExamType] ADD CONSTRAINT [CertificationExamType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the certification exam types.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CertificationExamType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for CertificationExam', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CertificationExamType', @level2type=N'COLUMN', @level2name=N'CertificationExamTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CertificationExamType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the CertificationExam type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CertificationExamType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the CertificationExam type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CertificationExamType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[CertificationExamTypeDescriptor] ******/

CREATE TABLE [extension].[CertificationExamTypeDescriptor](
    [CertificationExamTypeDescriptorId] [INT] NOT NULL,
    [CertificationExamTypeId] [INT] NOT NULL,
    CONSTRAINT [CertificationExamTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [CertificationExamTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the  type of certification exam that was taken.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CertificationExamTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CertificationExamTypeDescriptor', @level2type=N'COLUMN', @level2name=N'CertificationExamTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CertificationExamTypeDescriptor', @level2type=N'COLUMN', @level2name=N'CertificationExamTypeId'
GO


/****** Table: [extension].[CourseCourseTranscriptFact] ******/

CREATE TABLE [extension].[CourseCourseTranscriptFact](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [CourseTitle] [NVARCHAR](60) NULL,
    [AggregatedGPAMax] [DECIMAL](18, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [CourseCourseTranscriptFact_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseCourseTranscriptFact] ADD CONSTRAINT [CourseCourseTranscriptFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[CourseCourseTranscriptFact] ADD CONSTRAINT [CourseCourseTranscriptFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[CourseCourseTranscriptFact] ADD CONSTRAINT [CourseCourseTranscriptFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the final letter grade earned of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseCourseTranscriptFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated	SchoolYear', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the final letter grade earned of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'CourseTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The maximum grade point average a student can receive in the course', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'AggregatedGPAMax'
GO


/****** Table: [extension].[CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned] ******/

CREATE TABLE [extension].[CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [FinalLetterGrade] [NVARCHAR](20) NOT NULL,
    [LetterGradeTypeNumber] [INT] NOT NULL,
    [LetterGradeTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned] ADD CONSTRAINT [CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the final letter grade earned of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The final indicator of student performance in a class as submitted by the instructor.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'FinalLetterGrade'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students receiving a letter grade by letter grade type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'LetterGradeTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student receiving a letter grade by type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'LetterGradeTypePercentage'
GO


/****** Table: [extension].[CourseCourseTranscriptFactAggregatedNumericGradeEarned] ******/

CREATE TABLE [extension].[CourseCourseTranscriptFactAggregatedNumericGradeEarned](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [AverageFinalNumericGradeEarned] [DECIMAL](9, 2) NOT NULL,
    [NumericGradeNCount] [INT] NULL,
    [NumericGradeStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseCourseTranscriptFactAggregatedNumericGradeEarned_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseCourseTranscriptFactAggregatedNumericGradeEarned] ADD CONSTRAINT [CourseCourseTranscriptFactAggregatedNumericGradeEarned_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the numeric grade received by the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseCourseTranscriptFactAggregatedNumericGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average final numeric grade for the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'AverageFinalNumericGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average numeric grade for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'NumericGradeNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average numeric grade for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'NumericGradeStandardDeviation'
GO


/****** Table: [extension].[CourseCourseTranscriptFactStudentsEnrolled] ******/

CREATE TABLE [extension].[CourseCourseTranscriptFactStudentsEnrolled](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseCourseTranscriptFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseCourseTranscriptFactStudentsEnrolled] ADD CONSTRAINT [CourseCourseTranscriptFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseCourseTranscriptFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[CourseStudentAcademicRecordFact] ******/

CREATE TABLE [extension].[CourseStudentAcademicRecordFact](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [CourseStudentAcademicRecordFact_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentAcademicRecordFact] ADD CONSTRAINT [CourseStudentAcademicRecordFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[CourseStudentAcademicRecordFact] ADD CONSTRAINT [CourseStudentAcademicRecordFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[CourseStudentAcademicRecordFact] ADD CONSTRAINT [CourseStudentAcademicRecordFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Complex type that provides data about a group of student and their academic record', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentAcademicRecordFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO


/****** Table: [extension].[CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] ******/

CREATE TABLE [extension].[CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [GradePointAverage] [DECIMAL](18, 4) NOT NULL,
    [GradePointNCount] [INT] NULL,
    [GradePointStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] ADD CONSTRAINT [CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the cumulative grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average cumulative grade point average for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average grade point for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointStandardDeviation'
GO


/****** Table: [extension].[CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage] ******/

CREATE TABLE [extension].[CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [GradePointAverage] [DECIMAL](18, 4) NOT NULL,
    [GradePointNCount] [INT] NULL,
    [GradePointStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage] ADD CONSTRAINT [CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the cumulative grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average cumulative grade point average for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average grade point for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointStandardDeviation'
GO


/****** Table: [extension].[CourseStudentAcademicRecordFactStudentsEnrolled] ******/

CREATE TABLE [extension].[CourseStudentAcademicRecordFactStudentsEnrolled](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentAcademicRecordFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentAcademicRecordFactStudentsEnrolled] ADD CONSTRAINT [CourseStudentAcademicRecordFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentAcademicRecordFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[CourseStudentAssessmentFact] ******/

CREATE TABLE [extension].[CourseStudentAssessmentFact](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [AssessmentTitle] [NVARCHAR](60) NULL,
    [AssessmentCategoryDescriptorId] [INT] NULL,
    [AcademicSubjectDescriptorId] [INT] NULL,
    [GradeLevelDescriptorId] [INT] NULL,
    [AdministrationDate] [DATE] NULL,
    [TermDescriptorId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [CourseStudentAssessmentFact_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [SchoolYearTakenSchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentAssessmentFact] ADD CONSTRAINT [CourseStudentAssessmentFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[CourseStudentAssessmentFact] ADD CONSTRAINT [CourseStudentAssessmentFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[CourseStudentAssessmentFact] ADD CONSTRAINT [CourseStudentAssessmentFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Complex type that provides data about a group of students and their assesssment score results and performance levels', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentAssessmentFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title if any specific assessment given to a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AssessmentTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The category of an assessment based on format and content. For example: Achievement test Advanced placement test Alternate assessment\grade-level standards Attitudinal test Cognitive and perceptual skills test ...', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AssessmentCategoryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The academic subject associated with a CourseStudentAssessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level associated with a CourseStudentAssessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'GradeLevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date a specific assessment was administered to a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AdministrationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term in which the assessment was administered', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO


/****** Table: [extension].[CourseStudentAssessmentFactAggregatedPerformanceLevel] ******/

CREATE TABLE [extension].[CourseStudentAssessmentFactAggregatedPerformanceLevel](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [PerformanceLevelMetNumber] [INT] NULL,
    [PerformanceLevelMetPercentage] [DECIMAL](5, 4) NULL,
    [PerformanceLevelTypeNumber] [INT] NULL,
    [PerformanceLevelTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentAssessmentFactAggregatedPerformanceLevel_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [SchoolYearTakenSchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentAssessmentFactAggregatedPerformanceLevel] ADD CONSTRAINT [CourseStudentAssessmentFactAggregatedPerformanceLevel_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the performance level for an assessment of a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentAssessmentFactAggregatedPerformanceLevel'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who met the performance level', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelMetNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who met the performance level', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelMetPercentage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who achieved each performance level by performance level type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who achieved perfromance level by each performance level type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelTypePercentage'
GO


/****** Table: [extension].[CourseStudentAssessmentFactAggregatedScoreResult] ******/

CREATE TABLE [extension].[CourseStudentAssessmentFactAggregatedScoreResult](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [AssessmentReportingMethodTypeId] [INT] NOT NULL,
    [AverageScoreResultDataTypeResultDatatypeTypeId] [INT] NOT NULL,
    [AverageScoreResult] [NVARCHAR](35) NOT NULL,
    [ScoreNCount] [INT] NULL,
    [ScoreStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentAssessmentFactAggregatedScoreResult_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [SchoolYearTakenSchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentAssessmentFactAggregatedScoreResult] ADD CONSTRAINT [CourseStudentAssessmentFactAggregatedScoreResult_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the score from an assessment of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentAssessmentFactAggregatedScoreResult'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The method that the administrator of the assessment uses to report the performance and achievement of all Students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'AssessmentReportingMethodTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'AverageScoreResultDataTypeResultDatatypeTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A meaningful average score or statistical expression of the performance of an group. The results can be expressed as a number, percentile, range, level, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'AverageScoreResult'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average assessment score for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'ScoreNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average assessment score for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'ScoreStandardDeviation'
GO


/****** Table: [extension].[CourseStudentAssessmentFactStudentsEnrolled] ******/

CREATE TABLE [extension].[CourseStudentAssessmentFactStudentsEnrolled](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentAssessmentFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [SchoolYearTakenSchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentAssessmentFactStudentsEnrolled] ADD CONSTRAINT [CourseStudentAssessmentFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentAssessmentFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[CourseStudentFact] ******/

CREATE TABLE [extension].[CourseStudentFact](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [CourseStudentFact_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFact] ADD CONSTRAINT [CourseStudentFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[CourseStudentFact] ADD CONSTRAINT [CourseStudentFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[CourseStudentFact] ADD CONSTRAINT [CourseStudentFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This domain entity collects data for aggregated level students with whom the teacher candidate is associated through field work or student teaching	AggregatedStudentFact', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFact', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO


/****** Table: [extension].[CourseStudentFactAggregatedELLEnrollment] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedELLEnrollment](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [ELLEnrollmentNumber] [INT] NULL,
    [ELLEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedELLEnrollment_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedELLEnrollment] ADD CONSTRAINT [CourseStudentFactAggregatedELLEnrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the ELL enrollment of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedELLEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who are ELL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ELLEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who are identified as ELL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ELLEnrollmentPercentage'
GO


/****** Table: [extension].[CourseStudentFactAggregatedESLEnrollment] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedESLEnrollment](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [ESLEnrollmentNumber] [INT] NULL,
    [ESLEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedESLEnrollment_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedESLEnrollment] ADD CONSTRAINT [CourseStudentFactAggregatedESLEnrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the ESL enrollment of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedESLEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who are ESL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ESLEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who are identified as ESL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ESLEnrollmentPercentage'
GO


/****** Table: [extension].[CourseStudentFactAggregatedGender] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedGender](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [GenderTypeId] [INT] NULL,
    [GenderTypeNumber] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedGender_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedGender] ADD CONSTRAINT [CourseStudentFactAggregatedGender_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the gender', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedGender'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The gender with which a person associates.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'GenderTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who associate with each gender type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'GenderTypeNumber'
GO


/****** Table: [extension].[CourseStudentFactAggregatedHispanicLatinoEthnicity] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedHispanicLatinoEthnicity](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [HispanicLatinoEthnicity] [BIT] NOT NULL,
    [HispanicLatinoEthnicityNumber] [INT] NULL,
    [HispanicLatinoEthnicityPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedHispanicLatinoEthnicity_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedHispanicLatinoEthnicity] ADD CONSTRAINT [CourseStudentFactAggregatedHispanicLatinoEthnicity_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the Eth ethnicity of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedHispanicLatinoEthnicity'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicity'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who are hispanic/latino', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicityNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who are identified as hispanic/latino', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicityPercentage'
GO


/****** Table: [extension].[CourseStudentFactAggregatedLanguage] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedLanguage](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [LanguageDescriptorId] [INT] NULL,
    [LanguageTypeNumber] [INT] NULL,
    [LanguageTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedLanguage_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedLanguage] ADD CONSTRAINT [CourseStudentFactAggregatedLanguage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The data about the language', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedLanguage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the language of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'LanguageDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student by each lanugage type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'LanguageTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student by language type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'LanguageTypePercentage'
GO


/****** Table: [extension].[CourseStudentFactAggregatedRace] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedRace](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [RaceTypeId] [INT] NULL,
    [RaceTypeNumber] [INT] NULL,
    [RaceTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedRace_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedRace] ADD CONSTRAINT [CourseStudentFactAggregatedRace_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the race of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedRace'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'RaceTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students by each race type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'RaceTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students by each race type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'RaceTypePercentage'
GO


/****** Table: [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [SchoolFoodServicesEligibilityDescriptorId] [INT] NULL,
    [TypeNumber] [INT] NULL,
    [TypePercentage] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedSchoolFoodServicesEligibility_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility] ADD CONSTRAINT [CourseStudentFactAggregatedSchoolFoodServicesEligibility_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies if the student is eligible for Free and Reduce Price Lunch', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedSchoolFoodServicesEligibility'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the students who are enrolled based on School Food Services Eligibility', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'SchoolFoodServicesEligibilityDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students eligibile for SchoolFoodServicesEligibility by category', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'TypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who are eligible for SchoolFoodServicesEligibility by type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'TypePercentage'
GO


/****** Table: [extension].[CourseStudentFactAggregatedSection504Enrollment] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedSection504Enrollment](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [Number504Enrolled] [INT] NULL,
    [Percentage504Enrolled] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedSection504Enrollment_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedSection504Enrollment] ADD CONSTRAINT [CourseStudentFactAggregatedSection504Enrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the students who are enrolled in a 504 program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedSection504Enrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who are enrolled in a 504 program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'Number504Enrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who are enrolled in a 504 program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'Percentage504Enrolled'
GO


/****** Table: [extension].[CourseStudentFactAggregatedSex] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedSex](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [SexTypeId] [INT] NOT NULL,
    [SexTypeNumber] [INT] NULL,
    [SexTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedSex_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedSex] ADD CONSTRAINT [CourseStudentFactAggregatedSex_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the sex of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedSex'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A person''s gender.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SexTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students by each sex type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SexTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student by each sex type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SexTypePercentage'
GO


/****** Table: [extension].[CourseStudentFactAggregatedSPED] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedSPED](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [SPEDEnrollmentNumber] [INT] NULL,
    [SPEDEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedSPED_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedSPED] ADD CONSTRAINT [CourseStudentFactAggregatedSPED_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the enrollment in SPED of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedSPED'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students enrolled in SPED', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SPEDEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student enrolled in a SPED program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SPEDEnrollmentPercentage'
GO


/****** Table: [extension].[CourseStudentFactAggregatedTitleIEnrollment] ******/

CREATE TABLE [extension].[CourseStudentFactAggregatedTitleIEnrollment](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [TitleIEnrollmentNumber] [INT] NULL,
    [TitleIEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactAggregatedTitleIEnrollment_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactAggregatedTitleIEnrollment] ADD CONSTRAINT [CourseStudentFactAggregatedTitleIEnrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the enrollment in Title I of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactAggregatedTitleIEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students eligible for Title I', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'TitleIEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who are Title I eligible', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'TitleIEnrollmentPercentage'
GO


/****** Table: [extension].[CourseStudentFactDisabilityByType] ******/

CREATE TABLE [extension].[CourseStudentFactDisabilityByType](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [DisabilityDescriptorId] [INT] NULL,
    [Percentage] [DECIMAL](5, 4) NOT NULL,
    [TypeNumber] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactDisabilityByType_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactDisabilityByType] ADD CONSTRAINT [CourseStudentFactDisabilityByType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Students in the course who have a disability by disability type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactDisabilityByType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the diability of a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'DisabilityDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who have a disability by each specific disability type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'Percentage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who have a disability by disability type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'TypeNumber'
GO


/****** Table: [extension].[CourseStudentFactStudentsEnrolled] ******/

CREATE TABLE [extension].[CourseStudentFactStudentsEnrolled](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactStudentsEnrolled] ADD CONSTRAINT [CourseStudentFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[CourseStudentFactTotalStudentsDisabled] ******/

CREATE TABLE [extension].[CourseStudentFactTotalStudentsDisabled](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [StudentsDisabledNumber] [INT] NULL,
    [StudentsDisabledPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseStudentFactTotalStudentsDisabled_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseStudentFactTotalStudentsDisabled] ADD CONSTRAINT [CourseStudentFactTotalStudentsDisabled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'?', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseStudentFactTotalStudentsDisabled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who have a disability', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'StudentsDisabledNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Percentage of students who have a disability', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'StudentsDisabledPercentage'
GO


/****** Table: [extension].[CourseSurveyResponseFact] ******/

CREATE TABLE [extension].[CourseSurveyResponseFact](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [CourseSurveyResponseFact_PK] PRIMARY KEY CLUSTERED (
        [CourseCode] ASC,
        [EducationOrganizationId] ASC,
        [FactsAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseSurveyResponseFact] ADD CONSTRAINT [CourseSurveyResponseFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[CourseSurveyResponseFact] ADD CONSTRAINT [CourseSurveyResponseFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[CourseSurveyResponseFact] ADD CONSTRAINT [CourseSurveyResponseFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Survey response data provided at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseSurveyResponseFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for the aggregated survey data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of-date for the aggregated survey data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO


/****** Table: [extension].[CourseSurveySectionResponseRatingFact] ******/

CREATE TABLE [extension].[CourseSurveySectionResponseRatingFact](
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [SurveySectionTitle] [NVARCHAR](50) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [CourseSurveySectionResponseRatingFact_PK] PRIMARY KEY CLUSTERED (
        [SurveyIdentifier] ASC,
        [SurveySectionTitle] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseSurveySectionResponseRatingFact] ADD CONSTRAINT [CourseSurveySectionResponseRatingFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[CourseSurveySectionResponseRatingFact] ADD CONSTRAINT [CourseSurveySectionResponseRatingFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[CourseSurveySectionResponseRatingFact] ADD CONSTRAINT [CourseSurveySectionResponseRatingFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Responses to survey sections collected at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseSurveySectionResponseRatingFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of-date for the aggregated survey data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or label for the survey section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'SurveySectionTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO


/****** Table: [extension].[CourseSurveySectionResponseRatingFactAggregatedNumericResponse] ******/

CREATE TABLE [extension].[CourseSurveySectionResponseRatingFactAggregatedNumericResponse](
    [SurveySectionTitle] [NVARCHAR](50) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [AverageNumericResponse] [DECIMAL](18, 4) NOT NULL,
    [NumericResponseNCount] [INT] NULL,
    [NumericResponseStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [CourseSurveySectionResponseRatingFactAggregatedNumericResponse_PK] PRIMARY KEY CLUSTERED (
        [SurveyIdentifier] ASC,
        [SurveySectionTitle] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[CourseSurveySectionResponseRatingFactAggregatedNumericResponse] ADD CONSTRAINT [CourseSurveySectionResponseRatingFactAggregatedNumericResponse_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average of the numeric responses to survey sections collected at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'CourseSurveySectionResponseRatingFactAggregatedNumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or label for the survey section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'SurveySectionTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average numeric response for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'AverageNumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average numeric grade for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'NumericResponseNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average numeric grade for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'CourseSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'NumericResponseStandardDeviation'
GO


/****** Table: [extension].[EducationOrganizationCourseTranscriptFact] ******/

CREATE TABLE [extension].[EducationOrganizationCourseTranscriptFact](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [CourseTitle] [NVARCHAR](60) NULL,
    [AggregatedGPAMax] [DECIMAL](18, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [EducationOrganizationCourseTranscriptFact_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFact] ADD CONSTRAINT [EducationOrganizationCourseTranscriptFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFact] ADD CONSTRAINT [EducationOrganizationCourseTranscriptFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFact] ADD CONSTRAINT [EducationOrganizationCourseTranscriptFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the final letter grade earned of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationCourseTranscriptFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the final letter grade earned of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'CourseTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The maximum grade point average a student can receive in the course', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'AggregatedGPAMax'
GO


/****** Table: [extension].[EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned] ******/

CREATE TABLE [extension].[EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [FinalLetterGrade] [NVARCHAR](20) NOT NULL,
    [LetterGradeTypeNumber] [INT] NOT NULL,
    [LetterGradeTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned] ADD CONSTRAINT [EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the final letter grade earned of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The final indicator of student performance in a class as submitted by the instructor.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'FinalLetterGrade'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students receiving a letter grade by letter grade type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'LetterGradeTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student receiving a letter grade by type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'LetterGradeTypePercentage'
GO


/****** Table: [extension].[EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned] ******/

CREATE TABLE [extension].[EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [AverageFinalNumericGradeEarned] [DECIMAL](9, 2) NOT NULL,
    [NumericGradeNCount] [INT] NULL,
    [NumericGradeStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned] ADD CONSTRAINT [EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the numeric grade received by the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average final numeric grade for the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'AverageFinalNumericGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average numeric grade for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'NumericGradeNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average numeric grade for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'NumericGradeStandardDeviation'
GO


/****** Table: [extension].[EducationOrganizationCourseTranscriptFactStudentsEnrolled] ******/

CREATE TABLE [extension].[EducationOrganizationCourseTranscriptFactStudentsEnrolled](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationCourseTranscriptFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFactStudentsEnrolled] ADD CONSTRAINT [EducationOrganizationCourseTranscriptFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationCourseTranscriptFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[EducationOrganizationFacts] ******/

CREATE TABLE [extension].[EducationOrganizationFacts](
    [FactsAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [NumberAdministratorsEmployed] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [NumberTeachersEmployed] [INT] NULL,
    [PercentStudentsFreeReducedLunch] [DECIMAL](5, 4) NULL,
    [PercentStudentsLimitedEnglishProficiency] [DECIMAL](5, 4) NULL,
    [PercentStudentsSpecialEducation] [DECIMAL](5, 4) NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [HiringRate] [DECIMAL](5, 4) NULL,
    [RetentionRate] [DECIMAL](5, 4) NULL,
    [RetirementRate] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [EducationOrganizationFacts_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationFacts] ADD CONSTRAINT [EducationOrganizationFacts_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[EducationOrganizationFacts] ADD CONSTRAINT [EducationOrganizationFacts_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[EducationOrganizationFacts] ADD CONSTRAINT [EducationOrganizationFacts_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Selective fact(s) about the education organization used for comparative analysis.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationFacts'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of date for the fact(s) about the Education Organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year associated with the fact(s).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of administrators employed by education organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'NumberAdministratorsEmployed'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Enrollment count of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Number of teachers employed by education organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'NumberTeachersEmployed'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percent of students eligible for free and reduced lunches.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'PercentStudentsFreeReducedLunch'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Percent of students in education organization with limited English proficiency.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'PercentStudentsLimitedEnglishProficiency'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Percent of students in education organization in special education program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'PercentStudentsSpecialEducation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) The percent of staff hired for the education organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'HiringRate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) The percent of staff retained for the education organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'RetentionRate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) The percent of staff retired for the education organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFacts', @level2type=N'COLUMN', @level2name=N'RetirementRate'
GO


/****** Table: [extension].[EducationOrganizationFactsAggregatedSalary] ******/

CREATE TABLE [extension].[EducationOrganizationFactsAggregatedSalary](
    [FactsAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [CountOfSalariesAveraged] [INT] NULL,
    [StandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationFactsAggregatedSalary_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationFactsAggregatedSalary] ADD CONSTRAINT [EducationOrganizationFactsAggregatedSalary_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) Salary information collected at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationFactsAggregatedSalary'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of date for the fact(s) about the Education Organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsAggregatedSalary', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year associated with the fact(s).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsAggregatedSalary', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsAggregatedSalary', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of salaries averaged that were collected at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsAggregatedSalary', @level2type=N'COLUMN', @level2name=N'CountOfSalariesAveraged'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The standard deviation of the salaries collected at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsAggregatedSalary', @level2type=N'COLUMN', @level2name=N'StandardDeviation'
GO


/****** Table: [extension].[EducationOrganizationFactsVacancies] ******/

CREATE TABLE [extension].[EducationOrganizationFactsVacancies](
    [FactsAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [AcademicSubjectDescriptorId] [INT] NOT NULL,
    [NumberOfVacancies] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationFactsVacancies_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactsAsOfDate] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationFactsVacancies] ADD CONSTRAINT [EducationOrganizationFactsVacancies_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) This entity represents actual and projected vacancies for the education organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationFactsVacancies'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of date for the fact(s) about the Education Organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsVacancies', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year associated with the fact(s).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsVacancies', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsVacancies', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type (i.e. actual or projected) of value.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsVacancies', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of a vacancy.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsVacancies', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of vacancies, projected or actual, associated with an education organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationFactsVacancies', @level2type=N'COLUMN', @level2name=N'NumberOfVacancies'
GO


/****** Table: [extension].[EducationOrganizationStudentAcademicRecordFact] ******/

CREATE TABLE [extension].[EducationOrganizationStudentAcademicRecordFact](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentAcademicRecordFact_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFact] ADD CONSTRAINT [EducationOrganizationStudentAcademicRecordFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFact] ADD CONSTRAINT [EducationOrganizationStudentAcademicRecordFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFact] ADD CONSTRAINT [EducationOrganizationStudentAcademicRecordFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Complex type that provides data about a group of student and their academic record', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentAcademicRecordFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO


/****** Table: [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] ******/

CREATE TABLE [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [GradePointAverage] [DECIMAL](18, 4) NOT NULL,
    [GradePointNCount] [INT] NULL,
    [GradePointStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] ADD CONSTRAINT [EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the cumulative grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average cumulative grade point average for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average grade point for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointStandardDeviation'
GO


/****** Table: [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage] ******/

CREATE TABLE [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [GradePointAverage] [DECIMAL](18, 4) NOT NULL,
    [GradePointNCount] [INT] NULL,
    [GradePointStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage] ADD CONSTRAINT [EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the cumulative grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average cumulative grade point average for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average grade point for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointStandardDeviation'
GO


/****** Table: [extension].[EducationOrganizationStudentAcademicRecordFactStudentsEnrolled] ******/

CREATE TABLE [extension].[EducationOrganizationStudentAcademicRecordFactStudentsEnrolled](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentAcademicRecordFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFactStudentsEnrolled] ADD CONSTRAINT [EducationOrganizationStudentAcademicRecordFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentAcademicRecordFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[EducationOrganizationStudentAssessmentFact] ******/

CREATE TABLE [extension].[EducationOrganizationStudentAssessmentFact](
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [AssessmentTitle] [NVARCHAR](60) NULL,
    [AssessmentCategoryDescriptorId] [INT] NULL,
    [AcademicSubjectDescriptorId] [INT] NULL,
    [GradeLevelDescriptorId] [INT] NULL,
    [AdministrationDate] [DATE] NULL,
    [TermDescriptorId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentAssessmentFact_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [SchoolYearTakenSchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFact] ADD CONSTRAINT [EducationOrganizationStudentAssessmentFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFact] ADD CONSTRAINT [EducationOrganizationStudentAssessmentFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFact] ADD CONSTRAINT [EducationOrganizationStudentAssessmentFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Complex type that provides data about a group of students and their assesssment score results and performance levels', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentAssessmentFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title if any specific assessment given to a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AssessmentTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The category of an assessment based on format and content. For example: Achievement test Advanced placement test Alternate assessment\grade-level standards Attitudinal test Cognitive and perceptual skills test ...', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AssessmentCategoryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The academic subject associated with a CourseStudentAssessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level associated with a CourseStudentAssessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'GradeLevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date a specific assessment was administered to a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AdministrationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term in which the assessment was administered', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO


/****** Table: [extension].[EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel] ******/

CREATE TABLE [extension].[EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel](
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [PerformanceLevelMetNumber] [INT] NULL,
    [PerformanceLevelMetPercentage] [DECIMAL](5, 4) NULL,
    [PerformanceLevelTypeNumber] [INT] NULL,
    [PerformanceLevelTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [SchoolYearTakenSchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel] ADD CONSTRAINT [EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the performance level for an assessment of a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who met the performance level', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelMetNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who met the performance level', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelMetPercentage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who achieved each performance level by performance level type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who achieved perfromance level by each performance level type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelTypePercentage'
GO


/****** Table: [extension].[EducationOrganizationStudentAssessmentFactAggregatedScoreResult] ******/

CREATE TABLE [extension].[EducationOrganizationStudentAssessmentFactAggregatedScoreResult](
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [AssessmentReportingMethodTypeId] [INT] NOT NULL,
    [AverageScoreResultDataTypeResultDatatypeTypeId] [INT] NOT NULL,
    [AverageScoreResult] [NVARCHAR](35) NOT NULL,
    [ScoreNCount] [INT] NULL,
    [ScoreStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentAssessmentFactAggregatedScoreResult_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [SchoolYearTakenSchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFactAggregatedScoreResult] ADD CONSTRAINT [EducationOrganizationStudentAssessmentFactAggregatedScoreResult_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the score from an assessment of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentAssessmentFactAggregatedScoreResult'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The method that the administrator of the assessment uses to report the performance and achievement of all Students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'AssessmentReportingMethodTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'AverageScoreResultDataTypeResultDatatypeTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A meaningful average score or statistical expression of the performance of an group. The results can be expressed as a number, percentile, range, level, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'AverageScoreResult'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average assessment score for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'ScoreNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average assessment score for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'ScoreStandardDeviation'
GO


/****** Table: [extension].[EducationOrganizationStudentAssessmentFactStudentsEnrolled] ******/

CREATE TABLE [extension].[EducationOrganizationStudentAssessmentFactStudentsEnrolled](
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentAssessmentFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC,
        [SchoolYearTakenSchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFactStudentsEnrolled] ADD CONSTRAINT [EducationOrganizationStudentAssessmentFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentAssessmentFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[EducationOrganizationStudentFact] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFact](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFact_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFact] ADD CONSTRAINT [EducationOrganizationStudentFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFact] ADD CONSTRAINT [EducationOrganizationStudentFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFact] ADD CONSTRAINT [EducationOrganizationStudentFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This domain entity collects data for aggregated level students with whom the teacher candidate is associated through field work or student teaching', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedELLEnrollment] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedELLEnrollment](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [ELLEnrollmentNumber] [INT] NULL,
    [ELLEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedELLEnrollment_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedELLEnrollment] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedELLEnrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the ELL enrollment of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedELLEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who are ELL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ELLEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who are identified as ELL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ELLEnrollmentPercentage'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedESLEnrollment] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedESLEnrollment](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [ESLEnrollmentNumber] [INT] NULL,
    [ESLEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedESLEnrollment_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedESLEnrollment] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedESLEnrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the ESL enrollment of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedESLEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who are ESL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ESLEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who are identified as ESL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ESLEnrollmentPercentage'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedGender] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedGender](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [GenderTypeId] [INT] NULL,
    [GenderTypeNumber] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedGender_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedGender] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedGender_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the gender', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedGender'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The gender with which a person associates.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'GenderTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who associate with each gender type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'GenderTypeNumber'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [HispanicLatinoEthnicity] [BIT] NOT NULL,
    [HispanicLatinoEthnicityNumber] [INT] NULL,
    [HispanicLatinoEthnicityPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the Eth ethnicity of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicity'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who are hispanic/latino', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicityNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who are identified as hispanic/latino', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicityPercentage'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedLanguage] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedLanguage](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [LanguageDescriptorId] [INT] NULL,
    [LanguageTypeNumber] [INT] NULL,
    [LanguageTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedLanguage_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedLanguage] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedLanguage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The data about the language', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedLanguage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the language of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'LanguageDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student by each lanugage type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'LanguageTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student by language type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'LanguageTypePercentage'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedRace] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedRace](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [RaceTypeId] [INT] NULL,
    [RaceTypeNumber] [INT] NULL,
    [RaceTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedRace_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedRace] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedRace_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the race of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedRace'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'RaceTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students by each race type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'RaceTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students by each race type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'RaceTypePercentage'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [SchoolFoodServicesEligibilityDescriptorId] [INT] NULL,
    [TypeNumber] [INT] NULL,
    [TypePercentage] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies if the student is eligible for Free and Reduce Price Lunch', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the students who are enrolled based on School Food Services Eligibility', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'SchoolFoodServicesEligibilityDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students eligibile for SchoolFoodServicesEligibility by category', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'TypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who are eligible for SchoolFoodServicesEligibility by type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'TypePercentage'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedSection504Enrollment] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedSection504Enrollment](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [Number504Enrolled] [INT] NULL,
    [Percentage504Enrolled] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedSection504Enrollment_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSection504Enrollment] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedSection504Enrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the students who are enrolled in a 504 program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedSection504Enrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who are enrolled in a 504 program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'Number504Enrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who are enrolled in a 504 program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'Percentage504Enrolled'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedSex] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedSex](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [SexTypeId] [INT] NOT NULL,
    [SexTypeNumber] [INT] NULL,
    [SexTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedSex_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSex] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedSex_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the sex of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedSex'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A person''s gender.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SexTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students by each sex type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SexTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student by each sex type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SexTypePercentage'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedSPED] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedSPED](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [SPEDEnrollmentNumber] [INT] NULL,
    [SPEDEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedSPED_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSPED] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedSPED_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the enrollment in SPED of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedSPED'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students enrolled in SPED', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SPEDEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student enrolled in a SPED program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SPEDEnrollmentPercentage'
GO


/****** Table: [extension].[EducationOrganizationStudentFactAggregatedTitleIEnrollment] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactAggregatedTitleIEnrollment](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [TitleIEnrollmentNumber] [INT] NULL,
    [TitleIEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactAggregatedTitleIEnrollment_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedTitleIEnrollment] ADD CONSTRAINT [EducationOrganizationStudentFactAggregatedTitleIEnrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the enrollment in Title I of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactAggregatedTitleIEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students eligible for Title I', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'TitleIEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who are Title I eligible', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'TitleIEnrollmentPercentage'
GO


/****** Table: [extension].[EducationOrganizationStudentFactDisabilityByType] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactDisabilityByType](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [DisabilityDescriptorId] [INT] NULL,
    [Percentage] [DECIMAL](5, 4) NOT NULL,
    [TypeNumber] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactDisabilityByType_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactDisabilityByType] ADD CONSTRAINT [EducationOrganizationStudentFactDisabilityByType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Students in the course who have a disability by disability type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactDisabilityByType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the diability of a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'DisabilityDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who have a disability by each specific disability type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'Percentage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who have a disability by disability type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'TypeNumber'
GO


/****** Table: [extension].[EducationOrganizationStudentFactStudentsEnrolled] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactStudentsEnrolled](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactStudentsEnrolled] ADD CONSTRAINT [EducationOrganizationStudentFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[EducationOrganizationStudentFactTotalStudentsDisabled] ******/

CREATE TABLE [extension].[EducationOrganizationStudentFactTotalStudentsDisabled](
    [EducationOrganizationId] [INT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [StudentsDisabledNumber] [INT] NULL,
    [StudentsDisabledPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationStudentFactTotalStudentsDisabled_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactAsOfDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationStudentFactTotalStudentsDisabled] ADD CONSTRAINT [EducationOrganizationStudentFactTotalStudentsDisabled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'?', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationStudentFactTotalStudentsDisabled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who have a disability', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'StudentsDisabledNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Percentage of students who have a disability', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'StudentsDisabledPercentage'
GO


/****** Table: [extension].[EducationOrganizationSurveyResponseFact] ******/

CREATE TABLE [extension].[EducationOrganizationSurveyResponseFact](
    [EducationOrganizationId] [INT] NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [EducationOrganizationSurveyResponseFact_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactsAsOfDate] ASC,
        [SurveyIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationSurveyResponseFact] ADD CONSTRAINT [EducationOrganizationSurveyResponseFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[EducationOrganizationSurveyResponseFact] ADD CONSTRAINT [EducationOrganizationSurveyResponseFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[EducationOrganizationSurveyResponseFact] ADD CONSTRAINT [EducationOrganizationSurveyResponseFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Survey response data provided at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationSurveyResponseFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for the aggregated survey data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of-date for the aggregated survey data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO


/****** Table: [extension].[EducationOrganizationSurveySectionResponseRatingFact] ******/

CREATE TABLE [extension].[EducationOrganizationSurveySectionResponseRatingFact](
    [EducationOrganizationId] [INT] NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [SurveySectionTitle] [NVARCHAR](50) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [EducationOrganizationSurveySectionResponseRatingFact_PK] PRIMARY KEY CLUSTERED (
        [SurveyIdentifier] ASC,
        [SurveySectionTitle] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationSurveySectionResponseRatingFact] ADD CONSTRAINT [EducationOrganizationSurveySectionResponseRatingFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[EducationOrganizationSurveySectionResponseRatingFact] ADD CONSTRAINT [EducationOrganizationSurveySectionResponseRatingFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[EducationOrganizationSurveySectionResponseRatingFact] ADD CONSTRAINT [EducationOrganizationSurveySectionResponseRatingFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Responses to survey sections collected at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationSurveySectionResponseRatingFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of-date for the aggregated survey data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or label for the survey section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'SurveySectionTitle'
GO


/****** Table: [extension].[EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse] ******/

CREATE TABLE [extension].[EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse](
    [SurveySectionTitle] [NVARCHAR](50) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [AverageNumericResponse] [DECIMAL](18, 4) NOT NULL,
    [NumericResponseNCount] [INT] NULL,
    [NumericResponseStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse_PK] PRIMARY KEY CLUSTERED (
        [SurveyIdentifier] ASC,
        [SurveySectionTitle] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse] ADD CONSTRAINT [EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average of the numeric responses to survey sections collected at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or label for the survey section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'SurveySectionTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average numeric response for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'AverageNumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average numeric grade for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'NumericResponseNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average numeric grade for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'NumericResponseStandardDeviation'
GO


/****** Table: [extension].[EnglishLanguageExamDescriptor] ******/

CREATE TABLE [extension].[EnglishLanguageExamDescriptor](
    [EnglishLanguageExamDescriptorId] [INT] NOT NULL,
    [EnglishLanguageExamTypeId] [INT] NOT NULL,
    CONSTRAINT [EnglishLanguageExamDescriptor_PK] PRIMARY KEY CLUSTERED (
        [EnglishLanguageExamDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EnglishLanguageExamDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EnglishLanguageExamDescriptor', @level2type=N'COLUMN', @level2name=N'EnglishLanguageExamDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EnglishLanguageExamDescriptor', @level2type=N'COLUMN', @level2name=N'EnglishLanguageExamTypeId'
GO


/****** Table: [extension].[EnglishLanguageExamType] ******/

CREATE TABLE [extension].[EnglishLanguageExamType](
    [EnglishLanguageExamTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [EnglishLanguageExamType_PK] PRIMARY KEY CLUSTERED (
        [EnglishLanguageExamTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[EnglishLanguageExamType] ADD CONSTRAINT [EnglishLanguageExamType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[EnglishLanguageExamType] ADD CONSTRAINT [EnglishLanguageExamType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[EnglishLanguageExamType] ADD CONSTRAINT [EnglishLanguageExamType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'EnglishLanguageExamType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for EnglishLanguageExam', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EnglishLanguageExamType', @level2type=N'COLUMN', @level2name=N'EnglishLanguageExamTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EnglishLanguageExamType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the EnglishLanguageExam type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EnglishLanguageExamType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the EnglishLanguageExam type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'EnglishLanguageExamType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[FieldworkType] ******/

CREATE TABLE [extension].[FieldworkType](
    [FieldworkTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [FieldworkType_PK] PRIMARY KEY CLUSTERED (
        [FieldworkTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[FieldworkType] ADD CONSTRAINT [FieldworkType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[FieldworkType] ADD CONSTRAINT [FieldworkType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[FieldworkType] ADD CONSTRAINT [FieldworkType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the fieldwork types.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'FieldworkType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for Fieldwork', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'FieldworkType', @level2type=N'COLUMN', @level2name=N'FieldworkTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'FieldworkType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the Fieldwork type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'FieldworkType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the Fieldwork type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'FieldworkType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[FieldworkTypeDescriptor] ******/

CREATE TABLE [extension].[FieldworkTypeDescriptor](
    [FieldworkTypeDescriptorId] [INT] NOT NULL,
    [FieldworkTypeId] [INT] NULL,
    CONSTRAINT [FieldworkTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [FieldworkTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the type of fieldwork being executed by a teacher candidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'FieldworkTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'FieldworkTypeDescriptor', @level2type=N'COLUMN', @level2name=N'FieldworkTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'FieldworkTypeDescriptor', @level2type=N'COLUMN', @level2name=N'FieldworkTypeId'
GO


/****** Table: [extension].[GenderType] ******/

CREATE TABLE [extension].[GenderType](
    [GenderTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [GenderType_PK] PRIMARY KEY CLUSTERED (
        [GenderTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[GenderType] ADD CONSTRAINT [GenderType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[GenderType] ADD CONSTRAINT [GenderType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[GenderType] ADD CONSTRAINT [GenderType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The gender with with a person associates.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'GenderType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for Gender', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'GenderType', @level2type=N'COLUMN', @level2name=N'GenderTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'GenderType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the Gender type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'GenderType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the Gender type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'GenderType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[LevelOfDegreeAwardedDescriptor] ******/

CREATE TABLE [extension].[LevelOfDegreeAwardedDescriptor](
    [LevelOfDegreeAwardedDescriptorId] [INT] NOT NULL,
    [LevelOfDegreeAwardedTypeId] [INT] NULL,
    CONSTRAINT [LevelOfDegreeAwardedDescriptor_PK] PRIMARY KEY CLUSTERED (
        [LevelOfDegreeAwardedDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the level of degree awarded by the teacher prep program to the person (e.g., Certificate Only, Bachelor''s, Master''s, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'LevelOfDegreeAwardedDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelOfDegreeAwardedDescriptor', @level2type=N'COLUMN', @level2name=N'LevelOfDegreeAwardedDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelOfDegreeAwardedDescriptor', @level2type=N'COLUMN', @level2name=N'LevelOfDegreeAwardedTypeId'
GO


/****** Table: [extension].[LevelOfDegreeAwardedType] ******/

CREATE TABLE [extension].[LevelOfDegreeAwardedType](
    [LevelOfDegreeAwardedTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [LevelOfDegreeAwardedType_PK] PRIMARY KEY CLUSTERED (
        [LevelOfDegreeAwardedTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[LevelOfDegreeAwardedType] ADD CONSTRAINT [LevelOfDegreeAwardedType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[LevelOfDegreeAwardedType] ADD CONSTRAINT [LevelOfDegreeAwardedType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[LevelOfDegreeAwardedType] ADD CONSTRAINT [LevelOfDegreeAwardedType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the level of degree awarded by the teacher prep program to the person (e.g., Certificate Only, Bachelor''s, Master''s, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'LevelOfDegreeAwardedType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for LevelOfDegreeAwarded', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelOfDegreeAwardedType', @level2type=N'COLUMN', @level2name=N'LevelOfDegreeAwardedTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelOfDegreeAwardedType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the LevelOfDegreeAwarded type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelOfDegreeAwardedType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the LevelOfDegreeAwarded type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelOfDegreeAwardedType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[LevelType] ******/

CREATE TABLE [extension].[LevelType](
    [LevelTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [LevelType_PK] PRIMARY KEY CLUSTERED (
        [LevelTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[LevelType] ADD CONSTRAINT [LevelType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[LevelType] ADD CONSTRAINT [LevelType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[LevelType] ADD CONSTRAINT [LevelType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the level types.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'LevelType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for Level', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelType', @level2type=N'COLUMN', @level2name=N'LevelTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the Level type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the Level type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[LevelTypeDescriptor] ******/

CREATE TABLE [extension].[LevelTypeDescriptor](
    [LevelTypeDescriptorId] [INT] NOT NULL,
    [LevelTypeId] [INT] NULL,
    CONSTRAINT [LevelTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [LevelTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the level (e.g., 1, 2, 3, etc.) of the rubric at which the data is captured.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'LevelTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelTypeDescriptor', @level2type=N'COLUMN', @level2name=N'LevelTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'LevelTypeDescriptor', @level2type=N'COLUMN', @level2name=N'LevelTypeId'
GO


/****** Table: [extension].[Observation] ******/

CREATE TABLE [extension].[Observation](
    [ObservationIdentifier] [NVARCHAR](64) NOT NULL,
    [ObservationTypeDescriptorId] [INT] NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [RubricTypeDescriptorId] [INT] NOT NULL,
    [RubricTitle] [NVARCHAR](15) NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [AcademicSubjectDescriptorId] [INT] NULL,
    [ScheduleDateOfObservation] [DATE] NULL,
    [ActualDateOfObservation] [DATE] NOT NULL,
    [TimeOfObservation] [TIME](7) NULL,
    [DurationOfObservation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [Observation_PK] PRIMARY KEY CLUSTERED (
        [ObservationIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[Observation] ADD CONSTRAINT [Observation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[Observation] ADD CONSTRAINT [Observation_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[Observation] ADD CONSTRAINT [Observation_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'Observation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An assigned unique identifier for the observation instance.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'ObservationIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type (e.g., walkthrough, summative) of observation conducted.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'ObservationTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of rubric used to conduct the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'RubricTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'RubricTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which the observation was scheduled to be conducted.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'ScheduleDateOfObservation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which the observation was conducted.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'ActualDateOfObservation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the the time at which the observation was conducted.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'TimeOfObservation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The actual or estimated number of clock minutes during which the observation was conducted.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Observation', @level2type=N'COLUMN', @level2name=N'DurationOfObservation'
GO


/****** Table: [extension].[ObservationFact] ******/

CREATE TABLE [extension].[ObservationFact](
    [EducationOrganizationId] [INT] NOT NULL,
    [RubricTypeDescriptorId] [INT] NOT NULL,
    [RubricTitle] [NVARCHAR](15) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [ObservationTypeDescriptorId] [INT] NOT NULL,
    [AcademicSubjectDescriptorId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [ObservationFact_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactsAsOfDate] ASC,
        [RubricTitle] ASC,
        [RubricTypeDescriptorId] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ObservationFact] ADD CONSTRAINT [ObservationFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[ObservationFact] ADD CONSTRAINT [ObservationFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[ObservationFact] ADD CONSTRAINT [ObservationFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents aggregated information regarding observation data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ObservationFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of rubric used to conduct the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFact', @level2type=N'COLUMN', @level2name=N'RubricTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFact', @level2type=N'COLUMN', @level2name=N'RubricTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of-date for the aggregated observation data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type (e.g., walkthrough, summative) of observation conducted.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFact', @level2type=N'COLUMN', @level2name=N'ObservationTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of an assessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFact', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO


/****** Table: [extension].[ObservationFactGradeLevel] ******/

CREATE TABLE [extension].[ObservationFactGradeLevel](
    [EducationOrganizationId] [INT] NOT NULL,
    [RubricTypeDescriptorId] [INT] NOT NULL,
    [RubricTitle] [NVARCHAR](15) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [GradeLevelDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ObservationFactGradeLevel_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactsAsOfDate] ASC,
        [GradeLevelDescriptorId] ASC,
        [RubricTitle] ASC,
        [RubricTypeDescriptorId] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ObservationFactGradeLevel] ADD CONSTRAINT [ObservationFactGradeLevel_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade levels for the aggregated observation data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ObservationFactGradeLevel'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFactGradeLevel', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of rubric used to conduct the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFactGradeLevel', @level2type=N'COLUMN', @level2name=N'RubricTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFactGradeLevel', @level2type=N'COLUMN', @level2name=N'RubricTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFactGradeLevel', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of-date for the aggregated observation data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFactGradeLevel', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade levels for the aggregated observation data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationFactGradeLevel', @level2type=N'COLUMN', @level2name=N'GradeLevelDescriptorId'
GO


/****** Table: [extension].[ObservationGradeLevel] ******/

CREATE TABLE [extension].[ObservationGradeLevel](
    [ObservationIdentifier] [NVARCHAR](64) NOT NULL,
    [GradeLevelDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ObservationGradeLevel_PK] PRIMARY KEY CLUSTERED (
        [GradeLevelDescriptorId] ASC,
        [ObservationIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ObservationGradeLevel] ADD CONSTRAINT [ObservationGradeLevel_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade levels for the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ObservationGradeLevel'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An assigned unique identifier for the observation instance.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationGradeLevel', @level2type=N'COLUMN', @level2name=N'ObservationIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade levels for the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationGradeLevel', @level2type=N'COLUMN', @level2name=N'GradeLevelDescriptorId'
GO


/****** Table: [extension].[ObservationObservee] ******/

CREATE TABLE [extension].[ObservationObservee](
    [ObservationIdentifier] [NVARCHAR](64) NOT NULL,
    [FirstNameOfObservee] [NVARCHAR](75) NOT NULL,
    [LastNameOfObservee] [NVARCHAR](75) NOT NULL,
    [ProspectIdentifier] [NVARCHAR](32) NULL,
    [EducationOrganizationId] [INT] NULL,
    [StaffUSI] [INT] NULL,
    [TeacherCandidateUniqueId] [NVARCHAR](32) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ObservationObservee_PK] PRIMARY KEY CLUSTERED (
        [ObservationIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ObservationObservee] ADD CONSTRAINT [ObservationObservee_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information regarding the observee of the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ObservationObservee'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An assigned unique identifier for the observation instance.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObservee', @level2type=N'COLUMN', @level2name=N'ObservationIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObservee', @level2type=N'COLUMN', @level2name=N'FirstNameOfObservee'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name borne in common by members of a family.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObservee', @level2type=N'COLUMN', @level2name=N'LastNameOfObservee'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObservee', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObservee', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObservee', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObservee', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO


/****** Table: [extension].[ObservationObserver] ******/

CREATE TABLE [extension].[ObservationObserver](
    [ObservationIdentifier] [NVARCHAR](64) NOT NULL,
    [FirstNameOfObserver] [NVARCHAR](75) NULL,
    [LastNameOfObserver] [NVARCHAR](75) NULL,
    [StaffUSI] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ObservationObserver_PK] PRIMARY KEY CLUSTERED (
        [ObservationIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ObservationObserver] ADD CONSTRAINT [ObservationObserver_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The person that conducted the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ObservationObserver'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An assigned unique identifier for the observation instance.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObserver', @level2type=N'COLUMN', @level2name=N'ObservationIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObserver', @level2type=N'COLUMN', @level2name=N'FirstNameOfObserver'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name borne in common by members of a family.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObserver', @level2type=N'COLUMN', @level2name=N'LastNameOfObserver'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObserver', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO


/****** Table: [extension].[ObservationObserverReceivedTraining] ******/

CREATE TABLE [extension].[ObservationObserverReceivedTraining](
    [ObservationIdentifier] [NVARCHAR](64) NOT NULL,
    [ReceivedTrainingDate] [DATE] NULL,
    [InterRaterReliabilityScore] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ObservationObserverReceivedTraining_PK] PRIMARY KEY CLUSTERED (
        [ObservationIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ObservationObserverReceivedTraining] ADD CONSTRAINT [ObservationObserverReceivedTraining_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the observer has or has not received training on conducting observations.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ObservationObserverReceivedTraining'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An assigned unique identifier for the observation instance.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObserverReceivedTraining', @level2type=N'COLUMN', @level2name=N'ObservationIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date on which the observer received training on how to conduct observations.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObserverReceivedTraining', @level2type=N'COLUMN', @level2name=N'ReceivedTrainingDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationObserverReceivedTraining', @level2type=N'COLUMN', @level2name=N'InterRaterReliabilityScore'
GO


/****** Table: [extension].[ObservationProgramGateway] ******/

CREATE TABLE [extension].[ObservationProgramGateway](
    [ObservationIdentifier] [NVARCHAR](64) NOT NULL,
    [ProgramGatewayDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ObservationProgramGateway_PK] PRIMARY KEY CLUSTERED (
        [ObservationIdentifier] ASC,
        [ProgramGatewayDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ObservationProgramGateway] ADD CONSTRAINT [ObservationProgramGateway_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the program gateway that may be associated for continuation in the program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ObservationProgramGateway'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An assigned unique identifier for the observation instance.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationProgramGateway', @level2type=N'COLUMN', @level2name=N'ObservationIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the program gateway that may be associated for continuation in the program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationProgramGateway', @level2type=N'COLUMN', @level2name=N'ProgramGatewayDescriptorId'
GO


/****** Table: [extension].[ObservationType] ******/

CREATE TABLE [extension].[ObservationType](
    [ObservationTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [ObservationType_PK] PRIMARY KEY CLUSTERED (
        [ObservationTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ObservationType] ADD CONSTRAINT [ObservationType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[ObservationType] ADD CONSTRAINT [ObservationType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[ObservationType] ADD CONSTRAINT [ObservationType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the observation types.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ObservationType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for Observation', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationType', @level2type=N'COLUMN', @level2name=N'ObservationTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the Observation type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the Observation type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[ObservationTypeDescriptor] ******/

CREATE TABLE [extension].[ObservationTypeDescriptor](
    [ObservationTypeDescriptorId] [INT] NOT NULL,
    [ObservationTypeId] [INT] NULL,
    CONSTRAINT [ObservationTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [ObservationTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the type (e.g., walkthrough, summative) of observation conducted.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ObservationTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationTypeDescriptor', @level2type=N'COLUMN', @level2name=N'ObservationTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ObservationTypeDescriptor', @level2type=N'COLUMN', @level2name=N'ObservationTypeId'
GO


/****** Table: [extension].[PreviousCareerDescriptor] ******/

CREATE TABLE [extension].[PreviousCareerDescriptor](
    [PreviousCareerDescriptorId] [INT] NOT NULL,
    [PreviousCareerTypeId] [INT] NULL,
    CONSTRAINT [PreviousCareerDescriptor_PK] PRIMARY KEY CLUSTERED (
        [PreviousCareerDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the previous career of an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'PreviousCareerDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'PreviousCareerDescriptor', @level2type=N'COLUMN', @level2name=N'PreviousCareerDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'PreviousCareerDescriptor', @level2type=N'COLUMN', @level2name=N'PreviousCareerTypeId'
GO


/****** Table: [extension].[PreviousCareerType] ******/

CREATE TABLE [extension].[PreviousCareerType](
    [PreviousCareerTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [PreviousCareerType_PK] PRIMARY KEY CLUSTERED (
        [PreviousCareerTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[PreviousCareerType] ADD CONSTRAINT [PreviousCareerType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[PreviousCareerType] ADD CONSTRAINT [PreviousCareerType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[PreviousCareerType] ADD CONSTRAINT [PreviousCareerType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the type of previous careers.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'PreviousCareerType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for PreviousCareer', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'PreviousCareerType', @level2type=N'COLUMN', @level2name=N'PreviousCareerTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'PreviousCareerType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the PreviousCareer type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'PreviousCareerType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the PreviousCareer type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'PreviousCareerType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[ProfessionalDevelopmentEvent] ******/

CREATE TABLE [extension].[ProfessionalDevelopmentEvent](
    [PROPERTYNAME] [BIT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [ProfessionalDevelopmentEvent_PK] PRIMARY KEY CLUSTERED (
        [PROPERTYNAME] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProfessionalDevelopmentEvent] ADD CONSTRAINT [ProfessionalDevelopmentEvent_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[ProfessionalDevelopmentEvent] ADD CONSTRAINT [ProfessionalDevelopmentEvent_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[ProfessionalDevelopmentEvent] ADD CONSTRAINT [ProfessionalDevelopmentEvent_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'?', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProfessionalDevelopmentEvent'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'DOCUMENTATION', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProfessionalDevelopmentEvent', @level2type=N'COLUMN', @level2name=N'PROPERTYNAME'
GO


/****** Table: [extension].[ProfessionalDevelopmentOfferedByDescriptor] ******/

CREATE TABLE [extension].[ProfessionalDevelopmentOfferedByDescriptor](
    [ProfessionalDevelopmentOfferedByDescriptorId] [INT] NOT NULL,
    [ProfessionalDevelopmentOfferedByTypeId] [INT] NULL,
    CONSTRAINT [ProfessionalDevelopmentOfferedByDescriptor_PK] PRIMARY KEY CLUSTERED (
        [ProfessionalDevelopmentOfferedByDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the organization that a professional development is offered by.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProfessionalDevelopmentOfferedByDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProfessionalDevelopmentOfferedByDescriptor', @level2type=N'COLUMN', @level2name=N'ProfessionalDevelopmentOfferedByDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProfessionalDevelopmentOfferedByDescriptor', @level2type=N'COLUMN', @level2name=N'ProfessionalDevelopmentOfferedByTypeId'
GO


/****** Table: [extension].[ProfessionalDevelopmentOfferedByType] ******/

CREATE TABLE [extension].[ProfessionalDevelopmentOfferedByType](
    [ProfessionalDevelopmentOfferedByTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [ProfessionalDevelopmentOfferedByType_PK] PRIMARY KEY CLUSTERED (
        [ProfessionalDevelopmentOfferedByTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProfessionalDevelopmentOfferedByType] ADD CONSTRAINT [ProfessionalDevelopmentOfferedByType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[ProfessionalDevelopmentOfferedByType] ADD CONSTRAINT [ProfessionalDevelopmentOfferedByType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[ProfessionalDevelopmentOfferedByType] ADD CONSTRAINT [ProfessionalDevelopmentOfferedByType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the type of organizations that the professional development is offered by.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProfessionalDevelopmentOfferedByType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for ProfessionalDevelopmentOfferedBy', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProfessionalDevelopmentOfferedByType', @level2type=N'COLUMN', @level2name=N'ProfessionalDevelopmentOfferedByTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProfessionalDevelopmentOfferedByType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the ProfessionalDevelopmentOfferedBy type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProfessionalDevelopmentOfferedByType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the ProfessionalDevelopmentOfferedBy type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProfessionalDevelopmentOfferedByType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[ProgramGatewayDescriptor] ******/

CREATE TABLE [extension].[ProgramGatewayDescriptor](
    [ProgramGatewayDescriptorId] [INT] NOT NULL,
    [ProgramGatewayTypeId] [INT] NULL,
    CONSTRAINT [ProgramGatewayDescriptor_PK] PRIMARY KEY CLUSTERED (
        [ProgramGatewayDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the program gateway that is associated with continuation in a program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProgramGatewayDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProgramGatewayDescriptor', @level2type=N'COLUMN', @level2name=N'ProgramGatewayDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProgramGatewayDescriptor', @level2type=N'COLUMN', @level2name=N'ProgramGatewayTypeId'
GO


/****** Table: [extension].[ProgramGatewayType] ******/

CREATE TABLE [extension].[ProgramGatewayType](
    [ProgramGatewayTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [ProgramGatewayType_PK] PRIMARY KEY CLUSTERED (
        [ProgramGatewayTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProgramGatewayType] ADD CONSTRAINT [ProgramGatewayType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[ProgramGatewayType] ADD CONSTRAINT [ProgramGatewayType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[ProgramGatewayType] ADD CONSTRAINT [ProgramGatewayType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the type of program gateway.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProgramGatewayType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for ProgramGateway', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProgramGatewayType', @level2type=N'COLUMN', @level2name=N'ProgramGatewayTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProgramGatewayType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the ProgramGateway type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProgramGatewayType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the ProgramGateway type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProgramGatewayType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[Prospect] ******/

CREATE TABLE [extension].[Prospect](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [PersonalTitlePrefix] [NVARCHAR](30) NULL,
    [FirstName] [NVARCHAR](75) NOT NULL,
    [MiddleName] [NVARCHAR](75) NULL,
    [LastSurname] [NVARCHAR](75) NOT NULL,
    [GenerationCodeSuffix] [NVARCHAR](10) NULL,
    [MaidenName] [NVARCHAR](75) NULL,
    [ElectronicMailAddress] [NVARCHAR](128) NOT NULL,
    [Applied] [BIT] NULL,
    [HispanicLatinoEthnicity] [BIT] NULL,
    [Met] [BIT] NULL,
    [Notes] [NVARCHAR](255) NULL,
    [PreScreeningRating] [INT] NULL,
    [Referral] [BIT] NULL,
    [ReferredBy] [NVARCHAR](50) NULL,
    [SexTypeId] [INT] NULL,
    [SocialMediaUserName] [NVARCHAR](50) NULL,
    [SocialMediaNetworkName] [NVARCHAR](50) NULL,
    [GenderTypeId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [Prospect_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ProspectIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[Prospect] ADD CONSTRAINT [Prospect_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[Prospect] ADD CONSTRAINT [Prospect_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[Prospect] ADD CONSTRAINT [Prospect_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A prospect for employment or contract that has not yet made formal application, often obtained from job fairs or university recruiting visits.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'Prospect'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A prefix used to denote the title, degree, position, or seniority of the person.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'PersonalTitlePrefix'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A name given to an individual at birth, baptism, or during another naming ceremony, or through legal change.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'FirstName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A secondary name given to an individual at birth, baptism, or during another naming ceremony.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'MiddleName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name borne in common by members of a family.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'LastSurname'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An appendage, if any, used to denote an individual''s generation in his family (e.g., Jr., Sr., III).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'GenerationCodeSuffix'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The person''s maiden name.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'MaidenName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The numbers, letters, and symbols used to identify an electronic mail (e-mail) user within the network to which the individual or organization belongs.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'ElectronicMailAddress'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicator of whether the prospect applied for a position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'Applied'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino".', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicity'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicator whether the person was met by a representative of the education organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'Met'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Additional notes about the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'Notes'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The rating initially assigned to the prospect prior to an official screening.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'PreScreeningRating'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicator of whether the prospect was a referral.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'Referral'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The person making the referral.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'ReferredBy'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A person''s gender.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'SexTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The user name of the person on social media.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'SocialMediaUserName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The social media network name (e.g., LinkedIn, Twitter, etc.) associated with the SocialMediaUserName.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'SocialMediaNetworkName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) The gender with which a person associates.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Prospect', @level2type=N'COLUMN', @level2name=N'GenderTypeId'
GO


/****** Table: [extension].[ProspectCredential] ******/

CREATE TABLE [extension].[ProspectCredential](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [ProspectCredential_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ProspectIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectCredential] ADD CONSTRAINT [ProspectCredential_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[ProspectCredential] ADD CONSTRAINT [ProspectCredential_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[ProspectCredential] ADD CONSTRAINT [ProspectCredential_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectCredential'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredential', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredential', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO


/****** Table: [extension].[ProspectCredentialExtension] ******/

CREATE TABLE [extension].[ProspectCredentialExtension](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [RevocationDate] [DATE] NULL,
    [RevocationReason] [NVARCHAR](40) NULL,
    [SuspensionDate] [DATE] NULL,
    [SuspensionReason] [NVARCHAR](40) NULL,
    [ValueTypeId] [INT] NOT NULL,
    CONSTRAINT [ProspectCredentialExtension_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [ProspectIdentifier] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectCredentialExtension'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential held by an individual was revoked.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'RevocationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Expanded reason for the revocation of credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'RevocationReason'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential held by an individual was suspended.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'SuspensionDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Expanded reason for the suspension of credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'SuspensionReason'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtension', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO


/****** Table: [extension].[ProspectCredentialExtensionBoardCertification] ******/

CREATE TABLE [extension].[ProspectCredentialExtensionBoardCertification](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [BoardCertification] [BIT] NULL,
    [BoardCertificationDate] [DATE] NULL,
    [BoardCertificationTypeDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectCredentialExtensionBoardCertification_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [ProspectIdentifier] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectCredentialExtensionBoardCertification] ADD CONSTRAINT [ProspectCredentialExtensionBoardCertification_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Board certification information for a individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectCredentialExtensionBoardCertification'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of whether a individual is board certified.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertification'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which a board certification was awarded.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertificationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of board certification awarded to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertificationTypeDescriptorId'
GO


/****** Table: [extension].[ProspectCredentialExtensionCertificationExam] ******/

CREATE TABLE [extension].[ProspectCredentialExtensionCertificationExam](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [CertificationExamTitle] [NVARCHAR](60) NOT NULL,
    [CertificationExamTypeDescriptorId] [INT] NULL,
    [CertificationExamOverallScore] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectCredentialExtensionCertificationExam_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [ProspectIdentifier] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectCredentialExtensionCertificationExam] ADD CONSTRAINT [ProspectCredentialExtensionCertificationExam_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Certification information for a individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectCredentialExtensionCertificationExam'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the certification.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of certification exam that taken.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The overall score that was received on the certification exam.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamOverallScore'
GO


/****** Table: [extension].[ProspectCredentialExtensionRecommendation] ******/

CREATE TABLE [extension].[ProspectCredentialExtensionRecommendation](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectCredentialExtensionRecommendation_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [ProspectIdentifier] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectCredentialExtensionRecommendation] ADD CONSTRAINT [ProspectCredentialExtensionRecommendation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the recommenation for the credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectCredentialExtensionRecommendation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO


/****** Table: [extension].[ProspectCredentialExtensionRecommendingInstitution] ******/

CREATE TABLE [extension].[ProspectCredentialExtensionRecommendingInstitution](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [RecommendingInstutionName] [NVARCHAR](75) NOT NULL,
    [RecommendingDate] [DATE] NULL,
    [RecommendingInstitutionCountryDescriptorId] [INT] NULL,
    [RecommendingInstutionStateAbbreviationTypeId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectCredentialExtensionRecommendingInstitution_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [EducationOrganizationId] ASC,
        [LevelDescriptorId] ASC,
        [ProspectIdentifier] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectCredentialExtensionRecommendingInstitution] ADD CONSTRAINT [ProspectCredentialExtensionRecommendingInstitution_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information regarding the institution that is recommending a candidate for certification.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectCredentialExtensionRecommendingInstitution'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The full, legally accepted name of the institution.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstutionName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which a recommendation for a candidate is made.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The country that the recommendation for a candidate was made in.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstitutionCountryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a recommendation was issued.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstutionStateAbbreviationTypeId'
GO


/****** Table: [extension].[ProspectCurrentPosition] ******/

CREATE TABLE [extension].[ProspectCurrentPosition](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [NameOfInstitution] [NVARCHAR](75) NOT NULL,
    [Location] [NVARCHAR](75) NOT NULL,
    [PositionTitle] [NVARCHAR](100) NOT NULL,
    [AcademicSubjectDescriptorId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectCurrentPosition_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ProspectIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectCurrentPosition] ADD CONSTRAINT [ProspectCurrentPosition_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The current position of the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectCurrentPosition'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCurrentPosition', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCurrentPosition', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The formal name of the education organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCurrentPosition', @level2type=N'COLUMN', @level2name=N'NameOfInstitution'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The location, typically City and State, for the institution.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCurrentPosition', @level2type=N'COLUMN', @level2name=N'Location'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptive name of an individual''s position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCurrentPosition', @level2type=N'COLUMN', @level2name=N'PositionTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The academic subject the staff person''s assignment to a school.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCurrentPosition', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO


/****** Table: [extension].[ProspectCurrentPositionGradeLevel] ******/

CREATE TABLE [extension].[ProspectCurrentPositionGradeLevel](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [GradeLevelDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectCurrentPositionGradeLevel_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [GradeLevelDescriptorId] ASC,
        [ProspectIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectCurrentPositionGradeLevel] ADD CONSTRAINT [ProspectCurrentPositionGradeLevel_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The set of grade levels for which the individual''s assignment is responsible.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectCurrentPositionGradeLevel'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCurrentPositionGradeLevel', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCurrentPositionGradeLevel', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The set of grade levels for which the individual''s assignment is responsible.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectCurrentPositionGradeLevel', @level2type=N'COLUMN', @level2name=N'GradeLevelDescriptorId'
GO


/****** Table: [extension].[ProspectDisability] ******/

CREATE TABLE [extension].[ProspectDisability](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [DisabilityDescriptorId] [INT] NOT NULL,
    [DisabilityDiagnosis] [NVARCHAR](80) NULL,
    [OrderOfDisability] [INT] NULL,
    [DisabilityDeterminationSourceTypeId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectDisability_PK] PRIMARY KEY CLUSTERED (
        [DisabilityDescriptorId] ASC,
        [EducationOrganizationId] ASC,
        [ProspectIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectDisability] ADD CONSTRAINT [ProspectDisability_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) The disability condition(s) that best describes an individual''s impairment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectDisability'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectDisability', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectDisability', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A disability category that describes a child''s impairment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectDisability', @level2type=N'COLUMN', @level2name=N'DisabilityDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A description of the disability diagnosis.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectDisability', @level2type=N'COLUMN', @level2name=N'DisabilityDiagnosis'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The order by severity of student''s disabilities: 1- Primary, 2 -  Secondary, 3 - Tertiary, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectDisability', @level2type=N'COLUMN', @level2name=N'OrderOfDisability'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The source that provided the disability determination.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectDisability', @level2type=N'COLUMN', @level2name=N'DisabilityDeterminationSourceTypeId'
GO


/****** Table: [extension].[ProspectIdentificationDocument] ******/

CREATE TABLE [extension].[ProspectIdentificationDocument](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [DocumentTitle] [NVARCHAR](60) NULL,
    [PersonalInformationVerificationTypeId] [INT] NOT NULL,
    [DocumentExpirationDate] [DATE] NULL,
    [IssuerDocumentIdentificationCode] [NVARCHAR](60) NULL,
    [IssuerName] [NVARCHAR](150) NULL,
    [IssuerCountryDescriptorId] [INT] NULL,
    [IdentificationDocumentUseTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectIdentificationDocument_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [IdentificationDocumentUseTypeId] ASC,
        [PersonalInformationVerificationTypeId] ASC,
        [ProspectIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectIdentificationDocument] ADD CONSTRAINT [ProspectIdentificationDocument_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The documents presented as evident to verify one''s personal identity; for example: drivers license, passport, birth certificate, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectIdentificationDocument'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectIdentificationDocument', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectIdentificationDocument', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title of the document given by the issuer.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectIdentificationDocument', @level2type=N'COLUMN', @level2name=N'DocumentTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The category of the document relative to its purpose.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectIdentificationDocument', @level2type=N'COLUMN', @level2name=N'PersonalInformationVerificationTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The day when the document  expires, if null then never expires.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectIdentificationDocument', @level2type=N'COLUMN', @level2name=N'DocumentExpirationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identifier on the issuer''s identification system.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectIdentificationDocument', @level2type=N'COLUMN', @level2name=N'IssuerDocumentIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Name of the entity or institution that issued the document.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectIdentificationDocument', @level2type=N'COLUMN', @level2name=N'IssuerName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Country of origin of the document.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectIdentificationDocument', @level2type=N'COLUMN', @level2name=N'IssuerCountryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The primary function of the document used for establishing identity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectIdentificationDocument', @level2type=N'COLUMN', @level2name=N'IdentificationDocumentUseTypeId'
GO


/****** Table: [extension].[ProspectQualifications] ******/

CREATE TABLE [extension].[ProspectQualifications](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [Eligible] [BIT] NOT NULL,
    [CapacityToServe] [BIT] NULL,
    [YearsOfServiceCurrentPlacement] [DECIMAL](5, 2) NULL,
    [YearsOfServiceTotal] [DECIMAL](5, 2) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectQualifications_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ProspectIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectQualifications] ADD CONSTRAINT [ProspectQualifications_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) The qualifications of a prospective mentor teacher.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectQualifications'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectQualifications', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectQualifications', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of whether the prospect is eligible for the position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectQualifications', @level2type=N'COLUMN', @level2name=N'Eligible'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of whether or not a prospect mentor teacher has capacity to serve.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectQualifications', @level2type=N'COLUMN', @level2name=N'CapacityToServe'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of years of service at the current school.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectQualifications', @level2type=N'COLUMN', @level2name=N'YearsOfServiceCurrentPlacement'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of years of service as a teacher.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectQualifications', @level2type=N'COLUMN', @level2name=N'YearsOfServiceTotal'
GO


/****** Table: [extension].[ProspectRace] ******/

CREATE TABLE [extension].[ProspectRace](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [RaceTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectRace_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ProspectIdentifier] ASC,
        [RaceTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectRace] ADD CONSTRAINT [ProspectRace_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectRace'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectRace', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectRace', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectRace', @level2type=N'COLUMN', @level2name=N'RaceTypeId'
GO


/****** Table: [extension].[ProspectRecruitmentEvent] ******/

CREATE TABLE [extension].[ProspectRecruitmentEvent](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [EventDate] [DATE] NOT NULL,
    [EventTitle] [NVARCHAR](50) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectRecruitmentEvent_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [EventDate] ASC,
        [EventTitle] ASC,
        [ProspectIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectRecruitmentEvent] ADD CONSTRAINT [ProspectRecruitmentEvent_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Reference(s) to events associated with the recruitment process.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectRecruitmentEvent'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectRecruitmentEvent', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectRecruitmentEvent', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date of the event.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectRecruitmentEvent', @level2type=N'COLUMN', @level2name=N'EventDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title of the event.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectRecruitmentEvent', @level2type=N'COLUMN', @level2name=N'EventTitle'
GO


/****** Table: [extension].[ProspectTelephone] ******/

CREATE TABLE [extension].[ProspectTelephone](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [TelephoneNumber] [NVARCHAR](24) NOT NULL,
    [TelephoneNumberTypeId] [INT] NOT NULL,
    [OrderOfPriority] [INT] NULL,
    [TextMessageCapabilityIndicator] [BIT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectTelephone_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ProspectIdentifier] ASC,
        [TelephoneNumberTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectTelephone] ADD CONSTRAINT [ProspectTelephone_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The 10-digit telephone number, including the area code, for the person.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectTelephone'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectTelephone', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectTelephone', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The telephone number including the area code, and extension, if applicable.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectTelephone', @level2type=N'COLUMN', @level2name=N'TelephoneNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of communication number listed for an individual or organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectTelephone', @level2type=N'COLUMN', @level2name=N'TelephoneNumberTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The order of priority assigned to telephone numbers to define which number to attempt first, second, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectTelephone', @level2type=N'COLUMN', @level2name=N'OrderOfPriority'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the telephone number is technically capable of sending and receiving Short Message Service (SMS) text messages.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectTelephone', @level2type=N'COLUMN', @level2name=N'TextMessageCapabilityIndicator'
GO


/****** Table: [extension].[ProspectTouchpoint] ******/

CREATE TABLE [extension].[ProspectTouchpoint](
    [ProspectIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [TouchpointContent] [NVARCHAR](255) NOT NULL,
    [TouchpointDate] [DATE] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [ProspectTouchpoint_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ProspectIdentifier] ASC,
        [TouchpointContent] ASC,
        [TouchpointDate] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ProspectTouchpoint] ADD CONSTRAINT [ProspectTouchpoint_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Content associated with different touchpoints with the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ProspectTouchpoint'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the prospect.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectTouchpoint', @level2type=N'COLUMN', @level2name=N'ProspectIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectTouchpoint', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The content associated with or an artifact from the touchpoint.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectTouchpoint', @level2type=N'COLUMN', @level2name=N'TouchpointContent'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date of the touchpoint.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ProspectTouchpoint', @level2type=N'COLUMN', @level2name=N'TouchpointDate'
GO


/****** Table: [extension].[QuestionFormType] ******/

CREATE TABLE [extension].[QuestionFormType](
    [QuestionFormTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [QuestionFormType_PK] PRIMARY KEY CLUSTERED (
        [QuestionFormTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[QuestionFormType] ADD CONSTRAINT [QuestionFormType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[QuestionFormType] ADD CONSTRAINT [QuestionFormType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[QuestionFormType] ADD CONSTRAINT [QuestionFormType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The form of question: 1) Radio box: multiple choice, single selection; 2) Checkbox: Multiple choice, multiple selection; 3) Dropdown: multiple choice, single selection; 4) Matrix, numeric rating scale; 5) Matrix of dropdowns; 6) Ranking; 7) Single textbox; 8) Matrix of text boxes.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'QuestionFormType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for QuestionForm', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'QuestionFormType', @level2type=N'COLUMN', @level2name=N'QuestionFormTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'QuestionFormType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the QuestionForm type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'QuestionFormType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the QuestionForm type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'QuestionFormType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[RecruitmentEvent] ******/

CREATE TABLE [extension].[RecruitmentEvent](
    [EventDate] [DATE] NOT NULL,
    [EventDescription] [NVARCHAR](255) NULL,
    [EventTitle] [NVARCHAR](50) NOT NULL,
    [EventLocation] [NVARCHAR](255) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [RecruitmentEvent_PK] PRIMARY KEY CLUSTERED (
        [EventDate] ASC,
        [EventTitle] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[RecruitmentEvent] ADD CONSTRAINT [RecruitmentEvent_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[RecruitmentEvent] ADD CONSTRAINT [RecruitmentEvent_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[RecruitmentEvent] ADD CONSTRAINT [RecruitmentEvent_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Events associated with the recruitment process.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'RecruitmentEvent'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date of the event.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RecruitmentEvent', @level2type=N'COLUMN', @level2name=N'EventDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The long description of the event.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RecruitmentEvent', @level2type=N'COLUMN', @level2name=N'EventDescription'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title of the event.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RecruitmentEvent', @level2type=N'COLUMN', @level2name=N'EventTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) The location of the event.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RecruitmentEvent', @level2type=N'COLUMN', @level2name=N'EventLocation'
GO


/****** Table: [extension].[Rubric] ******/

CREATE TABLE [extension].[Rubric](
    [EducationOrganizationId] [INT] NOT NULL,
    [RubricTypeDescriptorId] [INT] NOT NULL,
    [RubricTitle] [NVARCHAR](15) NOT NULL,
    [RubricDescription] [NVARCHAR](255) NULL,
    [InterRaterReliabilityScore] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [Rubric_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [RubricTitle] ASC,
        [RubricTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[Rubric] ADD CONSTRAINT [Rubric_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[Rubric] ADD CONSTRAINT [Rubric_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[Rubric] ADD CONSTRAINT [Rubric_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents the rubric used to conduct the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'Rubric'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Rubric', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of rubric used to conduct the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Rubric', @level2type=N'COLUMN', @level2name=N'RubricTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Rubric', @level2type=N'COLUMN', @level2name=N'RubricTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Rubric', @level2type=N'COLUMN', @level2name=N'RubricDescription'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A score indicating how much homogeneity, or consensus, there is in the ratings given by judges.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Rubric', @level2type=N'COLUMN', @level2name=N'InterRaterReliabilityScore'
GO


/****** Table: [extension].[RubricLevel] ******/

CREATE TABLE [extension].[RubricLevel](
    [EducationOrganizationId] [INT] NOT NULL,
    [RubricTypeDescriptorId] [INT] NOT NULL,
    [RubricTitle] [NVARCHAR](15) NOT NULL,
    [RubricLevelCode] [NVARCHAR](20) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [RubricLevel_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [RubricLevelCode] ASC,
        [RubricTitle] ASC,
        [RubricTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[RubricLevel] ADD CONSTRAINT [RubricLevel_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[RubricLevel] ADD CONSTRAINT [RubricLevel_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[RubricLevel] ADD CONSTRAINT [RubricLevel_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents the level of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'RubricLevel'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevel', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of rubric used to conduct the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevel', @level2type=N'COLUMN', @level2name=N'RubricTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevel', @level2type=N'COLUMN', @level2name=N'RubricTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevel', @level2type=N'COLUMN', @level2name=N'RubricLevelCode'
GO


/****** Table: [extension].[RubricLevelResponse] ******/

CREATE TABLE [extension].[RubricLevelResponse](
    [ObservationIdentifier] [NVARCHAR](64) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [RubricTypeDescriptorId] [INT] NOT NULL,
    [RubricTitle] [NVARCHAR](15) NOT NULL,
    [RubricLevelCode] [NVARCHAR](20) NOT NULL,
    [NumericResponse] [INT] NOT NULL,
    [TextResponse] [NVARCHAR](255) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [RubricLevelResponse_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ObservationIdentifier] ASC,
        [RubricLevelCode] ASC,
        [RubricTitle] ASC,
        [RubricTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[RubricLevelResponse] ADD CONSTRAINT [RubricLevelResponse_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[RubricLevelResponse] ADD CONSTRAINT [RubricLevelResponse_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[RubricLevelResponse] ADD CONSTRAINT [RubricLevelResponse_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents the response to the rubric level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'RubricLevelResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An assigned unique identifier for the observation instance.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponse', @level2type=N'COLUMN', @level2name=N'ObservationIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponse', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of rubric used to conduct the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponse', @level2type=N'COLUMN', @level2name=N'RubricTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponse', @level2type=N'COLUMN', @level2name=N'RubricTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponse', @level2type=N'COLUMN', @level2name=N'RubricLevelCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The score for the specified level of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponse', @level2type=N'COLUMN', @level2name=N'NumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text response(s) for the question.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponse', @level2type=N'COLUMN', @level2name=N'TextResponse'
GO


/****** Table: [extension].[RubricLevelResponseFact] ******/

CREATE TABLE [extension].[RubricLevelResponseFact](
    [EducationOrganizationId] [INT] NOT NULL,
    [RubricTypeDescriptorId] [INT] NOT NULL,
    [RubricTitle] [NVARCHAR](15) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [RubricLevelCode] [NVARCHAR](20) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [RubricLevelResponseFact_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [FactsAsOfDate] ASC,
        [RubricLevelCode] ASC,
        [RubricTitle] ASC,
        [RubricTypeDescriptorId] ASC,
        [SchoolYear] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[RubricLevelResponseFact] ADD CONSTRAINT [RubricLevelResponseFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[RubricLevelResponseFact] ADD CONSTRAINT [RubricLevelResponseFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[RubricLevelResponseFact] ADD CONSTRAINT [RubricLevelResponseFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents the rubric level response at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'RubricLevelResponseFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponseFact', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of rubric used to conduct the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponseFact', @level2type=N'COLUMN', @level2name=N'RubricTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponseFact', @level2type=N'COLUMN', @level2name=N'RubricTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponseFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of-date for the aggregated observation data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponseFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelResponseFact', @level2type=N'COLUMN', @level2name=N'RubricLevelCode'
GO


/****** Table: [extension].[RubricLevelThemeType] ******/

CREATE TABLE [extension].[RubricLevelThemeType](
    [EducationOrganizationId] [INT] NOT NULL,
    [RubricTypeDescriptorId] [INT] NOT NULL,
    [RubricTitle] [NVARCHAR](15) NOT NULL,
    [RubricLevelCode] [NVARCHAR](20) NOT NULL,
    [ThemeTypeDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [RubricLevelThemeType_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [RubricLevelCode] ASC,
        [RubricTitle] ASC,
        [RubricTypeDescriptorId] ASC,
        [ThemeTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[RubricLevelThemeType] ADD CONSTRAINT [RubricLevelThemeType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The theme of the specified level of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'RubricLevelThemeType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelThemeType', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of rubric used to conduct the observation.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelThemeType', @level2type=N'COLUMN', @level2name=N'RubricTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelThemeType', @level2type=N'COLUMN', @level2name=N'RubricTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelThemeType', @level2type=N'COLUMN', @level2name=N'RubricLevelCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The theme of the specified level of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricLevelThemeType', @level2type=N'COLUMN', @level2name=N'ThemeTypeDescriptorId'
GO


/****** Table: [extension].[RubricType] ******/

CREATE TABLE [extension].[RubricType](
    [RubricTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [RubricType_PK] PRIMARY KEY CLUSTERED (
        [RubricTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[RubricType] ADD CONSTRAINT [RubricType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[RubricType] ADD CONSTRAINT [RubricType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[RubricType] ADD CONSTRAINT [RubricType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the rubric types.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'RubricType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for Rubric', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricType', @level2type=N'COLUMN', @level2name=N'RubricTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the Rubric type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the Rubric type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[RubricTypeDescriptor] ******/

CREATE TABLE [extension].[RubricTypeDescriptor](
    [RubricTypeDescriptorId] [INT] NOT NULL,
    [RubricTypeId] [INT] NULL,
    CONSTRAINT [RubricTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [RubricTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the rubric types.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'RubricTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricTypeDescriptor', @level2type=N'COLUMN', @level2name=N'RubricTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'RubricTypeDescriptor', @level2type=N'COLUMN', @level2name=N'RubricTypeId'
GO


/****** Table: [extension].[SalaryType] ******/

CREATE TABLE [extension].[SalaryType](
    [SalaryTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SalaryType_PK] PRIMARY KEY CLUSTERED (
        [SalaryTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SalaryType] ADD CONSTRAINT [SalaryType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SalaryType] ADD CONSTRAINT [SalaryType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SalaryType] ADD CONSTRAINT [SalaryType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the salary types.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SalaryType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for Salary', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SalaryType', @level2type=N'COLUMN', @level2name=N'SalaryTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SalaryType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the Salary type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SalaryType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the Salary type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SalaryType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[SalaryTypeDescriptor] ******/

CREATE TABLE [extension].[SalaryTypeDescriptor](
    [SalaryTypeDescriptorId] [INT] NOT NULL,
    [SalaryTypeId] [INT] NULL,
    CONSTRAINT [SalaryTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [SalaryTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the type of salary that a staff member is receiving.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SalaryTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SalaryTypeDescriptor', @level2type=N'COLUMN', @level2name=N'SalaryTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SalaryTypeDescriptor', @level2type=N'COLUMN', @level2name=N'SalaryTypeId'
GO


/****** Table: [extension].[SchoolExtension] ******/

CREATE TABLE [extension].[SchoolExtension](
    [SchoolStatusDescriptorId] [INT] NULL,
    [ImprovingSchool] [BIT] NULL,
    [SchoolId] [INT] NOT NULL,
    CONSTRAINT [SchoolExtension_PK] PRIMARY KEY CLUSTERED (
        [SchoolId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SchoolExtension'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The status of school e.g. priority or focus.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SchoolExtension', @level2type=N'COLUMN', @level2name=N'SchoolStatusDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of whether a school is identified as an improving school.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SchoolExtension', @level2type=N'COLUMN', @level2name=N'ImprovingSchool'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SchoolExtension', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO


/****** Table: [extension].[SchoolStatusDescriptor] ******/

CREATE TABLE [extension].[SchoolStatusDescriptor](
    [SchoolStatusDescriptorId] [INT] NOT NULL,
    [SchoolStatusTypeId] [INT] NULL,
    CONSTRAINT [SchoolStatusDescriptor_PK] PRIMARY KEY CLUSTERED (
        [SchoolStatusDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the status of a school e.g. priority or focus.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SchoolStatusDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SchoolStatusDescriptor', @level2type=N'COLUMN', @level2name=N'SchoolStatusDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SchoolStatusDescriptor', @level2type=N'COLUMN', @level2name=N'SchoolStatusTypeId'
GO


/****** Table: [extension].[SchoolStatusType] ******/

CREATE TABLE [extension].[SchoolStatusType](
    [SchoolStatusTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SchoolStatusType_PK] PRIMARY KEY CLUSTERED (
        [SchoolStatusTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SchoolStatusType] ADD CONSTRAINT [SchoolStatusType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SchoolStatusType] ADD CONSTRAINT [SchoolStatusType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SchoolStatusType] ADD CONSTRAINT [SchoolStatusType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the type of the school status.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SchoolStatusType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for SchoolStatus', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SchoolStatusType', @level2type=N'COLUMN', @level2name=N'SchoolStatusTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SchoolStatusType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the SchoolStatus type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SchoolStatusType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the SchoolStatus type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SchoolStatusType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[SectionCourseTranscriptFact] ******/

CREATE TABLE [extension].[SectionCourseTranscriptFact](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [CourseTitle] [NVARCHAR](60) NULL,
    [AggregatedGPAMax] [DECIMAL](18, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SectionCourseTranscriptFact_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionCourseTranscriptFact] ADD CONSTRAINT [SectionCourseTranscriptFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SectionCourseTranscriptFact] ADD CONSTRAINT [SectionCourseTranscriptFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SectionCourseTranscriptFact] ADD CONSTRAINT [SectionCourseTranscriptFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the final letter grade earned of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionCourseTranscriptFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated	SchoolYear', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the final letter grade earned of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'CourseTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The maximum grade point average a student can receive in the course', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFact', @level2type=N'COLUMN', @level2name=N'AggregatedGPAMax'
GO


/****** Table: [extension].[SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned] ******/

CREATE TABLE [extension].[SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [FinalLetterGrade] [NVARCHAR](20) NOT NULL,
    [LetterGradeTypeNumber] [INT] NOT NULL,
    [LetterGradeTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned] ADD CONSTRAINT [SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the final letter grade earned of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The final indicator of student performance in a class as submitted by the instructor.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'FinalLetterGrade'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students receiving a letter grade by letter grade type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'LetterGradeTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student receiving a letter grade by type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned', @level2type=N'COLUMN', @level2name=N'LetterGradeTypePercentage'
GO


/****** Table: [extension].[SectionCourseTranscriptFactAggregatedNumericGradeEarned] ******/

CREATE TABLE [extension].[SectionCourseTranscriptFactAggregatedNumericGradeEarned](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [AverageFinalNumericGradeEarned] [DECIMAL](9, 2) NOT NULL,
    [NumericGradeNCount] [INT] NULL,
    [NumericGradeStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionCourseTranscriptFactAggregatedNumericGradeEarned_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionCourseTranscriptFactAggregatedNumericGradeEarned] ADD CONSTRAINT [SectionCourseTranscriptFactAggregatedNumericGradeEarned_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the numeric grade received by the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average final numeric grade for the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'AverageFinalNumericGradeEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average numeric grade for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'NumericGradeNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average numeric grade for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactAggregatedNumericGradeEarned', @level2type=N'COLUMN', @level2name=N'NumericGradeStandardDeviation'
GO


/****** Table: [extension].[SectionCourseTranscriptFactStudentsEnrolled] ******/

CREATE TABLE [extension].[SectionCourseTranscriptFactStudentsEnrolled](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionCourseTranscriptFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [FactsAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionCourseTranscriptFactStudentsEnrolled] ADD CONSTRAINT [SectionCourseTranscriptFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionCourseTranscriptFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionCourseTranscriptFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[SectionStudentAcademicRecordFact] ******/

CREATE TABLE [extension].[SectionStudentAcademicRecordFact](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SectionStudentAcademicRecordFact_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentAcademicRecordFact] ADD CONSTRAINT [SectionStudentAcademicRecordFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SectionStudentAcademicRecordFact] ADD CONSTRAINT [SectionStudentAcademicRecordFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SectionStudentAcademicRecordFact] ADD CONSTRAINT [SectionStudentAcademicRecordFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Complex type that provides data about a group of student and their academic record', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentAcademicRecordFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO


/****** Table: [extension].[SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] ******/

CREATE TABLE [extension].[SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [GradePointAverage] [DECIMAL](18, 4) NOT NULL,
    [GradePointNCount] [INT] NULL,
    [GradePointStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] ADD CONSTRAINT [SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the cumulative grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average cumulative grade point average for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average grade point for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointStandardDeviation'
GO


/****** Table: [extension].[SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage] ******/

CREATE TABLE [extension].[SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [GradePointAverage] [DECIMAL](18, 4) NOT NULL,
    [GradePointNCount] [INT] NULL,
    [GradePointStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage] ADD CONSTRAINT [SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the cumulative grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average cumulative grade point average for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average grade point for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average grade point for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage', @level2type=N'COLUMN', @level2name=N'GradePointStandardDeviation'
GO


/****** Table: [extension].[SectionStudentAcademicRecordFactStudentsEnrolled] ******/

CREATE TABLE [extension].[SectionStudentAcademicRecordFactStudentsEnrolled](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentAcademicRecordFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentAcademicRecordFactStudentsEnrolled] ADD CONSTRAINT [SectionStudentAcademicRecordFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAcademicRecordFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[SectionStudentAssessmentFact] ******/

CREATE TABLE [extension].[SectionStudentAssessmentFact](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [AssessmentTitle] [NVARCHAR](60) NULL,
    [AssessmentCategoryDescriptorId] [INT] NULL,
    [AcademicSubjectDescriptorId] [INT] NULL,
    [GradeLevelDescriptorId] [INT] NULL,
    [AdministrationDate] [DATE] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SectionStudentAssessmentFact_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SchoolYearTakenSchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentAssessmentFact] ADD CONSTRAINT [SectionStudentAssessmentFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SectionStudentAssessmentFact] ADD CONSTRAINT [SectionStudentAssessmentFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SectionStudentAssessmentFact] ADD CONSTRAINT [SectionStudentAssessmentFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'?', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentAssessmentFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term in which the assessment was administered', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title if any specific assessment given to a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AssessmentTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The category of an assessment based on format and content. For example: Achievement test Advanced placement test Alternate assessment\grade-level standards Attitudinal test Cognitive and perceptual skills test ...', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AssessmentCategoryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The academic subject associated with a CourseStudentAssessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level associated with a CourseStudentAssessment.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'GradeLevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date a specific assessment was administered to a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFact', @level2type=N'COLUMN', @level2name=N'AdministrationDate'
GO


/****** Table: [extension].[SectionStudentAssessmentFactAggregatedPerformanceLevel] ******/

CREATE TABLE [extension].[SectionStudentAssessmentFactAggregatedPerformanceLevel](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [PerformanceLevelMetNumber] [INT] NULL,
    [PerformanceLevelMetPercentage] [DECIMAL](5, 4) NULL,
    [PerformanceLevelTypeNumber] [INT] NULL,
    [PerformanceLevelTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentAssessmentFactAggregatedPerformanceLevel_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SchoolYearTakenSchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentAssessmentFactAggregatedPerformanceLevel] ADD CONSTRAINT [SectionStudentAssessmentFactAggregatedPerformanceLevel_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the performance level for an assessment of a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who met the performance level', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelMetNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who met the performance level', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelMetPercentage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who achieved each performance level by performance level type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who achieved perfromance level by each performance level type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedPerformanceLevel', @level2type=N'COLUMN', @level2name=N'PerformanceLevelTypePercentage'
GO


/****** Table: [extension].[SectionStudentAssessmentFactAggregatedScoreResult] ******/

CREATE TABLE [extension].[SectionStudentAssessmentFactAggregatedScoreResult](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [AssessmentReportingMethodTypeId] [INT] NOT NULL,
    [AverageScoreResultDataTypeResultDatatypeTypeId] [INT] NOT NULL,
    [AverageScoreResult] [NVARCHAR](35) NOT NULL,
    [ScoreNCount] [INT] NULL,
    [ScoreStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentAssessmentFactAggregatedScoreResult_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SchoolYearTakenSchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentAssessmentFactAggregatedScoreResult] ADD CONSTRAINT [SectionStudentAssessmentFactAggregatedScoreResult_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the score from an assessment of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentAssessmentFactAggregatedScoreResult'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The method that the administrator of the assessment uses to report the performance and achievement of all Students. It may be a qualitative method such as performance level descriptors or a quantitative method such as a numerical grade or cut score. More than one type of reporting method may be used.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'AssessmentReportingMethodTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'AverageScoreResultDataTypeResultDatatypeTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A meaningful average score or statistical expression of the performance of an group. The results can be expressed as a number, percentile, range, level, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'AverageScoreResult'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average assessment score for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'ScoreNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average assessment score for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactAggregatedScoreResult', @level2type=N'COLUMN', @level2name=N'ScoreStandardDeviation'
GO


/****** Table: [extension].[SectionStudentAssessmentFactStudentsEnrolled] ******/

CREATE TABLE [extension].[SectionStudentAssessmentFactStudentsEnrolled](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [SchoolYearTakenSchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentAssessmentFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SchoolYearTakenSchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentAssessmentFactStudentsEnrolled] ADD CONSTRAINT [SectionStudentAssessmentFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentAssessmentFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year the assessment was taken', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYearTakenSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentAssessmentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[SectionStudentFact] ******/

CREATE TABLE [extension].[SectionStudentFact](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SectionStudentFact_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFact] ADD CONSTRAINT [SectionStudentFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SectionStudentFact] ADD CONSTRAINT [SectionStudentFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SectionStudentFact] ADD CONSTRAINT [SectionStudentFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This domain entity collects data for aggregated level students with whom the teacher candidate is associated through field work or student teaching', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFact', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFact', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFact', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFact', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFact', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFact', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFact', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO


/****** Table: [extension].[SectionStudentFactAggregatedELLEnrollment] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedELLEnrollment](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [ELLEnrollmentNumber] [INT] NULL,
    [ELLEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedELLEnrollment_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedELLEnrollment] ADD CONSTRAINT [SectionStudentFactAggregatedELLEnrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the ELL enrollment of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedELLEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who are ELL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ELLEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who are identified as ELL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedELLEnrollment', @level2type=N'COLUMN', @level2name=N'ELLEnrollmentPercentage'
GO


/****** Table: [extension].[SectionStudentFactAggregatedESLEnrollment] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedESLEnrollment](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [ESLEnrollmentNumber] [INT] NULL,
    [ESLEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedESLEnrollment_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedESLEnrollment] ADD CONSTRAINT [SectionStudentFactAggregatedESLEnrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the ESL enrollment of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedESLEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who are ESL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ESLEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who are identified as ESL', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedESLEnrollment', @level2type=N'COLUMN', @level2name=N'ESLEnrollmentPercentage'
GO


/****** Table: [extension].[SectionStudentFactAggregatedGender] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedGender](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [GenderTypeId] [INT] NULL,
    [GenderTypeNumber] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedGender_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedGender] ADD CONSTRAINT [SectionStudentFactAggregatedGender_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the gender', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedGender'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The gender with which a person associates.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'GenderTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who associate with each gender type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedGender', @level2type=N'COLUMN', @level2name=N'GenderTypeNumber'
GO


/****** Table: [extension].[SectionStudentFactAggregatedHispanicLatinoEthnicity] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedHispanicLatinoEthnicity](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [HispanicLatinoEthnicity] [BIT] NOT NULL,
    [HispanicLatinoEthnicityNumber] [INT] NULL,
    [HispanicLatinoEthnicityPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedHispanicLatinoEthnicity_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedHispanicLatinoEthnicity] ADD CONSTRAINT [SectionStudentFactAggregatedHispanicLatinoEthnicity_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the Eth ethnicity of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the individual traces his or her origin or descent to Mexico, Puerto Rico, Cuba, Central, and South America, and other Spanish cultures, regardless of race. The term, "Spanish origin," can be used in addition to "Hispanic or Latino."', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicity'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who are hispanic/latino', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicityNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who are identified as hispanic/latino', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedHispanicLatinoEthnicity', @level2type=N'COLUMN', @level2name=N'HispanicLatinoEthnicityPercentage'
GO


/****** Table: [extension].[SectionStudentFactAggregatedLanguage] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedLanguage](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [LanguageDescriptorId] [INT] NULL,
    [LanguageTypeNumber] [INT] NULL,
    [LanguageTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedLanguage_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedLanguage] ADD CONSTRAINT [SectionStudentFactAggregatedLanguage_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The data about the language', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedLanguage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the language of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'LanguageDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student by each lanugage type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'LanguageTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student by language type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedLanguage', @level2type=N'COLUMN', @level2name=N'LanguageTypePercentage'
GO


/****** Table: [extension].[SectionStudentFactAggregatedRace] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedRace](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [RaceTypeId] [INT] NULL,
    [RaceTypeNumber] [INT] NULL,
    [RaceTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedRace_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedRace] ADD CONSTRAINT [SectionStudentFactAggregatedRace_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the race of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedRace'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The general racial category which most clearly reflects the individual''s recognition of his or her community or with which the individual most identifies. The way this data element is listed, it must allow for multiple entries so that each individual can specify all appropriate races.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'RaceTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students by each race type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'RaceTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students by each race type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedRace', @level2type=N'COLUMN', @level2name=N'RaceTypePercentage'
GO


/****** Table: [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [SchoolFoodServicesEligibilityDescriptorId] [INT] NULL,
    [TypeNumber] [INT] NULL,
    [TypePercentage] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedSchoolFoodServicesEligibility_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility] ADD CONSTRAINT [SectionStudentFactAggregatedSchoolFoodServicesEligibility_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies if the student is eligible for Free and Reduce Price Lunch', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the students who are enrolled based on School Food Services Eligibility', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'SchoolFoodServicesEligibilityDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students eligibile for SchoolFoodServicesEligibility by category', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'TypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who are eligible for SchoolFoodServicesEligibility by type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSchoolFoodServicesEligibility', @level2type=N'COLUMN', @level2name=N'TypePercentage'
GO


/****** Table: [extension].[SectionStudentFactAggregatedSection504Enrollment] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedSection504Enrollment](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [Number504Enrolled] [INT] NULL,
    [Percentage504Enrolled] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedSection504Enrollment_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedSection504Enrollment] ADD CONSTRAINT [SectionStudentFactAggregatedSection504Enrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the students who are enrolled in a 504 program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedSection504Enrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students who are enrolled in a 504 program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'Number504Enrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who are enrolled in a 504 program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSection504Enrollment', @level2type=N'COLUMN', @level2name=N'Percentage504Enrolled'
GO


/****** Table: [extension].[SectionStudentFactAggregatedSex] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedSex](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [SexTypeId] [INT] NOT NULL,
    [SexTypeNumber] [INT] NULL,
    [SexTypePercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedSex_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedSex] ADD CONSTRAINT [SectionStudentFactAggregatedSex_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the sex of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedSex'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A person''s gender.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SexTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students by each sex type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SexTypeNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student by each sex type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSex', @level2type=N'COLUMN', @level2name=N'SexTypePercentage'
GO


/****** Table: [extension].[SectionStudentFactAggregatedSPED] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedSPED](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [SPEDEnrollmentNumber] [INT] NULL,
    [SPEDEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedSPED_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedSPED] ADD CONSTRAINT [SectionStudentFactAggregatedSPED_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the enrollment in SPED of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedSPED'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students enrolled in SPED', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SPEDEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student enrolled in a SPED program', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedSPED', @level2type=N'COLUMN', @level2name=N'SPEDEnrollmentPercentage'
GO


/****** Table: [extension].[SectionStudentFactAggregatedTitleIEnrollment] ******/

CREATE TABLE [extension].[SectionStudentFactAggregatedTitleIEnrollment](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [TitleIEnrollmentNumber] [INT] NULL,
    [TitleIEnrollmentPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactAggregatedTitleIEnrollment_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactAggregatedTitleIEnrollment] ADD CONSTRAINT [SectionStudentFactAggregatedTitleIEnrollment_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the enrollment in Title I of the group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactAggregatedTitleIEnrollment'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students eligible for Title I', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'TitleIEnrollmentNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of student who are Title I eligible', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactAggregatedTitleIEnrollment', @level2type=N'COLUMN', @level2name=N'TitleIEnrollmentPercentage'
GO


/****** Table: [extension].[SectionStudentFactDisabilityByType] ******/

CREATE TABLE [extension].[SectionStudentFactDisabilityByType](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [DisabilityDescriptorId] [INT] NULL,
    [Percentage] [DECIMAL](5, 4) NOT NULL,
    [TypeNumber] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactDisabilityByType_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactDisabilityByType] ADD CONSTRAINT [SectionStudentFactDisabilityByType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Students in the course who have a disability by disability type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactDisabilityByType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Data about the diability of a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'DisabilityDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The percentage of students who have a disability by each specific disability type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'Percentage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who have a disability by disability type', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactDisabilityByType', @level2type=N'COLUMN', @level2name=N'TypeNumber'
GO


/****** Table: [extension].[SectionStudentFactStudentsEnrolled] ******/

CREATE TABLE [extension].[SectionStudentFactStudentsEnrolled](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [NumberStudentsEnrolled] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactStudentsEnrolled_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactStudentsEnrolled] ADD CONSTRAINT [SectionStudentFactStudentsEnrolled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the number of students enrolled', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactStudentsEnrolled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of student enrolled in the respective Section', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactStudentsEnrolled', @level2type=N'COLUMN', @level2name=N'NumberStudentsEnrolled'
GO


/****** Table: [extension].[SectionStudentFactTotalStudentsDisabled] ******/

CREATE TABLE [extension].[SectionStudentFactTotalStudentsDisabled](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [ValueTypeId] [INT] NULL,
    [StudentsDisabledNumber] [INT] NULL,
    [StudentsDisabledPercentage] [DECIMAL](5, 4) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionStudentFactTotalStudentsDisabled_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionStudentFactTotalStudentsDisabled] ADD CONSTRAINT [SectionStudentFactTotalStudentsDisabled_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'?', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionStudentFactTotalStudentsDisabled'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of student who have a disability', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'StudentsDisabledNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Percentage of students who have a disability', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionStudentFactTotalStudentsDisabled', @level2type=N'COLUMN', @level2name=N'StudentsDisabledPercentage'
GO


/****** Table: [extension].[SectionSurveyResponseFact] ******/

CREATE TABLE [extension].[SectionSurveyResponseFact](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SectionSurveyResponseFact_PK] PRIMARY KEY CLUSTERED (
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [FactsAsOfDate] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [SurveyIdentifier] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionSurveyResponseFact] ADD CONSTRAINT [SectionSurveyResponseFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SectionSurveyResponseFact] ADD CONSTRAINT [SectionSurveyResponseFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SectionSurveyResponseFact] ADD CONSTRAINT [SectionSurveyResponseFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Survey response data provided at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionSurveyResponseFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for the aggregated survey data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of-date for the aggregated survey data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveyResponseFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO


/****** Table: [extension].[SectionSurveySectionResponseRatingFact] ******/

CREATE TABLE [extension].[SectionSurveySectionResponseRatingFact](
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [FactsAsOfDate] [DATE] NOT NULL,
    [SurveySectionTitle] [NVARCHAR](50) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SectionSurveySectionResponseRatingFact_PK] PRIMARY KEY CLUSTERED (
        [SurveyIdentifier] ASC,
        [SurveySectionTitle] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionSurveySectionResponseRatingFact] ADD CONSTRAINT [SectionSurveySectionResponseRatingFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SectionSurveySectionResponseRatingFact] ADD CONSTRAINT [SectionSurveySectionResponseRatingFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SectionSurveySectionResponseRatingFact] ADD CONSTRAINT [SectionSurveySectionResponseRatingFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Responses to survey sections collected at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionSurveySectionResponseRatingFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The as-of-date for the aggregated survey data.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'FactsAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or label for the survey section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFact', @level2type=N'COLUMN', @level2name=N'SurveySectionTitle'
GO


/****** Table: [extension].[SectionSurveySectionResponseRatingFactAggregatedNumericResponse] ******/

CREATE TABLE [extension].[SectionSurveySectionResponseRatingFactAggregatedNumericResponse](
    [SurveySectionTitle] [NVARCHAR](50) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [AverageNumericResponse] [DECIMAL](18, 4) NOT NULL,
    [NumericResponseNCount] [INT] NULL,
    [NumericResponseStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SectionSurveySectionResponseRatingFactAggregatedNumericResponse_PK] PRIMARY KEY CLUSTERED (
        [SurveyIdentifier] ASC,
        [SurveySectionTitle] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SectionSurveySectionResponseRatingFactAggregatedNumericResponse] ADD CONSTRAINT [SectionSurveySectionResponseRatingFactAggregatedNumericResponse_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average of the numeric responses to survey sections collected at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SectionSurveySectionResponseRatingFactAggregatedNumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or label for the survey section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'SurveySectionTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average numeric response for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'AverageNumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average numeric grade for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'NumericResponseNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average numeric grade for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SectionSurveySectionResponseRatingFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'NumericResponseStandardDeviation'
GO


/****** Table: [extension].[StaffApplicant] ******/

CREATE TABLE [extension].[StaffApplicant](
    [StaffUSI] [INT] NOT NULL,
    [ApplicantIdentifier] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffApplicant_PK] PRIMARY KEY CLUSTERED (
        [ApplicantIdentifier] ASC,
        [EducationOrganizationId] ASC,
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffApplicant] ADD CONSTRAINT [StaffApplicant_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Reference to applicant(s) represented by this staff member.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffApplicant'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffApplicant', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffApplicant', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffApplicant', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO


/****** Table: [extension].[StaffBackgroundCheck] ******/

CREATE TABLE [extension].[StaffBackgroundCheck](
    [StaffUSI] [INT] NOT NULL,
    [BackgroundCheckTypeDescriptorId] [INT] NOT NULL,
    [BackgroundCheckRequestedDate] [DATE] NOT NULL,
    [BackgroundCheckStatusDescriptorId] [INT] NULL,
    [BackgroundCheckCompletedDate] [DATE] NULL,
    [Fingerprint] [BIT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffBackgroundCheck_PK] PRIMARY KEY CLUSTERED (
        [BackgroundCheckTypeDescriptorId] ASC,
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffBackgroundCheck] ADD CONSTRAINT [StaffBackgroundCheck_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Staff background check history and disposition.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffBackgroundCheck'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffBackgroundCheck', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of background check (e.g., online, criminal, employment).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the background check was requested.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckRequestedDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The status of the background check (e.g., pending, under investigation, offense(s) found, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckStatusDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the background check was completed.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckCompletedDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) Indicates that a person has or has not completed a fingerprint.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffBackgroundCheck', @level2type=N'COLUMN', @level2name=N'Fingerprint'
GO


/****** Table: [extension].[StaffCredentialExtension] ******/

CREATE TABLE [extension].[StaffCredentialExtension](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [RevocationDate] [DATE] NULL,
    [RevocationReason] [NVARCHAR](40) NULL,
    [SuspensionDate] [DATE] NULL,
    [SuspensionReason] [NVARCHAR](40) NULL,
    [ValueTypeId] [INT] NOT NULL,
    CONSTRAINT [StaffCredentialExtension_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [LevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The legal document or authorization giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffCredentialExtension'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential held by an individual was revoked.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'RevocationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Expanded reason for the revocation of credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'RevocationReason'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential held by an individual was suspended.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'SuspensionDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Expanded reason for the suspension of credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'SuspensionReason'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtension', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO


/****** Table: [extension].[StaffCredentialExtensionBoardCertification] ******/

CREATE TABLE [extension].[StaffCredentialExtensionBoardCertification](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [BoardCertification] [BIT] NULL,
    [BoardCertificationDate] [DATE] NULL,
    [BoardCertificationTypeDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffCredentialExtensionBoardCertification_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [LevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffCredentialExtensionBoardCertification] ADD CONSTRAINT [StaffCredentialExtensionBoardCertification_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Board certification information for a individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffCredentialExtensionBoardCertification'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of whether a individual is board certified.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertification'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which a board certification was awarded.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertificationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of board certification awarded to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertificationTypeDescriptorId'
GO


/****** Table: [extension].[StaffCredentialExtensionCertificationExam] ******/

CREATE TABLE [extension].[StaffCredentialExtensionCertificationExam](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [CertificationExamTitle] [NVARCHAR](60) NOT NULL,
    [CertificationExamTypeDescriptorId] [INT] NULL,
    [CertificationExamOverallScore] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffCredentialExtensionCertificationExam_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [LevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffCredentialExtensionCertificationExam] ADD CONSTRAINT [StaffCredentialExtensionCertificationExam_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Certification information for a individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffCredentialExtensionCertificationExam'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the certification.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of certification exam that taken.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The overall score that was received on the certification exam.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamOverallScore'
GO


/****** Table: [extension].[StaffCredentialExtensionRecommendation] ******/

CREATE TABLE [extension].[StaffCredentialExtensionRecommendation](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffCredentialExtensionRecommendation_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [LevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffCredentialExtensionRecommendation] ADD CONSTRAINT [StaffCredentialExtensionRecommendation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the recommenation for the credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffCredentialExtensionRecommendation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO


/****** Table: [extension].[StaffCredentialExtensionRecommendingInstitution] ******/

CREATE TABLE [extension].[StaffCredentialExtensionRecommendingInstitution](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [RecommendingInstutionName] [NVARCHAR](75) NOT NULL,
    [RecommendingDate] [DATE] NULL,
    [RecommendingInstitutionCountryDescriptorId] [INT] NULL,
    [RecommendingInstutionStateAbbreviationTypeId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffCredentialExtensionRecommendingInstitution_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [LevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffCredentialExtensionRecommendingInstitution] ADD CONSTRAINT [StaffCredentialExtensionRecommendingInstitution_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information regarding the institution that is recommending a candidate for certification.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffCredentialExtensionRecommendingInstitution'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The full, legally accepted name of the institution.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstutionName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which a recommendation for a candidate is made.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The country that the recommendation for a candidate was made in.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstitutionCountryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a recommendation was issued.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstutionStateAbbreviationTypeId'
GO


/****** Table: [extension].[StaffEducationOrganizationAssignmentAssociationExtension] ******/

CREATE TABLE [extension].[StaffEducationOrganizationAssignmentAssociationExtension](
    [YearsOfExperienceAtCurrentEducationOrganization] [DECIMAL](5, 2) NULL,
    [StaffUSI] [INT] NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [StaffClassificationDescriptorId] [INT] NOT NULL,
    [BeginDate] [DATE] NOT NULL,
    CONSTRAINT [StaffEducationOrganizationAssignmentAssociationExtension_PK] PRIMARY KEY CLUSTERED (
        [BeginDate] ASC,
        [EducationOrganizationId] ASC,
        [StaffClassificationDescriptorId] ASC,
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffEducationOrganizationAssignmentAssociationExtension'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of years that an individual has previously held a teaching position in one or more education institutions.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffEducationOrganizationAssignmentAssociationExtension', @level2type=N'COLUMN', @level2name=N'YearsOfExperienceAtCurrentEducationOrganization'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffEducationOrganizationAssignmentAssociationExtension', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffEducationOrganizationAssignmentAssociationExtension', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The titles of employment, official status, or rank of education staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffEducationOrganizationAssignmentAssociationExtension', @level2type=N'COLUMN', @level2name=N'StaffClassificationDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Month, day, and year of the start or effective date of a staff member''s employment, contract, or relationship with the LEA.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffEducationOrganizationAssignmentAssociationExtension', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO


/****** Table: [extension].[StaffExtension] ******/

CREATE TABLE [extension].[StaffExtension](
    [ProbationCompleteDate] [DATE] NULL,
    [Tenured] [BIT] NULL,
    [TenureTrack] [BIT] NULL,
    [StaffUSI] [INT] NOT NULL,
    CONSTRAINT [StaffExtension_PK] PRIMARY KEY CLUSTERED (
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffExtension'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the probation period ended or is scheduled to end.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffExtension', @level2type=N'COLUMN', @level2name=N'ProbationCompleteDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicator of whether the staff member is tenured.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffExtension', @level2type=N'COLUMN', @level2name=N'Tenured'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication that the staff is on track for tenure.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffExtension', @level2type=N'COLUMN', @level2name=N'TenureTrack'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffExtension', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO


/****** Table: [extension].[StaffFieldworkAbsenceEvent] ******/

CREATE TABLE [extension].[StaffFieldworkAbsenceEvent](
    [StaffUSI] [INT] NOT NULL,
    [EventDate] [DATE] NOT NULL,
    [HoursAbsent] [DECIMAL](3, 2) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [StaffFieldworkAbsenceEvent_PK] PRIMARY KEY CLUSTERED (
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffFieldworkAbsenceEvent] ADD CONSTRAINT [StaffFieldworkAbsenceEvent_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[StaffFieldworkAbsenceEvent] ADD CONSTRAINT [StaffFieldworkAbsenceEvent_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[StaffFieldworkAbsenceEvent] ADD CONSTRAINT [StaffFieldworkAbsenceEvent_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Expanded reason for the staff absence', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffFieldworkAbsenceEvent'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkAbsenceEvent', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date for this absence event', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkAbsenceEvent', @level2type=N'COLUMN', @level2name=N'EventDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'he hours the staff was absence if not the entire working day', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkAbsenceEvent', @level2type=N'COLUMN', @level2name=N'HoursAbsent'
GO


/****** Table: [extension].[StaffFieldworkExperience] ******/

CREATE TABLE [extension].[StaffFieldworkExperience](
    [FieldworkIdentifier] [NVARCHAR](20) NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [UniqueSectionCode] [NVARCHAR](255) NULL,
    [SequenceOfCourse] [INT] NULL,
    [LocalCourseCode] [NVARCHAR](60) NULL,
    [SchoolYear] [SMALLINT] NULL,
    [TermDescriptorId] [INT] NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NULL,
    [ClassPeriodName] [NVARCHAR](20) NULL,
    [FieldworkTypeDescriptorId] [INT] NOT NULL,
    [HoursPerWeek] [DECIMAL](5, 2) NULL,
    [BeginDate] [DATE] NOT NULL,
    [EndDate] [DATE] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [StaffFieldworkExperience_PK] PRIMARY KEY CLUSTERED (
        [BeginDate] ASC,
        [FieldworkIdentifier] ASC,
        [SchoolId] ASC,
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffFieldworkExperience] ADD CONSTRAINT [StaffFieldworkExperience_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[StaffFieldworkExperience] ADD CONSTRAINT [StaffFieldworkExperience_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[StaffFieldworkExperience] ADD CONSTRAINT [StaffFieldworkExperience_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information regarding a postsecondary instructional course in a particular field of study that typically involves a prescribed number or instruction periods or meetings for enrolled students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffFieldworkExperience'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identifier for the fieldwork experience', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'FieldworkIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of fieldwork being executed by a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'FieldworkTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of hours per week for fieldwork.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'HoursPerWeek'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which the staff first starts fieldwork.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which the staff ends fieldwork.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperience', @level2type=N'COLUMN', @level2name=N'EndDate'
GO


/****** Table: [extension].[StaffFieldworkExperienceCoteaching] ******/

CREATE TABLE [extension].[StaffFieldworkExperienceCoteaching](
    [FieldworkIdentifier] [NVARCHAR](20) NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [BeginDate] [DATE] NOT NULL,
    [EndDate] [DATE] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffFieldworkExperienceCoteaching_PK] PRIMARY KEY CLUSTERED (
        [BeginDate] ASC,
        [FieldworkIdentifier] ASC,
        [SchoolId] ASC,
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffFieldworkExperienceCoteaching] ADD CONSTRAINT [StaffFieldworkExperienceCoteaching_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The act of two teachers (teacher candidate and cooperating teacher) working together with groups of students; sharing the planning, organization, delivery, and assessment of instruction, as well as the physical space.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffFieldworkExperienceCoteaching'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identifier for the fieldwork experience', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperienceCoteaching', @level2type=N'COLUMN', @level2name=N'FieldworkIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperienceCoteaching', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperienceCoteaching', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which the teacher candidate first starts co-teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperienceCoteaching', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which the teacher candidate stopped co-teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffFieldworkExperienceCoteaching', @level2type=N'COLUMN', @level2name=N'EndDate'
GO


/****** Table: [extension].[StaffHighlyQualifiedAcademicSubject] ******/

CREATE TABLE [extension].[StaffHighlyQualifiedAcademicSubject](
    [StaffUSI] [INT] NOT NULL,
    [AcademicSubjectDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffHighlyQualifiedAcademicSubject_PK] PRIMARY KEY CLUSTERED (
        [AcademicSubjectDescriptorId] ASC,
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffHighlyQualifiedAcademicSubject] ADD CONSTRAINT [StaffHighlyQualifiedAcademicSubject_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The academic subject(s) in which the staff is deemed to be "highly qualified".', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffHighlyQualifiedAcademicSubject'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffHighlyQualifiedAcademicSubject', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The academic subject(s) in which the staff is deemed to be "highly qualified".', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffHighlyQualifiedAcademicSubject', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO


/****** Table: [extension].[StaffSalary] ******/

CREATE TABLE [extension].[StaffSalary](
    [StaffUSI] [INT] NOT NULL,
    [SalaryMinRange] [INT] NULL,
    [SalaryMaxRange] [INT] NULL,
    [SalaryTypeDescriptorId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffSalary_PK] PRIMARY KEY CLUSTERED (
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffSalary] ADD CONSTRAINT [StaffSalary_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information regarding the salary of a staff member.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffSalary'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffSalary', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The minimum salary range for a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffSalary', @level2type=N'COLUMN', @level2name=N'SalaryMinRange'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The maximum salary range for a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffSalary', @level2type=N'COLUMN', @level2name=N'SalaryMaxRange'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of salary that a staff member is receiving.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffSalary', @level2type=N'COLUMN', @level2name=N'SalaryTypeDescriptorId'
GO


/****** Table: [extension].[StaffSeniority] ******/

CREATE TABLE [extension].[StaffSeniority](
    [StaffUSI] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [NameOfInstitution] [NVARCHAR](75) NOT NULL,
    [YearsExperience] [DECIMAL](5, 2) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffSeniority_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [NameOfInstitution] ASC,
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffSeniority] ADD CONSTRAINT [StaffSeniority_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Entries of job experience contributing to computations of seniority.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffSeniority'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffSeniority', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of the credential being applied.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffSeniority', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the education organization worked.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffSeniority', @level2type=N'COLUMN', @level2name=N'NameOfInstitution'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of years of experience.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffSeniority', @level2type=N'COLUMN', @level2name=N'YearsExperience'
GO


/****** Table: [extension].[StaffStudentGrowthFact] ******/

CREATE TABLE [extension].[StaffStudentGrowthFact](
    [StaffUSI] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [StudentGrowthReportYearSchoolYear] [SMALLINT] NULL,
    [StudentGrowthMeasureDate] [DATE] NULL,
    [ResultDatatypeTypeId] [INT] NULL,
    [StudentGrowthTypeDescriptorId] [INT] NULL,
    [StudentGrowthTargetScore] [INT] NOT NULL,
    [StudentGrowthActualScore] [INT] NOT NULL,
    [StudentGrowthMet] [BIT] NOT NULL,
    [StudentGrowthNCount] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [StaffStudentGrowthFact_PK] PRIMARY KEY CLUSTERED (
        [FactAsOfDate] ASC,
        [SchoolYear] ASC,
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffStudentGrowthFact] ADD CONSTRAINT [StaffStudentGrowthFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[StaffStudentGrowthFact] ADD CONSTRAINT [StaffStudentGrowthFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[StaffStudentGrowthFact] ADD CONSTRAINT [StaffStudentGrowthFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Complex type that provides data about a group of students and their student growth as it pertains to the Teacher Candidate', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffStudentGrowthFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthReportYearSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the student growth is measured', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthMeasureDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'ResultDatatypeTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identification of the type of score that was used to determine student growth', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The target score that has been set of the group of students as it pertains to their student growth.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthTargetScore'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The actual score a group of students receives on their student growth assessment', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthActualScore'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies if the student has met the student growth target score', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthMet'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students included in the average score result.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthNCount'
GO


/****** Table: [extension].[StaffTeacherEducatorResearch] ******/

CREATE TABLE [extension].[StaffTeacherEducatorResearch](
    [StaffUSI] [INT] NOT NULL,
    [ResearchExperienceDate] [DATE] NOT NULL,
    [ResearchExperienceTitle] [NVARCHAR](60) NULL,
    [ResearchExperienceDescription] [NVARCHAR](1024) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffTeacherEducatorResearch_PK] PRIMARY KEY CLUSTERED (
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffTeacherEducatorResearch] ADD CONSTRAINT [StaffTeacherEducatorResearch_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Teacher preparation provider faculty that instruct teacher candidates in content area or pedagogy.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffTeacherEducatorResearch'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherEducatorResearch', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Month, day, and year of the start or effective date of a staff member''s teacher educator position for an Education Organization.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherEducatorResearch', @level2type=N'COLUMN', @level2name=N'ResearchExperienceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title of the research experience.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherEducatorResearch', @level2type=N'COLUMN', @level2name=N'ResearchExperienceTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the research experience.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherEducatorResearch', @level2type=N'COLUMN', @level2name=N'ResearchExperienceDescription'
GO


/****** Table: [extension].[StaffTeacherPreparationProgram] ******/

CREATE TABLE [extension].[StaffTeacherPreparationProgram](
    [StaffUSI] [INT] NOT NULL,
    [TeacherPreparationProgramName] [NVARCHAR](75) NOT NULL,
    [TeacherPreparationProgramIdentifier] [NVARCHAR](75) NULL,
    [TeacherPreparationProgramTypeDescriptorId] [INT] NOT NULL,
    [NameOfInstitution] [NVARCHAR](75) NOT NULL,
    [MajorSpecialization] [NVARCHAR](75) NOT NULL,
    [GPA] [DECIMAL](18, 4) NULL,
    [LevelOfDegreeAwardedDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffTeacherPreparationProgram_PK] PRIMARY KEY CLUSTERED (
        [StaffUSI] ASC,
        [TeacherPreparationProgramName] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffTeacherPreparationProgram] ADD CONSTRAINT [StaffTeacherPreparationProgram_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The Teacher Preparation Program(s) completed by the teacher.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffTeacherPreparationProgram'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the Teacher Preparation Program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An identifier assigned to the teacher preparation program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of teacher prep program (e.g., college, alternative, TFA, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the organization providing the teacher preparation program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'NameOfInstitution'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The major area for a degree or area of specialization for a certificate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'MajorSpecialization'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The final GPA for the teacher achieved in the program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'GPA'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The level of degree awarded by the teacher preparation program to the person (e.g., Certificate Only, Bachelor''s, Master''s, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgram', @level2type=N'COLUMN', @level2name=N'LevelOfDegreeAwardedDescriptorId'
GO


/****** Table: [extension].[StaffTeacherPreparationProgramAddress] ******/

CREATE TABLE [extension].[StaffTeacherPreparationProgramAddress](
    [TeacherPreparationProgramName] [NVARCHAR](75) NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [StreetNumberName] [NVARCHAR](150) NOT NULL,
    [ApartmentRoomSuiteNumber] [NVARCHAR](50) NULL,
    [BuildingSiteNumber] [NVARCHAR](20) NULL,
    [City] [NVARCHAR](30) NOT NULL,
    [StateAbbreviationTypeId] [INT] NOT NULL,
    [PostalCode] [NVARCHAR](17) NOT NULL,
    [NameOfCounty] [NVARCHAR](30) NULL,
    [CountyFIPSCode] [NVARCHAR](5) NULL,
    [Latitude] [NVARCHAR](20) NULL,
    [Longitude] [NVARCHAR](20) NULL,
    [BeginDate] [DATE] NULL,
    [EndDate] [DATE] NULL,
    [AddressTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffTeacherPreparationProgramAddress_PK] PRIMARY KEY CLUSTERED (
        [AddressTypeId] ASC,
        [StaffUSI] ASC,
        [TeacherPreparationProgramName] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffTeacherPreparationProgramAddress] ADD CONSTRAINT [StaffTeacherPreparationProgramAddress_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The address of the institution providing the teacher prep program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffTeacherPreparationProgramAddress'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the Teacher Preparation Program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The street number and street name or post office box number of an address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'StreetNumberName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The apartment, room, or suite number of an address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'ApartmentRoomSuiteNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of the building on the site, if more than one building shares the same address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'BuildingSiteNumber'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the city in which an address is located.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'City'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The abbreviation for the state (within the United States) or outlying area in which an address is located.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'StateAbbreviationTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The five or nine digit zip code or overseas postal code portion of an address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'PostalCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name of the county, parish, borough, or comparable unit (within a state) in which an address is located.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'NameOfCounty'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The Federal Information Processing Standards (FIPS) numeric code for the county issued by the National Institute of Standards and Technology (NIST). Counties are considered to be the "first-order subdivisions" of each State and statistically equivalent entity, regardless of their local designations (county, parish, borough, etc.) Counties in different States will have the same code. A unique county number is created when combined with the 2-digit FIPS State Code.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'CountyFIPSCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The geographic latitude of the physical address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'Latitude'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The geographic longitude of the physical address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'Longitude'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The first date the address is valid. For physical addresses, the date the person moved to that address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The last date the address is valid. For physical addresses, this would be the date the person moved from that address.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'EndDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of address listed for an individual or organization. For example:  Physical Address, Mailing Address, Home Address, etc.)', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProgramAddress', @level2type=N'COLUMN', @level2name=N'AddressTypeId'
GO


/****** Table: [extension].[StaffTeacherPreparationProviderAssociation] ******/

CREATE TABLE [extension].[StaffTeacherPreparationProviderAssociation](
    [StaffUSI] [INT] NOT NULL,
    [TeacherPreparationProviderId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [ProgramAssignmentDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [StaffTeacherPreparationProviderAssociation_PK] PRIMARY KEY CLUSTERED (
        [StaffUSI] ASC,
        [TeacherPreparationProviderId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociation] ADD CONSTRAINT [StaffTeacherPreparationProviderAssociation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociation] ADD CONSTRAINT [StaffTeacherPreparationProviderAssociation_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociation] ADD CONSTRAINT [StaffTeacherPreparationProviderAssociation_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the association between the Staff and the TeacherPreparationProvider', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffTeacherPreparationProviderAssociation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identification code for the Teacher Preparation Provider', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProviderId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier for a school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Program Assignment for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'ProgramAssignmentDescriptorId'
GO


/****** Table: [extension].[StaffTeacherPreparationProviderAssociationAcademicSubject] ******/

CREATE TABLE [extension].[StaffTeacherPreparationProviderAssociationAcademicSubject](
    [StaffUSI] [INT] NOT NULL,
    [TeacherPreparationProviderId] [INT] NOT NULL,
    [AcademicSubjectDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffTeacherPreparationProviderAssociationAcademicSubject_PK] PRIMARY KEY CLUSTERED (
        [AcademicSubjectDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeacherPreparationProviderId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociationAcademicSubject] ADD CONSTRAINT [StaffTeacherPreparationProviderAssociationAcademicSubject_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of a degree.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffTeacherPreparationProviderAssociationAcademicSubject'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderAssociationAcademicSubject', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identification code for the Teacher Preparation Provider', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderAssociationAcademicSubject', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProviderId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of a degree.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderAssociationAcademicSubject', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO


/****** Table: [extension].[StaffTeacherPreparationProviderAssociationGradeLevel] ******/

CREATE TABLE [extension].[StaffTeacherPreparationProviderAssociationGradeLevel](
    [StaffUSI] [INT] NOT NULL,
    [TeacherPreparationProviderId] [INT] NOT NULL,
    [GradeLevelDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [StaffTeacherPreparationProviderAssociationGradeLevel_PK] PRIMARY KEY CLUSTERED (
        [GradeLevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeacherPreparationProviderId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociationGradeLevel] ADD CONSTRAINT [StaffTeacherPreparationProviderAssociationGradeLevel_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade levels for the association.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffTeacherPreparationProviderAssociationGradeLevel'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderAssociationGradeLevel', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identification code for the Teacher Preparation Provider', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderAssociationGradeLevel', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProviderId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade levels for the association.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderAssociationGradeLevel', @level2type=N'COLUMN', @level2name=N'GradeLevelDescriptorId'
GO


/****** Table: [extension].[StaffTeacherPreparationProviderProgramAssociation] ******/

CREATE TABLE [extension].[StaffTeacherPreparationProviderProgramAssociation](
    [StaffUSI] [INT] NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [ProgramName] [NVARCHAR](60) NOT NULL,
    [ProgramTypeId] [INT] NOT NULL,
    [BeginDate] [DATE] NOT NULL,
    [EndDate] [DATE] NULL,
    [StudentRecordAccess] [BIT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [StaffTeacherPreparationProviderProgramAssociation_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ProgramName] ASC,
        [ProgramTypeId] ASC,
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StaffTeacherPreparationProviderProgramAssociation] ADD CONSTRAINT [StaffTeacherPreparationProviderProgramAssociation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[StaffTeacherPreparationProviderProgramAssociation] ADD CONSTRAINT [StaffTeacherPreparationProviderProgramAssociation_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[StaffTeacherPreparationProviderProgramAssociation] ADD CONSTRAINT [StaffTeacherPreparationProviderProgramAssociation_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This association indicates the Staff associated with a teacher preparation provider program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StaffTeacherPreparationProviderProgramAssociation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'ProgramName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'ProgramTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Start date for the association of staff to this program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'End date for the association of staff to this program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'EndDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicator of whether the staff has access to the student records of the program per district interpretation of FERPA and other privacy laws, regulations, and policies.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StaffTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'StudentRecordAccess'
GO


/****** Table: [extension].[StudentGradebookEntryExtension] ******/

CREATE TABLE [extension].[StudentGradebookEntryExtension](
    [DateCompleted] [DATE] NULL,
    [AssignmentPassed] [BIT] NULL,
    [StudentUSI] [INT] NOT NULL,
    [UniqueSectionCode] [NVARCHAR](255) NOT NULL,
    [SequenceOfCourse] [INT] NOT NULL,
    [LocalCourseCode] [NVARCHAR](60) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NOT NULL,
    [ClassPeriodName] [NVARCHAR](20) NOT NULL,
    [BeginDate] [DATE] NOT NULL,
    [GradebookEntryTitle] [NVARCHAR](60) NOT NULL,
    [DateAssigned] [DATE] NOT NULL,
    CONSTRAINT [StudentGradebookEntryExtension_PK] PRIMARY KEY CLUSTERED (
        [BeginDate] ASC,
        [ClassPeriodName] ASC,
        [ClassroomIdentificationCode] ASC,
        [DateAssigned] ASC,
        [GradebookEntryTitle] ASC,
        [LocalCourseCode] ASC,
        [SchoolId] ASC,
        [SchoolYear] ASC,
        [SequenceOfCourse] ASC,
        [StudentUSI] ASC,
        [TermDescriptorId] ASC,
        [UniqueSectionCode] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StudentGradebookEntryExtension'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date that the assignment was completed.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'DateCompleted'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indication of whether the assignment was passed or not.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'AssignmentPassed'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a student.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'StudentUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Month, day, and year of the Student''s entry or assignment to the Section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The name or title of the activity to be recorded in the GradebookEntry.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'GradebookEntryTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the assignment, homework, or assessment was assigned or executed.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGradebookEntryExtension', @level2type=N'COLUMN', @level2name=N'DateAssigned'
GO


/****** Table: [extension].[StudentGrowthType] ******/

CREATE TABLE [extension].[StudentGrowthType](
    [StudentGrowthTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [StudentGrowthType_PK] PRIMARY KEY CLUSTERED (
        [StudentGrowthTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[StudentGrowthType] ADD CONSTRAINT [StudentGrowthType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[StudentGrowthType] ADD CONSTRAINT [StudentGrowthType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[StudentGrowthType] ADD CONSTRAINT [StudentGrowthType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identification of the type of score that was used to determine student growth', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StudentGrowthType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for StudentGrowth', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGrowthType', @level2type=N'COLUMN', @level2name=N'StudentGrowthTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGrowthType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the StudentGrowth type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGrowthType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the StudentGrowth type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGrowthType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[StudentGrowthTypeDescriptor] ******/

CREATE TABLE [extension].[StudentGrowthTypeDescriptor](
    [StudentGrowthTypeDescriptorId] [INT] NOT NULL,
    [StudentGrowthTypeId] [INT] NOT NULL,
    CONSTRAINT [StudentGrowthTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [StudentGrowthTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identification of the type of score that was used to determine student growth', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'StudentGrowthTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGrowthTypeDescriptor', @level2type=N'COLUMN', @level2name=N'StudentGrowthTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'StudentGrowthTypeDescriptor', @level2type=N'COLUMN', @level2name=N'StudentGrowthTypeId'
GO


/****** Table: [extension].[Survey] ******/

CREATE TABLE [extension].[Survey](
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SurveyTitle] [NVARCHAR](50) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NULL,
    [SurveyCategoryDescriptorId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [Survey_PK] PRIMARY KEY CLUSTERED (
        [SurveyIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[Survey] ADD CONSTRAINT [Survey_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[Survey] ADD CONSTRAINT [Survey_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[Survey] ADD CONSTRAINT [Survey_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A survey to identified or anonymous respondants.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'Survey'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Survey', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Survey', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title of the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Survey', @level2type=N'COLUMN', @level2name=N'SurveyTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year associated with the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Survey', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The Term the survey was given.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Survey', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The Category or Type of Survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'Survey', @level2type=N'COLUMN', @level2name=N'SurveyCategoryDescriptorId'
GO


/****** Table: [extension].[SurveyCategoryDescriptor] ******/

CREATE TABLE [extension].[SurveyCategoryDescriptor](
    [SurveyCategoryDescriptorId] [INT] NOT NULL,
    [SurveyCategoryTypeId] [INT] NULL,
    CONSTRAINT [SurveyCategoryDescriptor_PK] PRIMARY KEY CLUSTERED (
        [SurveyCategoryDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the category or type of survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyCategoryDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyCategoryDescriptor', @level2type=N'COLUMN', @level2name=N'SurveyCategoryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyCategoryDescriptor', @level2type=N'COLUMN', @level2name=N'SurveyCategoryTypeId'
GO


/****** Table: [extension].[SurveyCategoryType] ******/

CREATE TABLE [extension].[SurveyCategoryType](
    [SurveyCategoryTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SurveyCategoryType_PK] PRIMARY KEY CLUSTERED (
        [SurveyCategoryTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveyCategoryType] ADD CONSTRAINT [SurveyCategoryType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SurveyCategoryType] ADD CONSTRAINT [SurveyCategoryType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SurveyCategoryType] ADD CONSTRAINT [SurveyCategoryType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the category or type of survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyCategoryType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for SurveyCategory', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyCategoryType', @level2type=N'COLUMN', @level2name=N'SurveyCategoryTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyCategoryType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the SurveyCategory type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyCategoryType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the SurveyCategory type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyCategoryType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[SurveyQuestion] ******/

CREATE TABLE [extension].[SurveyQuestion](
    [QuestionCode] [NVARCHAR](20) NOT NULL,
    [QuestionFormTypeId] [INT] NOT NULL,
    [QuestionText] [NVARCHAR](255) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [SurveySectionTitle] [NVARCHAR](50) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SurveyQuestion_PK] PRIMARY KEY CLUSTERED (
        [QuestionCode] ASC,
        [SurveyIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveyQuestion] ADD CONSTRAINT [SurveyQuestion_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SurveyQuestion] ADD CONSTRAINT [SurveyQuestion_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SurveyQuestion] ADD CONSTRAINT [SurveyQuestion_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The questions for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyQuestion'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestion', @level2type=N'COLUMN', @level2name=N'QuestionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The form of question: 1) Radio box: multiple choice, single selection; 2) Checkbox: Multiple choice, multiple selection; 3) Dropdown: multiple choice, single selection; 4) Matrix, numeric rating scale; 5) Matrix of dropdowns; 6) Ranking; 7) Single textbox; 8) Matrix of text boxes.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestion', @level2type=N'COLUMN', @level2name=N'QuestionFormTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text of the question.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestion', @level2type=N'COLUMN', @level2name=N'QuestionText'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestion', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or label for the survey section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestion', @level2type=N'COLUMN', @level2name=N'SurveySectionTitle'
GO


/****** Table: [extension].[SurveyQuestionMatrixElement] ******/

CREATE TABLE [extension].[SurveyQuestionMatrixElement](
    [QuestionCode] [NVARCHAR](20) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [MatrixElement] [NVARCHAR](50) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SurveyQuestionMatrixElement_PK] PRIMARY KEY CLUSTERED (
        [MatrixElement] ASC,
        [QuestionCode] ASC,
        [SurveyIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveyQuestionMatrixElement] ADD CONSTRAINT [SurveyQuestionMatrixElement_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'For matrix questions, the text identifying each row of the matrix.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyQuestionMatrixElement'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionMatrixElement', @level2type=N'COLUMN', @level2name=N'QuestionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionMatrixElement', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'For matrix questions, the text identifying each row of the matrix.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionMatrixElement', @level2type=N'COLUMN', @level2name=N'MatrixElement'
GO


/****** Table: [extension].[SurveyQuestionNumericChoice] ******/

CREATE TABLE [extension].[SurveyQuestionNumericChoice](
    [QuestionCode] [NVARCHAR](20) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [NumericChoice] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SurveyQuestionNumericChoice_PK] PRIMARY KEY CLUSTERED (
        [NumericChoice] ASC,
        [QuestionCode] ASC,
        [SurveyIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveyQuestionNumericChoice] ADD CONSTRAINT [SurveyQuestionNumericChoice_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'For matrix of rating scale and for ranking, the numeric choices.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyQuestionNumericChoice'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionNumericChoice', @level2type=N'COLUMN', @level2name=N'QuestionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionNumericChoice', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'For matrix of rating scale and for ranking, the numeric choices.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionNumericChoice', @level2type=N'COLUMN', @level2name=N'NumericChoice'
GO


/****** Table: [extension].[SurveyQuestionResponse] ******/

CREATE TABLE [extension].[SurveyQuestionResponse](
    [NoResponse] [BIT] NULL,
    [NumericResponse] [INT] NULL,
    [TextResponse] [NVARCHAR](255) NULL,
    [QuestionCode] [NVARCHAR](20) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [SurveyResponseIdentifier] [NVARCHAR](64) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SurveyQuestionResponse_PK] PRIMARY KEY CLUSTERED (
        [QuestionCode] ASC,
        [SurveyIdentifier] ASC,
        [SurveyResponseIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveyQuestionResponse] ADD CONSTRAINT [SurveyQuestionResponse_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SurveyQuestionResponse] ADD CONSTRAINT [SurveyQuestionResponse_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SurveyQuestionResponse] ADD CONSTRAINT [SurveyQuestionResponse_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The response to a survey question.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyQuestionResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates there was no response to the question.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponse', @level2type=N'COLUMN', @level2name=N'NoResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The numeric response to the question.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponse', @level2type=N'COLUMN', @level2name=N'NumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text response(s) for the question.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponse', @level2type=N'COLUMN', @level2name=N'TextResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponse', @level2type=N'COLUMN', @level2name=N'QuestionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponse', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier of the survey typically from the survey application.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponse', @level2type=N'COLUMN', @level2name=N'SurveyResponseIdentifier'
GO


/****** Table: [extension].[SurveyQuestionResponseFact] ******/

CREATE TABLE [extension].[SurveyQuestionResponseFact](
    [QuestionCode] [NVARCHAR](20) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SurveyQuestionResponseFact_PK] PRIMARY KEY CLUSTERED (
        [QuestionCode] ASC,
        [SurveyIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveyQuestionResponseFact] ADD CONSTRAINT [SurveyQuestionResponseFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SurveyQuestionResponseFact] ADD CONSTRAINT [SurveyQuestionResponseFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SurveyQuestionResponseFact] ADD CONSTRAINT [SurveyQuestionResponseFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Survey question response data provided at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyQuestionResponseFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseFact', @level2type=N'COLUMN', @level2name=N'QuestionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseFact', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO


/****** Table: [extension].[SurveyQuestionResponseFactAggregatedNumericResponse] ******/

CREATE TABLE [extension].[SurveyQuestionResponseFactAggregatedNumericResponse](
    [QuestionCode] [NVARCHAR](20) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [AverageNumericResponse] [DECIMAL](18, 4) NOT NULL,
    [NumericResponseNCount] [INT] NULL,
    [NumericResponseStandardDeviation] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SurveyQuestionResponseFactAggregatedNumericResponse_PK] PRIMARY KEY CLUSTERED (
        [QuestionCode] ASC,
        [SurveyIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveyQuestionResponseFactAggregatedNumericResponse] ADD CONSTRAINT [SurveyQuestionResponseFactAggregatedNumericResponse_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Numeric response survey data provided at the aggregate level.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyQuestionResponseFactAggregatedNumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'QuestionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The average numeric response for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'AverageNumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The total number of data values in set of data that makes up the average numeric grade for a group', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'NumericResponseNCount'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure used to quantify the amount of variation or dispersion of a set of data values, in this case specific to the average numeric grade for a group of students', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseFactAggregatedNumericResponse', @level2type=N'COLUMN', @level2name=N'NumericResponseStandardDeviation'
GO


/****** Table: [extension].[SurveyQuestionResponseSurveyQuestionMatrixElementResponse] ******/

CREATE TABLE [extension].[SurveyQuestionResponseSurveyQuestionMatrixElementResponse](
    [QuestionCode] [NVARCHAR](20) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [SurveyResponseIdentifier] [NVARCHAR](64) NOT NULL,
    [MatrixElement] [NVARCHAR](50) NOT NULL,
    [NoResponse] [BIT] NULL,
    [NumericResponse] [INT] NULL,
    [TextResponse] [NVARCHAR](255) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SurveyQuestionResponseSurveyQuestionMatrixElementResponse_PK] PRIMARY KEY CLUSTERED (
        [MatrixElement] ASC,
        [QuestionCode] ASC,
        [SurveyIdentifier] ASC,
        [SurveyResponseIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveyQuestionResponseSurveyQuestionMatrixElementResponse] ADD CONSTRAINT [SurveyQuestionResponseSurveyQuestionMatrixElementResponse_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'For matrix questions, the response for each row of the matrix.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyQuestionResponseSurveyQuestionMatrixElementResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseSurveyQuestionMatrixElementResponse', @level2type=N'COLUMN', @level2name=N'QuestionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseSurveyQuestionMatrixElementResponse', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier of the survey typically from the survey application.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseSurveyQuestionMatrixElementResponse', @level2type=N'COLUMN', @level2name=N'SurveyResponseIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'For matrix questions, the text identifying each row of the matrix.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseSurveyQuestionMatrixElementResponse', @level2type=N'COLUMN', @level2name=N'MatrixElement'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates there was no response to the question.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseSurveyQuestionMatrixElementResponse', @level2type=N'COLUMN', @level2name=N'NoResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The numeric response to the question.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseSurveyQuestionMatrixElementResponse', @level2type=N'COLUMN', @level2name=N'NumericResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The text response(s) for the question.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionResponseSurveyQuestionMatrixElementResponse', @level2type=N'COLUMN', @level2name=N'TextResponse'
GO


/****** Table: [extension].[SurveyQuestionTextChoice] ******/

CREATE TABLE [extension].[SurveyQuestionTextChoice](
    [QuestionCode] [NVARCHAR](20) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [TextChoice] [NVARCHAR](50) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [SurveyQuestionTextChoice_PK] PRIMARY KEY CLUSTERED (
        [QuestionCode] ASC,
        [SurveyIdentifier] ASC,
        [TextChoice] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveyQuestionTextChoice] ADD CONSTRAINT [SurveyQuestionTextChoice_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'For radio buttons, checkboxes, dropdowns, matrix of drop downs - the list of choices.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyQuestionTextChoice'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifying code for the question, unique for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionTextChoice', @level2type=N'COLUMN', @level2name=N'QuestionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionTextChoice', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'For radio buttons, checkboxes, dropdowns, matrix of drop downs - the list of choices.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyQuestionTextChoice', @level2type=N'COLUMN', @level2name=N'TextChoice'
GO


/****** Table: [extension].[SurveyResponse] ******/

CREATE TABLE [extension].[SurveyResponse](
    [SurveyResponseIdentifier] [NVARCHAR](64) NOT NULL,
    [ResponseDate] [DATE] NOT NULL,
    [ElectronicMailAddress] [NVARCHAR](128) NULL,
    [FullName] [NVARCHAR](80) NULL,
    [Location] [NVARCHAR](75) NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [StudentUSI] [INT] NULL,
    [ParentUSI] [INT] NULL,
    [StaffUSI] [INT] NULL,
    [ApplicantIdentifier] [NVARCHAR](32) NULL,
    [EducationOrganizationId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SurveyResponse_PK] PRIMARY KEY CLUSTERED (
        [SurveyIdentifier] ASC,
        [SurveyResponseIdentifier] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveyResponse] ADD CONSTRAINT [SurveyResponse_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SurveyResponse] ADD CONSTRAINT [SurveyResponse_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SurveyResponse] ADD CONSTRAINT [SurveyResponse_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Responses to a Survey for named or anonymous persons.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveyResponse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier of the survey typically from the survey application.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'SurveyResponseIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date of the survey response.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'ResponseDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Email address of the respondent.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'ElectronicMailAddress'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Full name of the respondent.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'FullName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Location of the respondent, oten a citr, district, or school.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'Location'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a student.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'StudentUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a parent.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'ParentUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifier assigned to a person making formal application for an open staff position.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'ApplicantIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveyResponse', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO


/****** Table: [extension].[SurveySection] ******/

CREATE TABLE [extension].[SurveySection](
    [SurveySectionTitle] [NVARCHAR](50) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SurveySection_PK] PRIMARY KEY CLUSTERED (
        [SurveyIdentifier] ASC,
        [SurveySectionTitle] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveySection] ADD CONSTRAINT [SurveySection_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SurveySection] ADD CONSTRAINT [SurveySection_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SurveySection] ADD CONSTRAINT [SurveySection_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The section(s) of questions for the survey.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveySection'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or label for the survey section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveySection', @level2type=N'COLUMN', @level2name=N'SurveySectionTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveySection', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO


/****** Table: [extension].[SurveySectionResponseRating] ******/

CREATE TABLE [extension].[SurveySectionResponseRating](
    [SectionRating] [DECIMAL](9, 3) NOT NULL,
    [SurveySectionTitle] [NVARCHAR](50) NOT NULL,
    [SurveyIdentifier] [NVARCHAR](64) NOT NULL,
    [SurveyResponseIdentifier] [NVARCHAR](64) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [SurveySectionResponseRating_PK] PRIMARY KEY CLUSTERED (
        [SurveyIdentifier] ASC,
        [SurveyResponseIdentifier] ASC,
        [SurveySectionTitle] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[SurveySectionResponseRating] ADD CONSTRAINT [SurveySectionResponseRating_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[SurveySectionResponseRating] ADD CONSTRAINT [SurveySectionResponseRating_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[SurveySectionResponseRating] ADD CONSTRAINT [SurveySectionResponseRating_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Optional numeric rating computed from the survey responses for the section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'SurveySectionResponseRating'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Numeric rating computed from the survey responses for the section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveySectionResponseRating', @level2type=N'COLUMN', @level2name=N'SectionRating'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or label for the survey section.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveySectionResponseRating', @level2type=N'COLUMN', @level2name=N'SurveySectionTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique survey identifier from the survey tool.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveySectionResponseRating', @level2type=N'COLUMN', @level2name=N'SurveyIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier of the survey typically from the survey application.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'SurveySectionResponseRating', @level2type=N'COLUMN', @level2name=N'SurveyResponseIdentifier'
GO


/****** Table: [extension].[TeacherCandidate] ******/

CREATE TABLE [extension].[TeacherCandidate](
    [TeacherCandidateUniqueId] [NVARCHAR](32) NOT NULL,
    [GenderTypeId] [INT] NULL,
    [TuitionCost] [MONEY] NULL,
    [EnglishLanguageExamDescriptorId] [INT] NULL,
    [PreviousCareerDescriptorId] [INT] NULL,
    [ProgramComplete] [BIT] NULL,
    [StaffUSI] [INT] NULL,
    CONSTRAINT [TeacherCandidate_PK] PRIMARY KEY CLUSTERED (
        [TeacherCandidateUniqueId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents an individual for whom instruction and/or services in a Teacher Preparation Program are provided under the jurisdiction of a Teacher Preparation Provider.  A teacher candidate is a person who has been enrolled in a teacher preparation program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidate', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The gender with which a person associates.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidate', @level2type=N'COLUMN', @level2name=N'GenderTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The tuition for a person''s participation in a program, service. or course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidate', @level2type=N'COLUMN', @level2name=N'TuitionCost'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates that a person passed, failed, or did not take an English Language assessment (e.g., TOEFFL).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidate', @level2type=N'COLUMN', @level2name=N'EnglishLanguageExamDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The career previous for an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidate', @level2type=N'COLUMN', @level2name=N'PreviousCareerDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of whether a teacher candidate has completed the teacher prepartion program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidate', @level2type=N'COLUMN', @level2name=N'ProgramComplete'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidate', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO


/****** Table: [extension].[TeacherCandidateAcademicRecord] ******/

CREATE TABLE [extension].[TeacherCandidateAcademicRecord](
    [ContentGradePointAverage] [DECIMAL](18, 4) NULL,
    [ContentGradePointEarned] [DECIMAL](18, 4) NULL,
    [ProgramGatewayDescriptorId] [INT] NOT NULL,
    [TPPDegreeTypeDescriptorId] [INT] NOT NULL,
    [StudentUSI] [INT] NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    CONSTRAINT [TeacherCandidateAcademicRecord_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [SchoolYear] ASC,
        [StudentUSI] ASC,
        [TermDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'?', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateAcademicRecord'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A measure of average performance in all courses taken by an individual within a given content area during his or her school career as determined for record-keeping purposes. This is obtained by dividing the total grade points received by the total number of credits attempted. This usually includes grade points received and credits attempted in his or her current school as well as those transferred from schools in which the individual was previously enrolled.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAcademicRecord', @level2type=N'COLUMN', @level2name=N'ContentGradePointAverage'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The cumulative number of grade points an individual earns within a given content area by successfully completing courses or examinations during his or her enrollment in the current school as well as those transferred from schools in which the individual had been previously enrolled.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAcademicRecord', @level2type=N'COLUMN', @level2name=N'ContentGradePointEarned'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies the program gateway that may be associated for continuation in the program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAcademicRecord', @level2type=N'COLUMN', @level2name=N'ProgramGatewayDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The degree type that a teacher candidate accomplishes.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAcademicRecord', @level2type=N'COLUMN', @level2name=N'TPPDegreeTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a student.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAcademicRecord', @level2type=N'COLUMN', @level2name=N'StudentUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAcademicRecord', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAcademicRecord', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAcademicRecord', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO


/****** Table: [extension].[TeacherCandidateAid] ******/

CREATE TABLE [extension].[TeacherCandidateAid](
    [TeacherCandidateUniqueId] [NVARCHAR](32) NOT NULL,
    [BeginDate] [DATE] NULL,
    [EndDate] [DATE] NULL,
    [AidConditionDescription] [NVARCHAR](1024) NULL,
    [AidTypeDescriptorId] [INT] NOT NULL,
    [AidAmount] [MONEY] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherCandidateAid_PK] PRIMARY KEY CLUSTERED (
        [TeacherCandidateUniqueId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateAid] ADD CONSTRAINT [TeacherCandidateAid_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents the financial aid a person is awarded.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateAid'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAid', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the award was designated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAid', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the award was removed.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAid', @level2type=N'COLUMN', @level2name=N'EndDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the condition (e.g., placement in a high need school) under which the aid was given.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAid', @level2type=N'COLUMN', @level2name=N'AidConditionDescription'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The classification of financial aid awarded to a person for the academic term/year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAid', @level2type=N'COLUMN', @level2name=N'AidTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The amount of financial aid awarded to a person for the term/year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateAid', @level2type=N'COLUMN', @level2name=N'AidAmount'
GO


/****** Table: [extension].[TeacherCandidateBackgroundCheck] ******/

CREATE TABLE [extension].[TeacherCandidateBackgroundCheck](
    [TeacherCandidateUniqueId] [NVARCHAR](32) NOT NULL,
    [BackgroundCheckTypeDescriptorId] [INT] NOT NULL,
    [BackgroundCheckRequestedDate] [DATE] NOT NULL,
    [BackgroundCheckStatusDescriptorId] [INT] NULL,
    [BackgroundCheckCompletedDate] [DATE] NULL,
    [Fingerprint] [BIT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherCandidateBackgroundCheck_PK] PRIMARY KEY CLUSTERED (
        [TeacherCandidateUniqueId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateBackgroundCheck] ADD CONSTRAINT [TeacherCandidateBackgroundCheck_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Applicant background check history and disposition.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateBackgroundCheck'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateBackgroundCheck', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of background check (e.g., online, criminal, employment).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the background check was requested.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckRequestedDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The status of the background check (e.g., pending, under investigation, offense(s) found, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckStatusDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date the background check was completed.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateBackgroundCheck', @level2type=N'COLUMN', @level2name=N'BackgroundCheckCompletedDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'(TPDP Extension) Indicates that a person has or has not completed a fingerprint.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateBackgroundCheck', @level2type=N'COLUMN', @level2name=N'Fingerprint'
GO


/****** Table: [extension].[TeacherCandidateCharacteristicDescriptor] ******/

CREATE TABLE [extension].[TeacherCandidateCharacteristicDescriptor](
    [TeacherCandidateCharacteristicDescriptorId] [INT] NOT NULL,
    [TeacherCandidateCharacteristicTypeId] [INT] NOT NULL,
    CONSTRAINT [TeacherCandidateCharacteristicDescriptor_PK] PRIMARY KEY CLUSTERED (
        [TeacherCandidateCharacteristicDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The characteristic designated for the TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateCharacteristicDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCharacteristicDescriptor', @level2type=N'COLUMN', @level2name=N'TeacherCandidateCharacteristicDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCharacteristicDescriptor', @level2type=N'COLUMN', @level2name=N'TeacherCandidateCharacteristicTypeId'
GO


/****** Table: [extension].[TeacherCandidateCharacteristicType] ******/

CREATE TABLE [extension].[TeacherCandidateCharacteristicType](
    [TeacherCandidateCharacteristicTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [TeacherCandidateCharacteristicType_PK] PRIMARY KEY CLUSTERED (
        [TeacherCandidateCharacteristicTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateCharacteristicType] ADD CONSTRAINT [TeacherCandidateCharacteristicType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[TeacherCandidateCharacteristicType] ADD CONSTRAINT [TeacherCandidateCharacteristicType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[TeacherCandidateCharacteristicType] ADD CONSTRAINT [TeacherCandidateCharacteristicType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The characteristic designated for the TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateCharacteristicType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for TeacherCandidateCharacteristic', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCharacteristicType', @level2type=N'COLUMN', @level2name=N'TeacherCandidateCharacteristicTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCharacteristicType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the TeacherCandidateCharacteristic type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCharacteristicType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the TeacherCandidateCharacteristic type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCharacteristicType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[TeacherCandidateCourseTranscript] ******/

CREATE TABLE [extension].[TeacherCandidateCourseTranscript](
    [PreviousInstitutionName] [NVARCHAR](75) NULL,
    [CourseAttemptResultTypeId] [INT] NOT NULL,
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [CourseEducationOrganizationId] [INT] NOT NULL,
    [StudentUSI] [INT] NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    CONSTRAINT [TeacherCandidateCourseTranscript_PK] PRIMARY KEY CLUSTERED (
        [CourseAttemptResultTypeId] ASC,
        [CourseCode] ASC,
        [CourseEducationOrganizationId] ASC,
        [EducationOrganizationId] ASC,
        [SchoolYear] ASC,
        [StudentUSI] ASC,
        [TermDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'?', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateCourseTranscript'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The full, legally accepted name of the institution.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscript', @level2type=N'COLUMN', @level2name=N'PreviousInstitutionName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The result from the student''s attempt to take the course, for example:
Pass
Fail
Incomplete
Withdrawn.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscript', @level2type=N'COLUMN', @level2name=N'CourseAttemptResultTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscript', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscript', @level2type=N'COLUMN', @level2name=N'CourseEducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a student.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscript', @level2type=N'COLUMN', @level2name=N'StudentUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscript', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscript', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscript', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO


/****** Table: [extension].[TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory] ******/

CREATE TABLE [extension].[TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory](
    [CourseAttemptResultTypeId] [INT] NOT NULL,
    [CourseCode] [NVARCHAR](60) NOT NULL,
    [CourseEducationOrganizationId] [INT] NOT NULL,
    [StudentUSI] [INT] NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [TermDescriptorId] [INT] NOT NULL,
    [SchoolCategoryTypeId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory_PK] PRIMARY KEY CLUSTERED (
        [CourseAttemptResultTypeId] ASC,
        [CourseCode] ASC,
        [CourseEducationOrganizationId] ASC,
        [EducationOrganizationId] ASC,
        [SchoolCategoryTypeId] ASC,
        [SchoolYear] ASC,
        [StudentUSI] ASC,
        [TermDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory] ADD CONSTRAINT [TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The one or more categories of school. For example: High School, Middle School, and/or Elementary School', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The result from the student''s attempt to take the course, for example:
Pass
Fail
Incomplete
Withdrawn.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory', @level2type=N'COLUMN', @level2name=N'CourseAttemptResultTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a course.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory', @level2type=N'COLUMN', @level2name=N'CourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory', @level2type=N'COLUMN', @level2name=N'CourseEducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a student.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory', @level2type=N'COLUMN', @level2name=N'StudentUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The one or more categories of school. For example: High School, Middle School, and/or Elementary School', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory', @level2type=N'COLUMN', @level2name=N'SchoolCategoryTypeId'
GO


/****** Table: [extension].[TeacherCandidateCredential] ******/

CREATE TABLE [extension].[TeacherCandidateCredential](
    [StaffUSI] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [TeacherCandidateCredential_PK] PRIMARY KEY CLUSTERED (
        [StaffUSI] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateCredential] ADD CONSTRAINT [TeacherCandidateCredential_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[TeacherCandidateCredential] ADD CONSTRAINT [TeacherCandidateCredential_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[TeacherCandidateCredential] ADD CONSTRAINT [TeacherCandidateCredential_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateCredential'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredential', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO


/****** Table: [extension].[TeacherCandidateCredentialExtension] ******/

CREATE TABLE [extension].[TeacherCandidateCredentialExtension](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [RevocationDate] [DATE] NULL,
    [RevocationReason] [NVARCHAR](40) NULL,
    [SuspensionDate] [DATE] NULL,
    [SuspensionReason] [NVARCHAR](40) NULL,
    [ValueTypeId] [INT] NOT NULL,
    CONSTRAINT [TeacherCandidateCredentialExtension_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [LevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateCredentialExtension'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential held by an individual was revoked.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'RevocationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Expanded reason for the revocation of credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'RevocationReason'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential held by an individual was suspended.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'SuspensionDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Expanded reason for the suspension of credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'SuspensionReason'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value of the data, i.e., is the data projected, actual or other', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtension', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO


/****** Table: [extension].[TeacherCandidateCredentialExtensionBoardCertification] ******/

CREATE TABLE [extension].[TeacherCandidateCredentialExtensionBoardCertification](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [BoardCertification] [BIT] NULL,
    [BoardCertificationDate] [DATE] NULL,
    [BoardCertificationTypeDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherCandidateCredentialExtensionBoardCertification_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [LevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateCredentialExtensionBoardCertification] ADD CONSTRAINT [TeacherCandidateCredentialExtensionBoardCertification_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Board certification information for a individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateCredentialExtensionBoardCertification'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of whether a individual is board certified.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertification'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which a board certification was awarded.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertificationDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of board certification awarded to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionBoardCertification', @level2type=N'COLUMN', @level2name=N'BoardCertificationTypeDescriptorId'
GO


/****** Table: [extension].[TeacherCandidateCredentialExtensionCertificationExam] ******/

CREATE TABLE [extension].[TeacherCandidateCredentialExtensionCertificationExam](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [CertificationExamTitle] [NVARCHAR](60) NOT NULL,
    [CertificationExamTypeDescriptorId] [INT] NULL,
    [CertificationExamOverallScore] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherCandidateCredentialExtensionCertificationExam_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [LevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateCredentialExtensionCertificationExam] ADD CONSTRAINT [TeacherCandidateCredentialExtensionCertificationExam_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Certification information for a individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateCredentialExtensionCertificationExam'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The title or name of the certification.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamTitle'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of certification exam that taken.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The overall score that was received on the certification exam.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionCertificationExam', @level2type=N'COLUMN', @level2name=N'CertificationExamOverallScore'
GO


/****** Table: [extension].[TeacherCandidateCredentialExtensionRecommendation] ******/

CREATE TABLE [extension].[TeacherCandidateCredentialExtensionRecommendation](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherCandidateCredentialExtensionRecommendation_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [LevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateCredentialExtensionRecommendation] ADD CONSTRAINT [TeacherCandidateCredentialExtensionRecommendation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information about the recommenation for the credential.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateCredentialExtensionRecommendation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendation', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO


/****** Table: [extension].[TeacherCandidateCredentialExtensionRecommendingInstitution] ******/

CREATE TABLE [extension].[TeacherCandidateCredentialExtensionRecommendingInstitution](
    [CredentialTypeId] [INT] NOT NULL,
    [CredentialFieldDescriptorId] [INT] NOT NULL,
    [LevelDescriptorId] [INT] NOT NULL,
    [TeachingCredentialDescriptorId] [INT] NOT NULL,
    [CredentialIssuanceDate] [DATE] NOT NULL,
    [StaffUSI] [INT] NOT NULL,
    [RecommendingInstutionName] [NVARCHAR](75) NOT NULL,
    [RecommendingDate] [DATE] NULL,
    [RecommendingInstitutionCountryDescriptorId] [INT] NULL,
    [RecommendingInstutionStateAbbreviationTypeId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherCandidateCredentialExtensionRecommendingInstitution_PK] PRIMARY KEY CLUSTERED (
        [CredentialFieldDescriptorId] ASC,
        [CredentialIssuanceDate] ASC,
        [CredentialTypeId] ASC,
        [LevelDescriptorId] ASC,
        [StaffUSI] ASC,
        [TeachingCredentialDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateCredentialExtensionRecommendingInstitution] ADD CONSTRAINT [TeacherCandidateCredentialExtensionRecommendingInstitution_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information regarding the institution that is recommending a candidate for certification.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of credential an individual holds.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The field of certification for the certificate (e.g., Mathematics, Music).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialFieldDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade level(s) certified for teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'LevelDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the category of a legal document giving authorization to perform teaching assignment services.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'TeachingCredentialDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which an active credential was issued to an individual.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'CredentialIssuanceDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a staff.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'StaffUSI'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The full, legally accepted name of the institution.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstutionName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which a recommendation for a candidate is made.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The country that the recommendation for a candidate was made in.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstitutionCountryDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The abbreviation for the name of the state (within the United States) or extra-state jurisdiction in which a recommendation was issued.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateCredentialExtensionRecommendingInstitution', @level2type=N'COLUMN', @level2name=N'RecommendingInstutionStateAbbreviationTypeId'
GO


/****** Table: [extension].[TeacherCandidateFieldworkAbsenceEvent] ******/

CREATE TABLE [extension].[TeacherCandidateFieldworkAbsenceEvent](
    [TeacherCandidateUniqueId] [NVARCHAR](32) NOT NULL,
    [EventDate] [DATE] NOT NULL,
    [HoursAbsent] [DECIMAL](3, 2) NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [TeacherCandidateFieldworkAbsenceEvent_PK] PRIMARY KEY CLUSTERED (
        [TeacherCandidateUniqueId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateFieldworkAbsenceEvent] ADD CONSTRAINT [TeacherCandidateFieldworkAbsenceEvent_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[TeacherCandidateFieldworkAbsenceEvent] ADD CONSTRAINT [TeacherCandidateFieldworkAbsenceEvent_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[TeacherCandidateFieldworkAbsenceEvent] ADD CONSTRAINT [TeacherCandidateFieldworkAbsenceEvent_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Expanded reason for the staff absence', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateFieldworkAbsenceEvent'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkAbsenceEvent', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Date for this absence event', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkAbsenceEvent', @level2type=N'COLUMN', @level2name=N'EventDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'he hours the staff was absence if not the entire working day', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkAbsenceEvent', @level2type=N'COLUMN', @level2name=N'HoursAbsent'
GO


/****** Table: [extension].[TeacherCandidateFieldworkExperience] ******/

CREATE TABLE [extension].[TeacherCandidateFieldworkExperience](
    [FieldworkIdentifier] [NVARCHAR](20) NOT NULL,
    [TeacherCandidateUniqueId] [NVARCHAR](32) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [UniqueSectionCode] [NVARCHAR](255) NULL,
    [SequenceOfCourse] [INT] NULL,
    [LocalCourseCode] [NVARCHAR](60) NULL,
    [SchoolYear] [SMALLINT] NULL,
    [TermDescriptorId] [INT] NULL,
    [ClassroomIdentificationCode] [NVARCHAR](20) NULL,
    [ClassPeriodName] [NVARCHAR](20) NULL,
    [FieldworkTypeDescriptorId] [INT] NOT NULL,
    [HoursPerWeek] [DECIMAL](5, 2) NULL,
    [BeginDate] [DATE] NOT NULL,
    [EndDate] [DATE] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [TeacherCandidateFieldworkExperience_PK] PRIMARY KEY CLUSTERED (
        [BeginDate] ASC,
        [FieldworkIdentifier] ASC,
        [SchoolId] ASC,
        [TeacherCandidateUniqueId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateFieldworkExperience] ADD CONSTRAINT [TeacherCandidateFieldworkExperience_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[TeacherCandidateFieldworkExperience] ADD CONSTRAINT [TeacherCandidateFieldworkExperience_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[TeacherCandidateFieldworkExperience] ADD CONSTRAINT [TeacherCandidateFieldworkExperience_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The information regarding a postsecondary instructional course in a particular field of study that typically involves a prescribed number or instruction periods or meetings for enrolled students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateFieldworkExperience'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identifier for the fieldwork experience', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'FieldworkIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier for the Section that is defined by the classroom, the subjects taught, and the instructors who are assigned.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'UniqueSectionCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'When a section is part of a sequence of parts for a course, the number of the sequence. If the course has only one part, the value of this section attribute should be 1.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'SequenceOfCourse'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The local code assigned by the School that identifies the course offering provided for the instruction of students.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'LocalCourseCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier for the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The term for the Session during the school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'TermDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique number or alphanumeric code assigned to a room by a school, school system, state, or other agency or entity.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'ClassroomIdentificationCode'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'An indication of the portion of a typical daily session in which students receive instruction in a specified subject (e.g., morning, sixth period, block period, or AB schedules).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'ClassPeriodName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of fieldwork being executed by a teacher candidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'FieldworkTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of hours per week for fieldwork.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'HoursPerWeek'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which the teacher candidate first starts fieldwork.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which the teacher candidate ends fieldwork.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperience', @level2type=N'COLUMN', @level2name=N'EndDate'
GO


/****** Table: [extension].[TeacherCandidateFieldworkExperienceCoteaching] ******/

CREATE TABLE [extension].[TeacherCandidateFieldworkExperienceCoteaching](
    [FieldworkIdentifier] [NVARCHAR](20) NOT NULL,
    [TeacherCandidateUniqueId] [NVARCHAR](32) NOT NULL,
    [SchoolId] [INT] NOT NULL,
    [BeginDate] [DATE] NOT NULL,
    [EndDate] [DATE] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherCandidateFieldworkExperienceCoteaching_PK] PRIMARY KEY CLUSTERED (
        [BeginDate] ASC,
        [FieldworkIdentifier] ASC,
        [SchoolId] ASC,
        [TeacherCandidateUniqueId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateFieldworkExperienceCoteaching] ADD CONSTRAINT [TeacherCandidateFieldworkExperienceCoteaching_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The act of two teachers (teacher candidate and cooperating teacher) working together with groups of students; sharing the planning, organization, delivery, and assessment of instruction, as well as the physical space.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateFieldworkExperienceCoteaching'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identifier for the fieldwork experience', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperienceCoteaching', @level2type=N'COLUMN', @level2name=N'FieldworkIdentifier'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperienceCoteaching', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to a school by the State Education Agency (SEA).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperienceCoteaching', @level2type=N'COLUMN', @level2name=N'SchoolId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which the teacher candidate first starts co-teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperienceCoteaching', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The month, day, and year on which the teacher candidate stopped co-teaching.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateFieldworkExperienceCoteaching', @level2type=N'COLUMN', @level2name=N'EndDate'
GO


/****** Table: [extension].[TeacherCandidateStudentGrowthFact] ******/

CREATE TABLE [extension].[TeacherCandidateStudentGrowthFact](
    [TeacherCandidateUniqueId] [NVARCHAR](32) NOT NULL,
    [SchoolYear] [SMALLINT] NOT NULL,
    [FactAsOfDate] [DATE] NOT NULL,
    [StudentGrowthReportYearSchoolYear] [SMALLINT] NULL,
    [StudentGrowthMeasureDate] [DATE] NULL,
    [ResultDatatypeTypeId] [INT] NULL,
    [StudentGrowthTypeDescriptorId] [INT] NULL,
    [StudentGrowthTargetScore] [INT] NOT NULL,
    [StudentGrowthActualScore] [INT] NOT NULL,
    [StudentGrowthMet] [BIT] NOT NULL,
    [StudentGrowthNCount] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [TeacherCandidateStudentGrowthFact_PK] PRIMARY KEY CLUSTERED (
        [FactAsOfDate] ASC,
        [SchoolYear] ASC,
        [TeacherCandidateUniqueId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateStudentGrowthFact] ADD CONSTRAINT [TeacherCandidateStudentGrowthFact_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[TeacherCandidateStudentGrowthFact] ADD CONSTRAINT [TeacherCandidateStudentGrowthFact_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[TeacherCandidateStudentGrowthFact] ADD CONSTRAINT [TeacherCandidateStudentGrowthFact_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Complex type that provides data about a group of students and their student growth as it pertains to the Teacher Candidate', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateStudentGrowthFact'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the data element is relevant', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'FactAsOfDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The school year for which the data is associated', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthReportYearSchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The date for which the student growth is measured', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthMeasureDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The datatype of the result. The results can be expressed as a number, percentile, range, level, etc.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'ResultDatatypeTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identification of the type of score that was used to determine student growth', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The target score that has been set of the group of students as it pertains to their student growth.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthTargetScore'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The actual score a group of students receives on their student growth assessment', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthActualScore'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Identifies if the student has met the student growth target score', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthMet'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The number of students included in the average score result.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateStudentGrowthFact', @level2type=N'COLUMN', @level2name=N'StudentGrowthNCount'
GO


/****** Table: [extension].[TeacherCandidateTeacherPreparationProviderAssociation] ******/

CREATE TABLE [extension].[TeacherCandidateTeacherPreparationProviderAssociation](
    [TeacherCandidateUniqueId] [NVARCHAR](32) NOT NULL,
    [TeacherPreparationProviderId] [INT] NOT NULL,
    [SchoolYear] [SMALLINT] NULL,
    [EntryDate] [DATE] NOT NULL,
    [EntryTypeDescriptorId] [INT] NULL,
    [ExitWithdrawDate] [DATE] NULL,
    [ExitWithdrawTypeDescriptorId] [INT] NULL,
    [ClassOfSchoolYear] [SMALLINT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [TeacherCandidateTeacherPreparationProviderAssociation_PK] PRIMARY KEY CLUSTERED (
        [EntryDate] ASC,
        [TeacherCandidateUniqueId] ASC,
        [TeacherPreparationProviderId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderAssociation] ADD CONSTRAINT [TeacherCandidateTeacherPreparationProviderAssociation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderAssociation] ADD CONSTRAINT [TeacherCandidateTeacherPreparationProviderAssociation_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderAssociation] ADD CONSTRAINT [TeacherCandidateTeacherPreparationProviderAssociation_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the association between the Teacher Candidate and the TeacherPreparationProviderProgram', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateTeacherPreparationProviderAssociation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identification code for the Teacher Preparation Provider', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProviderId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'School Year for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'SchoolYear'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Entry date for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'EntryDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Entry Type for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'EntryTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Exit date for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'ExitWithdrawDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Exit type for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'ExitWithdrawTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'School Year cohort for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderAssociation', @level2type=N'COLUMN', @level2name=N'ClassOfSchoolYear'
GO


/****** Table: [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation] ******/

CREATE TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation](
    [TeacherCandidateUniqueId] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [ProgramName] [NVARCHAR](60) NOT NULL,
    [ProgramTypeId] [INT] NOT NULL,
    [ServiceOutsideRegularSession] [BIT] NULL,
    [BeginDate] [DATE] NOT NULL,
    [EndDate] [DATE] NULL,
    [ReasonExitedDescriptorId] [INT] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [TeacherCandidateTeacherPreparationProviderProgramAssociation_PK] PRIMARY KEY CLUSTERED (
        [BeginDate] ASC,
        [EducationOrganizationId] ASC,
        [ProgramName] ASC,
        [ProgramTypeId] ASC,
        [TeacherCandidateUniqueId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation] ADD CONSTRAINT [TeacherCandidateTeacherPreparationProviderProgramAssociation_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation] ADD CONSTRAINT [TeacherCandidateTeacherPreparationProviderProgramAssociation_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation] ADD CONSTRAINT [TeacherCandidateTeacherPreparationProviderProgramAssociation_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Information about the association between the Teacher Candidate and the TeacherPreparationProviderProgram', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociation'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'ProgramName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'ProgramTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates whether the Teacher Candidate received services during the summer session or between sessions.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'ServiceOutsideRegularSession'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The begin date for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The end date for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'EndDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Reason exited for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociation', @level2type=N'COLUMN', @level2name=N'ReasonExitedDescriptorId'
GO


/****** Table: [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociationService] ******/

CREATE TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociationService](
    [TeacherCandidateUniqueId] [NVARCHAR](32) NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [ProgramName] [NVARCHAR](60) NOT NULL,
    [ProgramTypeId] [INT] NOT NULL,
    [BeginDate] [DATE] NOT NULL,
    [ServiceDescriptorId] [INT] NOT NULL,
    [PrimaryIndicator] [BIT] NULL,
    [ServiceBeginDate] [DATE] NULL,
    [ServiceEndDate] [DATE] NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherCandidateTeacherPreparationProviderProgramAssociationService_PK] PRIMARY KEY CLUSTERED (
        [BeginDate] ASC,
        [EducationOrganizationId] ASC,
        [ProgramName] ASC,
        [ProgramTypeId] ASC,
        [ServiceDescriptorId] ASC,
        [TeacherCandidateUniqueId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociationService] ADD CONSTRAINT [TeacherCandidateTeacherPreparationProviderProgramAssociationService_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Service for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociationService'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique alphanumeric code assigned to a TeacherCandidate.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociationService', @level2type=N'COLUMN', @level2name=N'TeacherCandidateUniqueId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociationService', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociationService', @level2type=N'COLUMN', @level2name=N'ProgramName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociationService', @level2type=N'COLUMN', @level2name=N'ProgramTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The begin date for the association', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociationService', @level2type=N'COLUMN', @level2name=N'BeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Indicates the Service being provided to the student by the Program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociationService', @level2type=N'COLUMN', @level2name=N'ServiceDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'True if service is a primary service.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociationService', @level2type=N'COLUMN', @level2name=N'PrimaryIndicator'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'First date the Student was in this option for the current school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociationService', @level2type=N'COLUMN', @level2name=N'ServiceBeginDate'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Last date the Student was in this option for the current school year.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherCandidateTeacherPreparationProviderProgramAssociationService', @level2type=N'COLUMN', @level2name=N'ServiceEndDate'
GO


/****** Table: [extension].[TeacherPreparationProgramType] ******/

CREATE TABLE [extension].[TeacherPreparationProgramType](
    [TeacherPreparationProgramTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [TeacherPreparationProgramType_PK] PRIMARY KEY CLUSTERED (
        [TeacherPreparationProgramTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherPreparationProgramType] ADD CONSTRAINT [TeacherPreparationProgramType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[TeacherPreparationProgramType] ADD CONSTRAINT [TeacherPreparationProgramType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[TeacherPreparationProgramType] ADD CONSTRAINT [TeacherPreparationProgramType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the type of teacher prep program (e.g., college, alternative, TFA, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherPreparationProgramType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for TeacherPreparationProgram', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProgramType', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProgramType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the TeacherPreparationProgram type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProgramType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the TeacherPreparationProgram type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProgramType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[TeacherPreparationProgramTypeDescriptor] ******/

CREATE TABLE [extension].[TeacherPreparationProgramTypeDescriptor](
    [TeacherPreparationProgramTypeDescriptorId] [INT] NOT NULL,
    [TeacherPreparationProgramTypeId] [INT] NULL,
    CONSTRAINT [TeacherPreparationProgramTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [TeacherPreparationProgramTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the type of teacher prep program (e.g., college, alternative, TFA, etc.).', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherPreparationProgramTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProgramTypeDescriptor', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProgramTypeDescriptor', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProgramTypeId'
GO


/****** Table: [extension].[TeacherPreparationProvider] ******/

CREATE TABLE [extension].[TeacherPreparationProvider](
    [TeacherPreparationProviderId] [INT] NOT NULL,
    [UniversityId] [INT] NULL,
    CONSTRAINT [TeacherPreparationProvider_PK] PRIMARY KEY CLUSTERED (
        [TeacherPreparationProviderId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherPreparationProvider'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identification code for the Teacher Preparation Provider', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProvider', @level2type=N'COLUMN', @level2name=N'TeacherPreparationProviderId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identification code of the University', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProvider', @level2type=N'COLUMN', @level2name=N'UniversityId'
GO


/****** Table: [extension].[TeacherPreparationProviderProgram] ******/

CREATE TABLE [extension].[TeacherPreparationProviderProgram](
    [TPPProgramPathwayDescriptorId] [INT] NOT NULL,
    [EducationOrganizationId] [INT] NOT NULL,
    [ProgramName] [NVARCHAR](60) NOT NULL,
    [ProgramTypeId] [INT] NOT NULL,
    CONSTRAINT [TeacherPreparationProviderProgram_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ProgramName] ASC,
        [ProgramTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents information regarding a teacher preparation provider program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherPreparationProviderProgram'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code for describing the program pathway, for example: Residency, Internship, Traditional', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgram', @level2type=N'COLUMN', @level2name=N'TPPProgramPathwayDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgram', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgram', @level2type=N'COLUMN', @level2name=N'ProgramName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgram', @level2type=N'COLUMN', @level2name=N'ProgramTypeId'
GO


/****** Table: [extension].[TeacherPreparationProviderProgramGradeLevel] ******/

CREATE TABLE [extension].[TeacherPreparationProviderProgramGradeLevel](
    [EducationOrganizationId] [INT] NOT NULL,
    [ProgramName] [NVARCHAR](60) NOT NULL,
    [ProgramTypeId] [INT] NOT NULL,
    [GradeLevelDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherPreparationProviderProgramGradeLevel_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [GradeLevelDescriptorId] ASC,
        [ProgramName] ASC,
        [ProgramTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherPreparationProviderProgramGradeLevel] ADD CONSTRAINT [TeacherPreparationProviderProgramGradeLevel_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade levels served at the TPP Program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherPreparationProviderProgramGradeLevel'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgramGradeLevel', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgramGradeLevel', @level2type=N'COLUMN', @level2name=N'ProgramName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgramGradeLevel', @level2type=N'COLUMN', @level2name=N'ProgramTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The grade levels served at the TPP Program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgramGradeLevel', @level2type=N'COLUMN', @level2name=N'GradeLevelDescriptorId'
GO


/****** Table: [extension].[TeacherPreparationProviderProgramTPPProgramDegree] ******/

CREATE TABLE [extension].[TeacherPreparationProviderProgramTPPProgramDegree](
    [EducationOrganizationId] [INT] NOT NULL,
    [ProgramName] [NVARCHAR](60) NOT NULL,
    [ProgramTypeId] [INT] NOT NULL,
    [AcademicSubjectDescriptorId] [INT] NOT NULL,
    [TPPDegreeTypeDescriptorId] [INT] NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    CONSTRAINT [TeacherPreparationProviderProgramTPPProgramDegree_PK] PRIMARY KEY CLUSTERED (
        [EducationOrganizationId] ASC,
        [ProgramName] ASC,
        [ProgramTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TeacherPreparationProviderProgramTPPProgramDegree] ADD CONSTRAINT [TeacherPreparationProviderProgramTPPProgramDegree_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Details of the degree.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TeacherPreparationProviderProgramTPPProgramDegree'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The identifier assigned to an education agency by the State Education Agency (SEA).  Also known as the State LEA ID.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgramTPPProgramDegree', @level2type=N'COLUMN', @level2name=N'EducationOrganizationId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The formal name of the Program of instruction, training, services, or benefits available through federal, state, or local agencies.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgramTPPProgramDegree', @level2type=N'COLUMN', @level2name=N'ProgramName'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type of program.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgramTPPProgramDegree', @level2type=N'COLUMN', @level2name=N'ProgramTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description of the content or subject area (e.g., arts, mathematics, reading, stenography, or a foreign language) of a degree.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgramTPPProgramDegree', @level2type=N'COLUMN', @level2name=N'AcademicSubjectDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A code for describing the degree type that a teacher candidate accomplishes.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TeacherPreparationProviderProgramTPPProgramDegree', @level2type=N'COLUMN', @level2name=N'TPPDegreeTypeDescriptorId'
GO


/****** Table: [extension].[ThemeType] ******/

CREATE TABLE [extension].[ThemeType](
    [ThemeTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [ThemeType_PK] PRIMARY KEY CLUSTERED (
        [ThemeTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ThemeType] ADD CONSTRAINT [ThemeType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[ThemeType] ADD CONSTRAINT [ThemeType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[ThemeType] ADD CONSTRAINT [ThemeType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the theme types.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ThemeType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for Theme', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ThemeType', @level2type=N'COLUMN', @level2name=N'ThemeTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ThemeType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the Theme type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ThemeType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the Theme type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ThemeType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[ThemeTypeDescriptor] ******/

CREATE TABLE [extension].[ThemeTypeDescriptor](
    [ThemeTypeDescriptorId] [INT] NOT NULL,
    [ThemeTypeId] [INT] NULL,
    CONSTRAINT [ThemeTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [ThemeTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the theme of the specified level of the rubric.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ThemeTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ThemeTypeDescriptor', @level2type=N'COLUMN', @level2name=N'ThemeTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ThemeTypeDescriptor', @level2type=N'COLUMN', @level2name=N'ThemeTypeId'
GO


/****** Table: [extension].[TPPDegreeType] ******/

CREATE TABLE [extension].[TPPDegreeType](
    [TPPDegreeTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [TPPDegreeType_PK] PRIMARY KEY CLUSTERED (
        [TPPDegreeTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TPPDegreeType] ADD CONSTRAINT [TPPDegreeType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[TPPDegreeType] ADD CONSTRAINT [TPPDegreeType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[TPPDegreeType] ADD CONSTRAINT [TPPDegreeType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the type of degree awarded.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TPPDegreeType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for TPPDegree', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPDegreeType', @level2type=N'COLUMN', @level2name=N'TPPDegreeTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPDegreeType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the TPPDegree type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPDegreeType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the TPPDegree type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPDegreeType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[TPPDegreeTypeDescriptor] ******/

CREATE TABLE [extension].[TPPDegreeTypeDescriptor](
    [TPPDegreeTypeDescriptorId] [INT] NOT NULL,
    [TPPDegreeTypeId] [INT] NULL,
    CONSTRAINT [TPPDegreeTypeDescriptor_PK] PRIMARY KEY CLUSTERED (
        [TPPDegreeTypeDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the degree that a teacher candidate accomplishes.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TPPDegreeTypeDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPDegreeTypeDescriptor', @level2type=N'COLUMN', @level2name=N'TPPDegreeTypeDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPDegreeTypeDescriptor', @level2type=N'COLUMN', @level2name=N'TPPDegreeTypeId'
GO


/****** Table: [extension].[TPPProgramPathwayDescriptor] ******/

CREATE TABLE [extension].[TPPProgramPathwayDescriptor](
    [TPPProgramPathwayDescriptorId] [INT] NOT NULL,
    [TPPProgramPathwayTypeId] [INT] NULL,
    CONSTRAINT [TPPProgramPathwayDescriptor_PK] PRIMARY KEY CLUSTERED (
        [TPPProgramPathwayDescriptorId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The descriptor holds the program pathways available at TPP''s.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TPPProgramPathwayDescriptor'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPProgramPathwayDescriptor', @level2type=N'COLUMN', @level2name=N'TPPProgramPathwayDescriptorId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'A unique identifier used as Primary Key, not derived from business logic, when acting as Foreign Key, references the parent table.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPProgramPathwayDescriptor', @level2type=N'COLUMN', @level2name=N'TPPProgramPathwayTypeId'
GO


/****** Table: [extension].[TPPProgramPathwayType] ******/

CREATE TABLE [extension].[TPPProgramPathwayType](
    [TPPProgramPathwayTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [TPPProgramPathwayType_PK] PRIMARY KEY CLUSTERED (
        [TPPProgramPathwayTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[TPPProgramPathwayType] ADD CONSTRAINT [TPPProgramPathwayType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[TPPProgramPathwayType] ADD CONSTRAINT [TPPProgramPathwayType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[TPPProgramPathwayType] ADD CONSTRAINT [TPPProgramPathwayType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Map for the program pathways.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'TPPProgramPathwayType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for TPPProgramPathway', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPProgramPathwayType', @level2type=N'COLUMN', @level2name=N'TPPProgramPathwayTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPProgramPathwayType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the TPPProgramPathway type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPProgramPathwayType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the TPPProgramPathway type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'TPPProgramPathwayType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO


/****** Table: [extension].[University] ******/

CREATE TABLE [extension].[University](
    [UniversityId] [INT] NOT NULL,
    CONSTRAINT [University_PK] PRIMARY KEY CLUSTERED (
        [UniversityId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO


EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This entity represents an educational organization that includes staff and students who participate in classes and educational activity groups.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'University'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The unique identification code of the University', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'University', @level2type=N'COLUMN', @level2name=N'UniversityId'
GO


/****** Table: [extension].[ValueType] ******/

CREATE TABLE [extension].[ValueType](
    [ValueTypeId] [INT] IDENTITY(1,1) NOT NULL,
    [CodeValue] [NVARCHAR](50) NOT NULL,
    [Description] [NVARCHAR](1024) NOT NULL,
    [ShortDescription] [NVARCHAR](450) NOT NULL,
    [CreateDate] [DATETIME] NOT NULL, 
    [LastModifiedDate] [DATETIME] NOT NULL,
    [Id] [UNIQUEIDENTIFIER] NOT NULL, 
    CONSTRAINT [ValueType_PK] PRIMARY KEY CLUSTERED (
        [ValueTypeId] ASC
    ) WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
GO
ALTER TABLE [extension].[ValueType] ADD CONSTRAINT [ValueType_DF_CreateDate] DEFAULT (getdate()) FOR [CreateDate]
GO
ALTER TABLE [extension].[ValueType] ADD CONSTRAINT [ValueType_DF_Id] DEFAULT (newid()) FOR [Id]
GO
ALTER TABLE [extension].[ValueType] ADD CONSTRAINT [ValueType_DF_LastModifiedDate]  DEFAULT (getdate()) FOR [LastModifiedDate]
GO

EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The type (i.e. actual or projected) of value.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE', @level1name=N'ValueType'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'Key for Value', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ValueType', @level2type=N'COLUMN', @level2name=N'ValueTypeId'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'This column is deprecated.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ValueType', @level2type=N'COLUMN', @level2name=N'CodeValue'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The description for the Value type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ValueType', @level2type=N'COLUMN', @level2name=N'Description'
GO
EXEC sys.sp_addextendedproperty @name=N'MS_Description', @value=N'The value for the Value type.', @level0type=N'SCHEMA', @level0name=N'extension', @level1type=N'TABLE',@level1name=N'ValueType', @level2type=N'COLUMN', @level2name=N'ShortDescription'
GO



ALTER TABLE [extension].[AbsenceEventCategoryDescriptor] WITH CHECK ADD CONSTRAINT [FK_AbsenceEventCategoryDescriptor_AbsenceEventCategoryType] FOREIGN KEY ([AbsenceEventCategoryTypeId])
REFERENCES [extension].[AbsenceEventCategoryType] ([AbsenceEventCategoryTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AbsenceEventCategoryDescriptor_AbsenceEventCategoryType]
ON [extension].[AbsenceEventCategoryDescriptor]([AbsenceEventCategoryTypeId] ASC)
GO

ALTER TABLE [extension].[AbsenceEventCategoryDescriptor] WITH CHECK ADD CONSTRAINT [FK_AbsenceEventCategoryDescriptor_Descriptor] FOREIGN KEY ([AbsenceEventCategoryDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_AbsenceEventCategoryDescriptor_Descriptor]
ON [extension].[AbsenceEventCategoryDescriptor]([AbsenceEventCategoryDescriptorId] ASC)
GO

ALTER TABLE [extension].[AidTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_AidTypeDescriptor_AidType] FOREIGN KEY ([AidTypeId])
REFERENCES [extension].[AidType] ([AidTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AidTypeDescriptor_AidType]
ON [extension].[AidTypeDescriptor]([AidTypeId] ASC)
GO

ALTER TABLE [extension].[AidTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_AidTypeDescriptor_Descriptor] FOREIGN KEY ([AidTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_AidTypeDescriptor_Descriptor]
ON [extension].[AidTypeDescriptor]([AidTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudent] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudent_Course] FOREIGN KEY ([CourseCode], [EducationOrganizationId])
REFERENCES [edfi].[Course] ([CourseCode], [EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudent_Course]
ON [extension].[AnonymizedStudent]([CourseCode] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudent] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudent_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudent_EducationOrganization]
ON [extension].[AnonymizedStudent]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudent] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudent_GenderType] FOREIGN KEY ([GenderTypeId])
REFERENCES [extension].[GenderType] ([GenderTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudent_GenderType]
ON [extension].[AnonymizedStudent]([GenderTypeId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudent] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudent_SchoolFoodServicesEligibilityDescriptor] FOREIGN KEY ([SchoolFoodServicesEligibilityDescriptorId])
REFERENCES [edfi].[SchoolFoodServicesEligibilityDescriptor] ([SchoolFoodServicesEligibilityDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudent_SchoolFoodServicesEligibilityDescriptor]
ON [extension].[AnonymizedStudent]([SchoolFoodServicesEligibilityDescriptorId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudent] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudent_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudent_SchoolYearType]
ON [extension].[AnonymizedStudent]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudent] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudent_Section] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [edfi].[Section] ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudent_Section]
ON [extension].[AnonymizedStudent]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudent] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudent_SexType] FOREIGN KEY ([SexTypeId])
REFERENCES [edfi].[SexType] ([SexTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudent_SexType]
ON [extension].[AnonymizedStudent]([SexTypeId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudent] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudent_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudent_ValueType]
ON [extension].[AnonymizedStudent]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAcademicRecord] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAcademicRecord_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAcademicRecord_EducationOrganization]
ON [extension].[AnonymizedStudentAcademicRecord]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAcademicRecord] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAcademicRecord_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAcademicRecord_SchoolYearType]
ON [extension].[AnonymizedStudentAcademicRecord]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessment] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessment_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessment_AcademicSubjectDescriptor]
ON [extension].[AnonymizedStudentAssessment]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessment] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessment_AssessmentCategoryDescriptor] FOREIGN KEY ([AssessmentCategoryDescriptorId])
REFERENCES [edfi].[AssessmentCategoryDescriptor] ([AssessmentCategoryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessment_AssessmentCategoryDescriptor]
ON [extension].[AnonymizedStudentAssessment]([AssessmentCategoryDescriptorId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessment] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessment_Course] FOREIGN KEY ([CourseCode], [EducationOrganizationId])
REFERENCES [edfi].[Course] ([CourseCode], [EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessment_Course]
ON [extension].[AnonymizedStudentAssessment]([CourseCode] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessment] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessment_GradeLevelDescriptor] FOREIGN KEY ([GradeLevelDescriptorId])
REFERENCES [edfi].[GradeLevelDescriptor] ([GradeLevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessment_GradeLevelDescriptor]
ON [extension].[AnonymizedStudentAssessment]([GradeLevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessment] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessment_SchoolYearType] FOREIGN KEY ([SchoolYearTakenSchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessment_SchoolYearType]
ON [extension].[AnonymizedStudentAssessment]([SchoolYearTakenSchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessment] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessment_Section] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [edfi].[Section] ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessment_Section]
ON [extension].[AnonymizedStudentAssessment]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessment] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessment_TermDescriptor] FOREIGN KEY ([TermDescriptorId])
REFERENCES [edfi].[TermDescriptor] ([TermDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessment_TermDescriptor]
ON [extension].[AnonymizedStudentAssessment]([TermDescriptorId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessmentPerformanceLevel] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessmentPerformanceLevel_AnonymizedStudentAssessment] FOREIGN KEY ([AnonymizedStudentIdentifier])
REFERENCES [extension].[AnonymizedStudentAssessment] ([AnonymizedStudentIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessmentPerformanceLevel_AnonymizedStudentAssessment]
ON [extension].[AnonymizedStudentAssessmentPerformanceLevel]([AnonymizedStudentIdentifier] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessmentPerformanceLevel] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessmentPerformanceLevel_PerformanceLevelDescriptor] FOREIGN KEY ([PerformanceLevelDescriptorId])
REFERENCES [edfi].[PerformanceLevelDescriptor] ([PerformanceLevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessmentPerformanceLevel_PerformanceLevelDescriptor]
ON [extension].[AnonymizedStudentAssessmentPerformanceLevel]([PerformanceLevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessmentScoreResult] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessmentScoreResult_AnonymizedStudentAssessment] FOREIGN KEY ([AnonymizedStudentIdentifier])
REFERENCES [extension].[AnonymizedStudentAssessment] ([AnonymizedStudentIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessmentScoreResult_AnonymizedStudentAssessment]
ON [extension].[AnonymizedStudentAssessmentScoreResult]([AnonymizedStudentIdentifier] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessmentScoreResult] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessmentScoreResult_AssessmentReportingMethodType] FOREIGN KEY ([AssessmentReportingMethodTypeId])
REFERENCES [edfi].[AssessmentReportingMethodType] ([AssessmentReportingMethodTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessmentScoreResult_AssessmentReportingMethodType]
ON [extension].[AnonymizedStudentAssessmentScoreResult]([AssessmentReportingMethodTypeId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentAssessmentScoreResult] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentAssessmentScoreResult_ResultDatatypeType] FOREIGN KEY ([ResultDatatypeTypeId])
REFERENCES [edfi].[ResultDatatypeType] ([ResultDatatypeTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentAssessmentScoreResult_ResultDatatypeType]
ON [extension].[AnonymizedStudentAssessmentScoreResult]([ResultDatatypeTypeId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentCourseAssociation] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentCourseAssociation_AnonymizedStudent] FOREIGN KEY ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[AnonymizedStudent] ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentCourseAssociation_AnonymizedStudent]
ON [extension].[AnonymizedStudentCourseAssociation]([AnonymizedStudentIdentifier] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentCourseAssociation] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentCourseAssociation_Course] FOREIGN KEY ([CourseCode], [EducationOrganizationId])
REFERENCES [edfi].[Course] ([CourseCode], [EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentCourseAssociation_Course]
ON [extension].[AnonymizedStudentCourseAssociation]([CourseCode] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentCourseTranscript] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentCourseTranscript_AnonymizedStudentAcademicRecord] FOREIGN KEY ([AnonymizedStudentIdentifier], [EducationOrganizationId], [FactAsOfDate], [SchoolYear])
REFERENCES [extension].[AnonymizedStudentAcademicRecord] ([AnonymizedStudentIdentifier], [EducationOrganizationId], [FactAsOfDate], [SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentCourseTranscript_AnonymizedStudentAcademicRecord]
ON [extension].[AnonymizedStudentCourseTranscript]([AnonymizedStudentIdentifier] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentCourseTranscript] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentCourseTranscript_Course] FOREIGN KEY ([CourseCode], [EducationOrganizationId])
REFERENCES [edfi].[Course] ([CourseCode], [EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentCourseTranscript_Course]
ON [extension].[AnonymizedStudentCourseTranscript]([CourseCode] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentCourseTranscript] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentCourseTranscript_CourseRepeatCodeType] FOREIGN KEY ([CourseRepeatCodeTypeId])
REFERENCES [edfi].[CourseRepeatCodeType] ([CourseRepeatCodeTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentCourseTranscript_CourseRepeatCodeType]
ON [extension].[AnonymizedStudentCourseTranscript]([CourseRepeatCodeTypeId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentDisability] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentDisability_AnonymizedStudent] FOREIGN KEY ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[AnonymizedStudent] ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentDisability_AnonymizedStudent]
ON [extension].[AnonymizedStudentDisability]([AnonymizedStudentIdentifier] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentDisability] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentDisability_DisabilityDescriptor] FOREIGN KEY ([DisabilityDescriptorId])
REFERENCES [edfi].[DisabilityDescriptor] ([DisabilityDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentDisability_DisabilityDescriptor]
ON [extension].[AnonymizedStudentDisability]([DisabilityDescriptorId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentDisability] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentDisability_DisabilityDeterminationSourceType] FOREIGN KEY ([DisabilityDeterminationSourceTypeId])
REFERENCES [edfi].[DisabilityDeterminationSourceType] ([DisabilityDeterminationSourceTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentDisability_DisabilityDeterminationSourceType]
ON [extension].[AnonymizedStudentDisability]([DisabilityDeterminationSourceTypeId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentEducationOrganizationAssociation] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentEducationOrganizationAssociation_AnonymizedStudent] FOREIGN KEY ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[AnonymizedStudent] ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentEducationOrganizationAssociation_AnonymizedStudent]
ON [extension].[AnonymizedStudentEducationOrganizationAssociation]([AnonymizedStudentIdentifier] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentEducationOrganizationAssociation] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentEducationOrganizationAssociation_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentEducationOrganizationAssociation_EducationOrganization]
ON [extension].[AnonymizedStudentEducationOrganizationAssociation]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentLanguage] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentLanguage_AnonymizedStudent] FOREIGN KEY ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[AnonymizedStudent] ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentLanguage_AnonymizedStudent]
ON [extension].[AnonymizedStudentLanguage]([AnonymizedStudentIdentifier] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentLanguage] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentLanguage_LanguageDescriptor] FOREIGN KEY ([LanguageDescriptorId])
REFERENCES [edfi].[LanguageDescriptor] ([LanguageDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentLanguage_LanguageDescriptor]
ON [extension].[AnonymizedStudentLanguage]([LanguageDescriptorId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentLanguageUse] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentLanguageUse_AnonymizedStudentLanguage] FOREIGN KEY ([AnonymizedStudentIdentifier], [FactsAsOfDate], [LanguageDescriptorId], [SchoolYear])
REFERENCES [extension].[AnonymizedStudentLanguage] ([AnonymizedStudentIdentifier], [FactsAsOfDate], [LanguageDescriptorId], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentLanguageUse_AnonymizedStudentLanguage]
ON [extension].[AnonymizedStudentLanguageUse]([AnonymizedStudentIdentifier] ASC, [FactsAsOfDate] ASC, [LanguageDescriptorId] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentLanguageUse] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentLanguageUse_LanguageUseType] FOREIGN KEY ([LanguageUseTypeId])
REFERENCES [edfi].[LanguageUseType] ([LanguageUseTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentLanguageUse_LanguageUseType]
ON [extension].[AnonymizedStudentLanguageUse]([LanguageUseTypeId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentRace] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentRace_AnonymizedStudent] FOREIGN KEY ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[AnonymizedStudent] ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentRace_AnonymizedStudent]
ON [extension].[AnonymizedStudentRace]([AnonymizedStudentIdentifier] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentRace] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentRace_RaceType] FOREIGN KEY ([RaceTypeId])
REFERENCES [edfi].[RaceType] ([RaceTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentRace_RaceType]
ON [extension].[AnonymizedStudentRace]([RaceTypeId] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentSectionAssociation] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentSectionAssociation_AnonymizedStudent] FOREIGN KEY ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[AnonymizedStudent] ([AnonymizedStudentIdentifier], [FactsAsOfDate], [SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentSectionAssociation_AnonymizedStudent]
ON [extension].[AnonymizedStudentSectionAssociation]([AnonymizedStudentIdentifier] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[AnonymizedStudentSectionAssociation] WITH CHECK ADD CONSTRAINT [FK_AnonymizedStudentSectionAssociation_Section] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [edfi].[Section] ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_AnonymizedStudentSectionAssociation_Section]
ON [extension].[AnonymizedStudentSectionAssociation]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[Applicant] WITH CHECK ADD CONSTRAINT [FK_Applicant_AcademicSubjectDescriptor] FOREIGN KEY ([HighlyQualifiedAcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_Applicant_AcademicSubjectDescriptor]
ON [extension].[Applicant]([HighlyQualifiedAcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[Applicant] WITH CHECK ADD CONSTRAINT [FK_Applicant_CitizenshipStatusType] FOREIGN KEY ([CitizenshipStatusTypeId])
REFERENCES [edfi].[CitizenshipStatusType] ([CitizenshipStatusTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_Applicant_CitizenshipStatusType]
ON [extension].[Applicant]([CitizenshipStatusTypeId] ASC)
GO

ALTER TABLE [extension].[Applicant] WITH CHECK ADD CONSTRAINT [FK_Applicant_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_Applicant_EducationOrganization]
ON [extension].[Applicant]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[Applicant] WITH CHECK ADD CONSTRAINT [FK_Applicant_GenderType] FOREIGN KEY ([GenderTypeId])
REFERENCES [extension].[GenderType] ([GenderTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_Applicant_GenderType]
ON [extension].[Applicant]([GenderTypeId] ASC)
GO

ALTER TABLE [extension].[Applicant] WITH CHECK ADD CONSTRAINT [FK_Applicant_LevelOfEducationDescriptor] FOREIGN KEY ([HighestCompletedLevelOfEducationDescriptorId])
REFERENCES [edfi].[LevelOfEducationDescriptor] ([LevelOfEducationDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_Applicant_LevelOfEducationDescriptor]
ON [extension].[Applicant]([HighestCompletedLevelOfEducationDescriptorId] ASC)
GO

ALTER TABLE [extension].[Applicant] WITH CHECK ADD CONSTRAINT [FK_Applicant_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_Applicant_Prospect]
ON [extension].[Applicant]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[Applicant] WITH CHECK ADD CONSTRAINT [FK_Applicant_SexType] FOREIGN KEY ([SexTypeId])
REFERENCES [edfi].[SexType] ([SexTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_Applicant_SexType]
ON [extension].[Applicant]([SexTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantAddress] WITH CHECK ADD CONSTRAINT [FK_ApplicantAddress_AddressType] FOREIGN KEY ([AddressTypeId])
REFERENCES [edfi].[AddressType] ([AddressTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantAddress_AddressType]
ON [extension].[ApplicantAddress]([AddressTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantAddress] WITH CHECK ADD CONSTRAINT [FK_ApplicantAddress_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantAddress_Applicant]
ON [extension].[ApplicantAddress]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantAddress] WITH CHECK ADD CONSTRAINT [FK_ApplicantAddress_StateAbbreviationType] FOREIGN KEY ([StateAbbreviationTypeId])
REFERENCES [edfi].[StateAbbreviationType] ([StateAbbreviationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantAddress_StateAbbreviationType]
ON [extension].[ApplicantAddress]([StateAbbreviationTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantAid] WITH CHECK ADD CONSTRAINT [FK_ApplicantAid_AidTypeDescriptor] FOREIGN KEY ([AidTypeDescriptorId])
REFERENCES [extension].[AidTypeDescriptor] ([AidTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantAid_AidTypeDescriptor]
ON [extension].[ApplicantAid]([AidTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantAid] WITH CHECK ADD CONSTRAINT [FK_ApplicantAid_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantAid_Applicant]
ON [extension].[ApplicantAid]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantBackgroundCheck] WITH CHECK ADD CONSTRAINT [FK_ApplicantBackgroundCheck_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantBackgroundCheck_Applicant]
ON [extension].[ApplicantBackgroundCheck]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantBackgroundCheck] WITH CHECK ADD CONSTRAINT [FK_ApplicantBackgroundCheck_BackgroundCheckStatusDescriptor] FOREIGN KEY ([BackgroundCheckStatusDescriptorId])
REFERENCES [extension].[BackgroundCheckStatusDescriptor] ([BackgroundCheckStatusDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantBackgroundCheck_BackgroundCheckStatusDescriptor]
ON [extension].[ApplicantBackgroundCheck]([BackgroundCheckStatusDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantBackgroundCheck] WITH CHECK ADD CONSTRAINT [FK_ApplicantBackgroundCheck_BackgroundCheckTypeDescriptor] FOREIGN KEY ([BackgroundCheckTypeDescriptorId])
REFERENCES [extension].[BackgroundCheckTypeDescriptor] ([BackgroundCheckTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantBackgroundCheck_BackgroundCheckTypeDescriptor]
ON [extension].[ApplicantBackgroundCheck]([BackgroundCheckTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredential] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredential_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredential_Applicant]
ON [extension].[ApplicantCredential]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredential] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredential_CredentialFieldDescriptor] FOREIGN KEY ([CredentialFieldDescriptorId])
REFERENCES [edfi].[CredentialFieldDescriptor] ([CredentialFieldDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredential_CredentialFieldDescriptor]
ON [extension].[ApplicantCredential]([CredentialFieldDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredential] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredential_CredentialType] FOREIGN KEY ([CredentialTypeId])
REFERENCES [edfi].[CredentialType] ([CredentialTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredential_CredentialType]
ON [extension].[ApplicantCredential]([CredentialTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredential] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredential_LevelDescriptor] FOREIGN KEY ([LevelDescriptorId])
REFERENCES [edfi].[LevelDescriptor] ([LevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredential_LevelDescriptor]
ON [extension].[ApplicantCredential]([LevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredential] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredential_StateAbbreviationType] FOREIGN KEY ([StateOfIssueStateAbbreviationTypeId])
REFERENCES [edfi].[StateAbbreviationType] ([StateAbbreviationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredential_StateAbbreviationType]
ON [extension].[ApplicantCredential]([StateOfIssueStateAbbreviationTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredential] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredential_TeachingCredentialBasisType] FOREIGN KEY ([TeachingCredentialBasisTypeId])
REFERENCES [edfi].[TeachingCredentialBasisType] ([TeachingCredentialBasisTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredential_TeachingCredentialBasisType]
ON [extension].[ApplicantCredential]([TeachingCredentialBasisTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredential] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredential_TeachingCredentialDescriptor] FOREIGN KEY ([TeachingCredentialDescriptorId])
REFERENCES [edfi].[TeachingCredentialDescriptor] ([TeachingCredentialDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredential_TeachingCredentialDescriptor]
ON [extension].[ApplicantCredential]([TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtension] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtension_ApplicantCredential] FOREIGN KEY ([ApplicantIdentifier], [CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [TeachingCredentialDescriptorId])
REFERENCES [extension].[ApplicantCredential] ([ApplicantIdentifier], [CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtension_ApplicantCredential]
ON [extension].[ApplicantCredentialExtension]([ApplicantIdentifier] ASC, [CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [EducationOrganizationId] ASC, [LevelDescriptorId] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtension] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtension_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtension_ValueType]
ON [extension].[ApplicantCredentialExtension]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionBoardCertification] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionBoardCertification_ApplicantCredentialExtension] FOREIGN KEY ([ApplicantIdentifier], [CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [TeachingCredentialDescriptorId])
REFERENCES [extension].[ApplicantCredentialExtension] ([ApplicantIdentifier], [CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionBoardCertification_ApplicantCredentialExtension]
ON [extension].[ApplicantCredentialExtensionBoardCertification]([ApplicantIdentifier] ASC, [CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [EducationOrganizationId] ASC, [LevelDescriptorId] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionBoardCertification] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionBoardCertification_BoardCertificationTypeDescriptor] FOREIGN KEY ([BoardCertificationTypeDescriptorId])
REFERENCES [extension].[BoardCertificationTypeDescriptor] ([BoardCertificationTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionBoardCertification_BoardCertificationTypeDescriptor]
ON [extension].[ApplicantCredentialExtensionBoardCertification]([BoardCertificationTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionCertificationExam] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionCertificationExam_ApplicantCredentialExtension] FOREIGN KEY ([ApplicantIdentifier], [CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [TeachingCredentialDescriptorId])
REFERENCES [extension].[ApplicantCredentialExtension] ([ApplicantIdentifier], [CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionCertificationExam_ApplicantCredentialExtension]
ON [extension].[ApplicantCredentialExtensionCertificationExam]([ApplicantIdentifier] ASC, [CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [EducationOrganizationId] ASC, [LevelDescriptorId] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionCertificationExam] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionCertificationExam_CertificationExamTypeDescriptor] FOREIGN KEY ([CertificationExamTypeDescriptorId])
REFERENCES [extension].[CertificationExamTypeDescriptor] ([CertificationExamTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionCertificationExam_CertificationExamTypeDescriptor]
ON [extension].[ApplicantCredentialExtensionCertificationExam]([CertificationExamTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionRecommendation_ApplicantCredentialExtension] FOREIGN KEY ([ApplicantIdentifier], [CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [TeachingCredentialDescriptorId])
REFERENCES [extension].[ApplicantCredentialExtension] ([ApplicantIdentifier], [CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionRecommendation_ApplicantCredentialExtension]
ON [extension].[ApplicantCredentialExtensionRecommendation]([ApplicantIdentifier] ASC, [CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [EducationOrganizationId] ASC, [LevelDescriptorId] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionRecommendation_CredentialFieldDescriptor] FOREIGN KEY ([CredentialFieldDescriptorId])
REFERENCES [edfi].[CredentialFieldDescriptor] ([CredentialFieldDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionRecommendation_CredentialFieldDescriptor]
ON [extension].[ApplicantCredentialExtensionRecommendation]([CredentialFieldDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionRecommendation_LevelDescriptor] FOREIGN KEY ([LevelDescriptorId])
REFERENCES [edfi].[LevelDescriptor] ([LevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionRecommendation_LevelDescriptor]
ON [extension].[ApplicantCredentialExtensionRecommendation]([LevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionRecommendation_TeachingCredentialDescriptor] FOREIGN KEY ([TeachingCredentialDescriptorId])
REFERENCES [edfi].[TeachingCredentialDescriptor] ([TeachingCredentialDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionRecommendation_TeachingCredentialDescriptor]
ON [extension].[ApplicantCredentialExtensionRecommendation]([TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionRecommendingInstitution_ApplicantCredentialExtension] FOREIGN KEY ([ApplicantIdentifier], [CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [TeachingCredentialDescriptorId])
REFERENCES [extension].[ApplicantCredentialExtension] ([ApplicantIdentifier], [CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionRecommendingInstitution_ApplicantCredentialExtension]
ON [extension].[ApplicantCredentialExtensionRecommendingInstitution]([ApplicantIdentifier] ASC, [CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [EducationOrganizationId] ASC, [LevelDescriptorId] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionRecommendingInstitution_CountryDescriptor] FOREIGN KEY ([RecommendingInstitutionCountryDescriptorId])
REFERENCES [edfi].[CountryDescriptor] ([CountryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionRecommendingInstitution_CountryDescriptor]
ON [extension].[ApplicantCredentialExtensionRecommendingInstitution]([RecommendingInstitutionCountryDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_ApplicantCredentialExtensionRecommendingInstitution_StateAbbreviationType] FOREIGN KEY ([RecommendingInstutionStateAbbreviationTypeId])
REFERENCES [edfi].[StateAbbreviationType] ([StateAbbreviationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantCredentialExtensionRecommendingInstitution_StateAbbreviationType]
ON [extension].[ApplicantCredentialExtensionRecommendingInstitution]([RecommendingInstutionStateAbbreviationTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantDisability] WITH CHECK ADD CONSTRAINT [FK_ApplicantDisability_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantDisability_Applicant]
ON [extension].[ApplicantDisability]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantDisability] WITH CHECK ADD CONSTRAINT [FK_ApplicantDisability_DisabilityDescriptor] FOREIGN KEY ([DisabilityDescriptorId])
REFERENCES [edfi].[DisabilityDescriptor] ([DisabilityDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantDisability_DisabilityDescriptor]
ON [extension].[ApplicantDisability]([DisabilityDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantDisability] WITH CHECK ADD CONSTRAINT [FK_ApplicantDisability_DisabilityDeterminationSourceType] FOREIGN KEY ([DisabilityDeterminationSourceTypeId])
REFERENCES [edfi].[DisabilityDeterminationSourceType] ([DisabilityDeterminationSourceTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantDisability_DisabilityDeterminationSourceType]
ON [extension].[ApplicantDisability]([DisabilityDeterminationSourceTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantElectronicMail] WITH CHECK ADD CONSTRAINT [FK_ApplicantElectronicMail_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantElectronicMail_Applicant]
ON [extension].[ApplicantElectronicMail]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantElectronicMail] WITH CHECK ADD CONSTRAINT [FK_ApplicantElectronicMail_ElectronicMailType] FOREIGN KEY ([ElectronicMailTypeId])
REFERENCES [edfi].[ElectronicMailType] ([ElectronicMailTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantElectronicMail_ElectronicMailType]
ON [extension].[ApplicantElectronicMail]([ElectronicMailTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantIdentificationDocument] WITH CHECK ADD CONSTRAINT [FK_ApplicantIdentificationDocument_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantIdentificationDocument_Applicant]
ON [extension].[ApplicantIdentificationDocument]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantIdentificationDocument] WITH CHECK ADD CONSTRAINT [FK_ApplicantIdentificationDocument_CountryDescriptor] FOREIGN KEY ([IssuerCountryDescriptorId])
REFERENCES [edfi].[CountryDescriptor] ([CountryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantIdentificationDocument_CountryDescriptor]
ON [extension].[ApplicantIdentificationDocument]([IssuerCountryDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantIdentificationDocument] WITH CHECK ADD CONSTRAINT [FK_ApplicantIdentificationDocument_IdentificationDocumentUseType] FOREIGN KEY ([IdentificationDocumentUseTypeId])
REFERENCES [edfi].[IdentificationDocumentUseType] ([IdentificationDocumentUseTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantIdentificationDocument_IdentificationDocumentUseType]
ON [extension].[ApplicantIdentificationDocument]([IdentificationDocumentUseTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantIdentificationDocument] WITH CHECK ADD CONSTRAINT [FK_ApplicantIdentificationDocument_PersonalInformationVerificationType] FOREIGN KEY ([PersonalInformationVerificationTypeId])
REFERENCES [edfi].[PersonalInformationVerificationType] ([PersonalInformationVerificationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantIdentificationDocument_PersonalInformationVerificationType]
ON [extension].[ApplicantIdentificationDocument]([PersonalInformationVerificationTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantInternationalAddress] WITH CHECK ADD CONSTRAINT [FK_ApplicantInternationalAddress_AddressType] FOREIGN KEY ([AddressTypeId])
REFERENCES [edfi].[AddressType] ([AddressTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantInternationalAddress_AddressType]
ON [extension].[ApplicantInternationalAddress]([AddressTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantInternationalAddress] WITH CHECK ADD CONSTRAINT [FK_ApplicantInternationalAddress_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantInternationalAddress_Applicant]
ON [extension].[ApplicantInternationalAddress]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantInternationalAddress] WITH CHECK ADD CONSTRAINT [FK_ApplicantInternationalAddress_CountryDescriptor] FOREIGN KEY ([CountryDescriptorId])
REFERENCES [edfi].[CountryDescriptor] ([CountryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantInternationalAddress_CountryDescriptor]
ON [extension].[ApplicantInternationalAddress]([CountryDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantLanguage] WITH CHECK ADD CONSTRAINT [FK_ApplicantLanguage_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantLanguage_Applicant]
ON [extension].[ApplicantLanguage]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantLanguage] WITH CHECK ADD CONSTRAINT [FK_ApplicantLanguage_LanguageDescriptor] FOREIGN KEY ([LanguageDescriptorId])
REFERENCES [edfi].[LanguageDescriptor] ([LanguageDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantLanguage_LanguageDescriptor]
ON [extension].[ApplicantLanguage]([LanguageDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantLanguageUse] WITH CHECK ADD CONSTRAINT [FK_ApplicantLanguageUse_ApplicantLanguage] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId], [LanguageDescriptorId])
REFERENCES [extension].[ApplicantLanguage] ([ApplicantIdentifier], [EducationOrganizationId], [LanguageDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantLanguageUse_ApplicantLanguage]
ON [extension].[ApplicantLanguageUse]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC, [LanguageDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantLanguageUse] WITH CHECK ADD CONSTRAINT [FK_ApplicantLanguageUse_LanguageUseType] FOREIGN KEY ([LanguageUseTypeId])
REFERENCES [edfi].[LanguageUseType] ([LanguageUseTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantLanguageUse_LanguageUseType]
ON [extension].[ApplicantLanguageUse]([LanguageUseTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantRace] WITH CHECK ADD CONSTRAINT [FK_ApplicantRace_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantRace_Applicant]
ON [extension].[ApplicantRace]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantRace] WITH CHECK ADD CONSTRAINT [FK_ApplicantRace_RaceType] FOREIGN KEY ([RaceTypeId])
REFERENCES [edfi].[RaceType] ([RaceTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantRace_RaceType]
ON [extension].[ApplicantRace]([RaceTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantStaffIdentificationCode] WITH CHECK ADD CONSTRAINT [FK_ApplicantStaffIdentificationCode_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantStaffIdentificationCode_Applicant]
ON [extension].[ApplicantStaffIdentificationCode]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantStaffIdentificationCode] WITH CHECK ADD CONSTRAINT [FK_ApplicantStaffIdentificationCode_StaffIdentificationSystemDescriptor] FOREIGN KEY ([StaffIdentificationSystemDescriptorId])
REFERENCES [edfi].[StaffIdentificationSystemDescriptor] ([StaffIdentificationSystemDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantStaffIdentificationCode_StaffIdentificationSystemDescriptor]
ON [extension].[ApplicantStaffIdentificationCode]([StaffIdentificationSystemDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantTeacherPreparationProgram] WITH CHECK ADD CONSTRAINT [FK_ApplicantTeacherPreparationProgram_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantTeacherPreparationProgram_Applicant]
ON [extension].[ApplicantTeacherPreparationProgram]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantTeacherPreparationProgram] WITH CHECK ADD CONSTRAINT [FK_ApplicantTeacherPreparationProgram_LevelOfDegreeAwardedDescriptor] FOREIGN KEY ([LevelOfDegreeAwardedDescriptorId])
REFERENCES [extension].[LevelOfDegreeAwardedDescriptor] ([LevelOfDegreeAwardedDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantTeacherPreparationProgram_LevelOfDegreeAwardedDescriptor]
ON [extension].[ApplicantTeacherPreparationProgram]([LevelOfDegreeAwardedDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantTeacherPreparationProgram] WITH CHECK ADD CONSTRAINT [FK_ApplicantTeacherPreparationProgram_TeacherPreparationProgramTypeDescriptor] FOREIGN KEY ([TeacherPreparationProgramTypeDescriptorId])
REFERENCES [extension].[TeacherPreparationProgramTypeDescriptor] ([TeacherPreparationProgramTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantTeacherPreparationProgram_TeacherPreparationProgramTypeDescriptor]
ON [extension].[ApplicantTeacherPreparationProgram]([TeacherPreparationProgramTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ApplicantTeacherPreparationProgramAddress] WITH CHECK ADD CONSTRAINT [FK_ApplicantTeacherPreparationProgramAddress_AddressType] FOREIGN KEY ([AddressTypeId])
REFERENCES [edfi].[AddressType] ([AddressTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantTeacherPreparationProgramAddress_AddressType]
ON [extension].[ApplicantTeacherPreparationProgramAddress]([AddressTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantTeacherPreparationProgramAddress] WITH CHECK ADD CONSTRAINT [FK_ApplicantTeacherPreparationProgramAddress_ApplicantTeacherPreparationProgram] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId], [TeacherPreparationProgramName])
REFERENCES [extension].[ApplicantTeacherPreparationProgram] ([ApplicantIdentifier], [EducationOrganizationId], [TeacherPreparationProgramName])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantTeacherPreparationProgramAddress_ApplicantTeacherPreparationProgram]
ON [extension].[ApplicantTeacherPreparationProgramAddress]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC, [TeacherPreparationProgramName] ASC)
GO

ALTER TABLE [extension].[ApplicantTeacherPreparationProgramAddress] WITH CHECK ADD CONSTRAINT [FK_ApplicantTeacherPreparationProgramAddress_StateAbbreviationType] FOREIGN KEY ([StateAbbreviationTypeId])
REFERENCES [edfi].[StateAbbreviationType] ([StateAbbreviationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantTeacherPreparationProgramAddress_StateAbbreviationType]
ON [extension].[ApplicantTeacherPreparationProgramAddress]([StateAbbreviationTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantTelephone] WITH CHECK ADD CONSTRAINT [FK_ApplicantTelephone_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantTelephone_Applicant]
ON [extension].[ApplicantTelephone]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantTelephone] WITH CHECK ADD CONSTRAINT [FK_ApplicantTelephone_TelephoneNumberType] FOREIGN KEY ([TelephoneNumberTypeId])
REFERENCES [edfi].[TelephoneNumberType] ([TelephoneNumberTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantTelephone_TelephoneNumberType]
ON [extension].[ApplicantTelephone]([TelephoneNumberTypeId] ASC)
GO

ALTER TABLE [extension].[ApplicantVisa] WITH CHECK ADD CONSTRAINT [FK_ApplicantVisa_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ApplicantVisa_Applicant]
ON [extension].[ApplicantVisa]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[ApplicantVisa] WITH CHECK ADD CONSTRAINT [FK_ApplicantVisa_VisaType] FOREIGN KEY ([VisaTypeId])
REFERENCES [edfi].[VisaType] ([VisaTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ApplicantVisa_VisaType]
ON [extension].[ApplicantVisa]([VisaTypeId] ASC)
GO

ALTER TABLE [extension].[AssessmentExtension] WITH CHECK ADD CONSTRAINT [FK_AssessmentExtension_Assessment] FOREIGN KEY ([AcademicSubjectDescriptorId], [AssessedGradeLevelDescriptorId], [AssessmentTitle], [Version])
REFERENCES [edfi].[Assessment] ([AcademicSubjectDescriptorId], [AssessedGradeLevelDescriptorId], [AssessmentTitle], [Version])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_AssessmentExtension_Assessment]
ON [extension].[AssessmentExtension]([AcademicSubjectDescriptorId] ASC, [AssessedGradeLevelDescriptorId] ASC, [AssessmentTitle] ASC, [Version] ASC)
GO

ALTER TABLE [extension].[AssessmentExtension] WITH CHECK ADD CONSTRAINT [FK_AssessmentExtension_ProgramGatewayDescriptor] FOREIGN KEY ([ProgramGatewayDescriptorId])
REFERENCES [extension].[ProgramGatewayDescriptor] ([ProgramGatewayDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_AssessmentExtension_ProgramGatewayDescriptor]
ON [extension].[AssessmentExtension]([ProgramGatewayDescriptorId] ASC)
GO

ALTER TABLE [extension].[BackgroundCheckStatusDescriptor] WITH CHECK ADD CONSTRAINT [FK_BackgroundCheckStatusDescriptor_BackgroundCheckStatusType] FOREIGN KEY ([BackgroundCheckStatusTypeId])
REFERENCES [extension].[BackgroundCheckStatusType] ([BackgroundCheckStatusTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_BackgroundCheckStatusDescriptor_BackgroundCheckStatusType]
ON [extension].[BackgroundCheckStatusDescriptor]([BackgroundCheckStatusTypeId] ASC)
GO

ALTER TABLE [extension].[BackgroundCheckStatusDescriptor] WITH CHECK ADD CONSTRAINT [FK_BackgroundCheckStatusDescriptor_Descriptor] FOREIGN KEY ([BackgroundCheckStatusDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_BackgroundCheckStatusDescriptor_Descriptor]
ON [extension].[BackgroundCheckStatusDescriptor]([BackgroundCheckStatusDescriptorId] ASC)
GO

ALTER TABLE [extension].[BackgroundCheckTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_BackgroundCheckTypeDescriptor_BackgroundCheckType] FOREIGN KEY ([BackgroundCheckTypeId])
REFERENCES [extension].[BackgroundCheckType] ([BackgroundCheckTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_BackgroundCheckTypeDescriptor_BackgroundCheckType]
ON [extension].[BackgroundCheckTypeDescriptor]([BackgroundCheckTypeId] ASC)
GO

ALTER TABLE [extension].[BackgroundCheckTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_BackgroundCheckTypeDescriptor_Descriptor] FOREIGN KEY ([BackgroundCheckTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_BackgroundCheckTypeDescriptor_Descriptor]
ON [extension].[BackgroundCheckTypeDescriptor]([BackgroundCheckTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[BoardCertificationTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_BoardCertificationTypeDescriptor_BoardCertificationType] FOREIGN KEY ([BoardCertificationTypeId])
REFERENCES [extension].[BoardCertificationType] ([BoardCertificationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_BoardCertificationTypeDescriptor_BoardCertificationType]
ON [extension].[BoardCertificationTypeDescriptor]([BoardCertificationTypeId] ASC)
GO

ALTER TABLE [extension].[BoardCertificationTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_BoardCertificationTypeDescriptor_Descriptor] FOREIGN KEY ([BoardCertificationTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_BoardCertificationTypeDescriptor_Descriptor]
ON [extension].[BoardCertificationTypeDescriptor]([BoardCertificationTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[CertificationExamTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_CertificationExamTypeDescriptor_CertificationExamType] FOREIGN KEY ([CertificationExamTypeId])
REFERENCES [extension].[CertificationExamType] ([CertificationExamTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CertificationExamTypeDescriptor_CertificationExamType]
ON [extension].[CertificationExamTypeDescriptor]([CertificationExamTypeId] ASC)
GO

ALTER TABLE [extension].[CertificationExamTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_CertificationExamTypeDescriptor_Descriptor] FOREIGN KEY ([CertificationExamTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CertificationExamTypeDescriptor_Descriptor]
ON [extension].[CertificationExamTypeDescriptor]([CertificationExamTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[CourseCourseTranscriptFact] WITH CHECK ADD CONSTRAINT [FK_CourseCourseTranscriptFact_CourseStudentAcademicRecordFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentAcademicRecordFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])


GO

CREATE NONCLUSTERED INDEX [FK_CourseCourseTranscriptFact_CourseStudentAcademicRecordFact]
ON [extension].[CourseCourseTranscriptFact]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseCourseTranscriptFact] WITH CHECK ADD CONSTRAINT [FK_CourseCourseTranscriptFact_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseCourseTranscriptFact_SchoolYearType]
ON [extension].[CourseCourseTranscriptFact]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned] WITH CHECK ADD CONSTRAINT [FK_CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned_CourseCourseTranscriptFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[CourseCourseTranscriptFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned_CourseCourseTranscriptFact]
ON [extension].[CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned] WITH CHECK ADD CONSTRAINT [FK_CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned_SchoolYearType]
ON [extension].[CourseCourseTranscriptFactAggregatedFinalLetterGradeEarned]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseCourseTranscriptFactAggregatedNumericGradeEarned] WITH CHECK ADD CONSTRAINT [FK_CourseCourseTranscriptFactAggregatedNumericGradeEarned_CourseCourseTranscriptFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[CourseCourseTranscriptFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseCourseTranscriptFactAggregatedNumericGradeEarned_CourseCourseTranscriptFact]
ON [extension].[CourseCourseTranscriptFactAggregatedNumericGradeEarned]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseCourseTranscriptFactAggregatedNumericGradeEarned] WITH CHECK ADD CONSTRAINT [FK_CourseCourseTranscriptFactAggregatedNumericGradeEarned_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseCourseTranscriptFactAggregatedNumericGradeEarned_SchoolYearType]
ON [extension].[CourseCourseTranscriptFactAggregatedNumericGradeEarned]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseCourseTranscriptFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseCourseTranscriptFactStudentsEnrolled_CourseCourseTranscriptFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[CourseCourseTranscriptFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseCourseTranscriptFactStudentsEnrolled_CourseCourseTranscriptFact]
ON [extension].[CourseCourseTranscriptFactStudentsEnrolled]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseCourseTranscriptFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseCourseTranscriptFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseCourseTranscriptFactStudentsEnrolled_SchoolYearType]
ON [extension].[CourseCourseTranscriptFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseCourseTranscriptFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseCourseTranscriptFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseCourseTranscriptFactStudentsEnrolled_ValueType]
ON [extension].[CourseCourseTranscriptFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentAcademicRecordFact] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAcademicRecordFact_Course] FOREIGN KEY ([CourseCode], [EducationOrganizationId])
REFERENCES [edfi].[Course] ([CourseCode], [EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAcademicRecordFact_Course]
ON [extension].[CourseStudentAcademicRecordFact]([CourseCode] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_CourseStudentAcademicRecordFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentAcademicRecordFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_CourseStudentAcademicRecordFact]
ON [extension].[CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_SchoolYearType]
ON [extension].[CourseStudentAcademicRecordFactAggregatedCumulativeGradePointAverage]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage_CourseStudentAcademicRecordFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentAcademicRecordFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage_CourseStudentAcademicRecordFact]
ON [extension].[CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage_SchoolYearType]
ON [extension].[CourseStudentAcademicRecordFactAggregatedSessionGradePointAverage]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentAcademicRecordFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAcademicRecordFactStudentsEnrolled_CourseStudentAcademicRecordFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentAcademicRecordFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAcademicRecordFactStudentsEnrolled_CourseStudentAcademicRecordFact]
ON [extension].[CourseStudentAcademicRecordFactStudentsEnrolled]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentAcademicRecordFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAcademicRecordFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAcademicRecordFactStudentsEnrolled_SchoolYearType]
ON [extension].[CourseStudentAcademicRecordFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentAcademicRecordFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAcademicRecordFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAcademicRecordFactStudentsEnrolled_ValueType]
ON [extension].[CourseStudentAcademicRecordFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFact_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFact_AcademicSubjectDescriptor]
ON [extension].[CourseStudentAssessmentFact]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFact_AssessmentCategoryDescriptor] FOREIGN KEY ([AssessmentCategoryDescriptorId])
REFERENCES [edfi].[AssessmentCategoryDescriptor] ([AssessmentCategoryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFact_AssessmentCategoryDescriptor]
ON [extension].[CourseStudentAssessmentFact]([AssessmentCategoryDescriptorId] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFact_Course] FOREIGN KEY ([CourseCode], [EducationOrganizationId])
REFERENCES [edfi].[Course] ([CourseCode], [EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFact_Course]
ON [extension].[CourseStudentAssessmentFact]([CourseCode] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFact_GradeLevelDescriptor] FOREIGN KEY ([GradeLevelDescriptorId])
REFERENCES [edfi].[GradeLevelDescriptor] ([GradeLevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFact_GradeLevelDescriptor]
ON [extension].[CourseStudentAssessmentFact]([GradeLevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFact_SchoolYearType] FOREIGN KEY ([SchoolYearTakenSchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFact_SchoolYearType]
ON [extension].[CourseStudentAssessmentFact]([SchoolYearTakenSchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFact_TermDescriptor] FOREIGN KEY ([TermDescriptorId])
REFERENCES [edfi].[TermDescriptor] ([TermDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFact_TermDescriptor]
ON [extension].[CourseStudentAssessmentFact]([TermDescriptorId] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFactAggregatedPerformanceLevel] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFactAggregatedPerformanceLevel_CourseStudentAssessmentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
REFERENCES [extension].[CourseStudentAssessmentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFactAggregatedPerformanceLevel_CourseStudentAssessmentFact]
ON [extension].[CourseStudentAssessmentFactAggregatedPerformanceLevel]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC, [SchoolYearTakenSchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFactAggregatedScoreResult] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFactAggregatedScoreResult_AssessmentReportingMethodType] FOREIGN KEY ([AssessmentReportingMethodTypeId])
REFERENCES [edfi].[AssessmentReportingMethodType] ([AssessmentReportingMethodTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFactAggregatedScoreResult_AssessmentReportingMethodType]
ON [extension].[CourseStudentAssessmentFactAggregatedScoreResult]([AssessmentReportingMethodTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFactAggregatedScoreResult] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFactAggregatedScoreResult_CourseStudentAssessmentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
REFERENCES [extension].[CourseStudentAssessmentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFactAggregatedScoreResult_CourseStudentAssessmentFact]
ON [extension].[CourseStudentAssessmentFactAggregatedScoreResult]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC, [SchoolYearTakenSchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFactAggregatedScoreResult] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFactAggregatedScoreResult_ResultDatatypeType] FOREIGN KEY ([AverageScoreResultDataTypeResultDatatypeTypeId])
REFERENCES [edfi].[ResultDatatypeType] ([ResultDatatypeTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFactAggregatedScoreResult_ResultDatatypeType]
ON [extension].[CourseStudentAssessmentFactAggregatedScoreResult]([AverageScoreResultDataTypeResultDatatypeTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFactStudentsEnrolled_CourseStudentAssessmentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
REFERENCES [extension].[CourseStudentAssessmentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFactStudentsEnrolled_CourseStudentAssessmentFact]
ON [extension].[CourseStudentAssessmentFactStudentsEnrolled]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC, [SchoolYearTakenSchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFactStudentsEnrolled_SchoolYearType]
ON [extension].[CourseStudentAssessmentFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentAssessmentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentAssessmentFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentAssessmentFactStudentsEnrolled_ValueType]
ON [extension].[CourseStudentAssessmentFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFact] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFact_Course] FOREIGN KEY ([CourseCode], [EducationOrganizationId])
REFERENCES [edfi].[Course] ([CourseCode], [EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFact_Course]
ON [extension].[CourseStudentFact]([CourseCode] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedELLEnrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedELLEnrollment_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedELLEnrollment_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedELLEnrollment]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedELLEnrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedELLEnrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedELLEnrollment_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedELLEnrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedELLEnrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedELLEnrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedELLEnrollment_ValueType]
ON [extension].[CourseStudentFactAggregatedELLEnrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedESLEnrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedESLEnrollment_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedESLEnrollment_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedESLEnrollment]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedESLEnrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedESLEnrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedESLEnrollment_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedESLEnrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedESLEnrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedESLEnrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedESLEnrollment_ValueType]
ON [extension].[CourseStudentFactAggregatedESLEnrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedGender_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedGender_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedGender]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedGender_GenderType] FOREIGN KEY ([GenderTypeId])
REFERENCES [extension].[GenderType] ([GenderTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedGender_GenderType]
ON [extension].[CourseStudentFactAggregatedGender]([GenderTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedGender_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedGender_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedGender]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedGender_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedGender_ValueType]
ON [extension].[CourseStudentFactAggregatedGender]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedHispanicLatinoEthnicity] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedHispanicLatinoEthnicity_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedHispanicLatinoEthnicity_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedHispanicLatinoEthnicity]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedHispanicLatinoEthnicity] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedHispanicLatinoEthnicity_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedHispanicLatinoEthnicity_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedHispanicLatinoEthnicity]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedHispanicLatinoEthnicity] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedHispanicLatinoEthnicity_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedHispanicLatinoEthnicity_ValueType]
ON [extension].[CourseStudentFactAggregatedHispanicLatinoEthnicity]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedLanguage_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedLanguage_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedLanguage]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedLanguage_LanguageDescriptor] FOREIGN KEY ([LanguageDescriptorId])
REFERENCES [edfi].[LanguageDescriptor] ([LanguageDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedLanguage_LanguageDescriptor]
ON [extension].[CourseStudentFactAggregatedLanguage]([LanguageDescriptorId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedLanguage_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedLanguage_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedLanguage]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedLanguage_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedLanguage_ValueType]
ON [extension].[CourseStudentFactAggregatedLanguage]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedRace_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedRace_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedRace]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedRace_RaceType] FOREIGN KEY ([RaceTypeId])
REFERENCES [edfi].[RaceType] ([RaceTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedRace_RaceType]
ON [extension].[CourseStudentFactAggregatedRace]([RaceTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedRace_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedRace_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedRace]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedRace_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedRace_ValueType]
ON [extension].[CourseStudentFactAggregatedRace]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSchoolFoodServicesEligibility_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSchoolFoodServicesEligibility_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSchoolFoodServicesEligibility_SchoolFoodServicesEligibilityDescriptor] FOREIGN KEY ([SchoolFoodServicesEligibilityDescriptorId])
REFERENCES [edfi].[SchoolFoodServicesEligibilityDescriptor] ([SchoolFoodServicesEligibilityDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSchoolFoodServicesEligibility_SchoolFoodServicesEligibilityDescriptor]
ON [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility]([SchoolFoodServicesEligibilityDescriptorId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSchoolFoodServicesEligibility_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSchoolFoodServicesEligibility_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSchoolFoodServicesEligibility_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSchoolFoodServicesEligibility_ValueType]
ON [extension].[CourseStudentFactAggregatedSchoolFoodServicesEligibility]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSection504Enrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSection504Enrollment_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSection504Enrollment_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedSection504Enrollment]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSection504Enrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSection504Enrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSection504Enrollment_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedSection504Enrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSection504Enrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSection504Enrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSection504Enrollment_ValueType]
ON [extension].[CourseStudentFactAggregatedSection504Enrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSex_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSex_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedSex]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSex_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSex_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedSex]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSex_SexType] FOREIGN KEY ([SexTypeId])
REFERENCES [edfi].[SexType] ([SexTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSex_SexType]
ON [extension].[CourseStudentFactAggregatedSex]([SexTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSex_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSex_ValueType]
ON [extension].[CourseStudentFactAggregatedSex]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSPED] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSPED_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSPED_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedSPED]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSPED] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSPED_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSPED_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedSPED]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedSPED] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedSPED_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedSPED_ValueType]
ON [extension].[CourseStudentFactAggregatedSPED]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedTitleIEnrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedTitleIEnrollment_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedTitleIEnrollment_CourseStudentFact]
ON [extension].[CourseStudentFactAggregatedTitleIEnrollment]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedTitleIEnrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedTitleIEnrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedTitleIEnrollment_SchoolYearType]
ON [extension].[CourseStudentFactAggregatedTitleIEnrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactAggregatedTitleIEnrollment] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactAggregatedTitleIEnrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactAggregatedTitleIEnrollment_ValueType]
ON [extension].[CourseStudentFactAggregatedTitleIEnrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactDisabilityByType_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactDisabilityByType_CourseStudentFact]
ON [extension].[CourseStudentFactDisabilityByType]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactDisabilityByType_DisabilityDescriptor] FOREIGN KEY ([DisabilityDescriptorId])
REFERENCES [edfi].[DisabilityDescriptor] ([DisabilityDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactDisabilityByType_DisabilityDescriptor]
ON [extension].[CourseStudentFactDisabilityByType]([DisabilityDescriptorId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactDisabilityByType_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactDisabilityByType_SchoolYearType]
ON [extension].[CourseStudentFactDisabilityByType]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactDisabilityByType_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactDisabilityByType_ValueType]
ON [extension].[CourseStudentFactDisabilityByType]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactStudentsEnrolled_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactStudentsEnrolled_CourseStudentFact]
ON [extension].[CourseStudentFactStudentsEnrolled]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactStudentsEnrolled_SchoolYearType]
ON [extension].[CourseStudentFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactStudentsEnrolled_ValueType]
ON [extension].[CourseStudentFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactTotalStudentsDisabled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactTotalStudentsDisabled_CourseStudentFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[CourseStudentFact] ([CourseCode], [EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactTotalStudentsDisabled_CourseStudentFact]
ON [extension].[CourseStudentFactTotalStudentsDisabled]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactTotalStudentsDisabled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactTotalStudentsDisabled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactTotalStudentsDisabled_SchoolYearType]
ON [extension].[CourseStudentFactTotalStudentsDisabled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseStudentFactTotalStudentsDisabled] WITH CHECK ADD CONSTRAINT [FK_CourseStudentFactTotalStudentsDisabled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseStudentFactTotalStudentsDisabled_ValueType]
ON [extension].[CourseStudentFactTotalStudentsDisabled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[CourseSurveyResponseFact] WITH CHECK ADD CONSTRAINT [FK_CourseSurveyResponseFact_Course] FOREIGN KEY ([CourseCode], [EducationOrganizationId])
REFERENCES [edfi].[Course] ([CourseCode], [EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_CourseSurveyResponseFact_Course]
ON [extension].[CourseSurveyResponseFact]([CourseCode] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[CourseSurveyResponseFact] WITH CHECK ADD CONSTRAINT [FK_CourseSurveyResponseFact_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_CourseSurveyResponseFact_SchoolYearType]
ON [extension].[CourseSurveyResponseFact]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[CourseSurveyResponseFact] WITH CHECK ADD CONSTRAINT [FK_CourseSurveyResponseFact_Survey] FOREIGN KEY ([SurveyIdentifier])
REFERENCES [extension].[Survey] ([SurveyIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_CourseSurveyResponseFact_Survey]
ON [extension].[CourseSurveyResponseFact]([SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[CourseSurveySectionResponseRatingFact] WITH CHECK ADD CONSTRAINT [FK_CourseSurveySectionResponseRatingFact_CourseSurveyResponseFact] FOREIGN KEY ([CourseCode], [EducationOrganizationId], [FactsAsOfDate])
REFERENCES [extension].[CourseSurveyResponseFact] ([CourseCode], [EducationOrganizationId], [FactsAsOfDate])


GO

CREATE NONCLUSTERED INDEX [FK_CourseSurveySectionResponseRatingFact_CourseSurveyResponseFact]
ON [extension].[CourseSurveySectionResponseRatingFact]([CourseCode] ASC, [EducationOrganizationId] ASC, [FactsAsOfDate] ASC)
GO

ALTER TABLE [extension].[CourseSurveySectionResponseRatingFact] WITH CHECK ADD CONSTRAINT [FK_CourseSurveySectionResponseRatingFact_SurveySection] FOREIGN KEY ([SurveyIdentifier], [SurveySectionTitle])
REFERENCES [extension].[SurveySection] ([SurveyIdentifier], [SurveySectionTitle])


GO

CREATE NONCLUSTERED INDEX [FK_CourseSurveySectionResponseRatingFact_SurveySection]
ON [extension].[CourseSurveySectionResponseRatingFact]([SurveyIdentifier] ASC, [SurveySectionTitle] ASC)
GO

ALTER TABLE [extension].[CourseSurveySectionResponseRatingFactAggregatedNumericResponse] WITH CHECK ADD CONSTRAINT [FK_CourseSurveySectionResponseRatingFactAggregatedNumericResponse_CourseSurveySectionResponseRatingFact] FOREIGN KEY ([SurveyIdentifier], [SurveySectionTitle])
REFERENCES [extension].[CourseSurveySectionResponseRatingFact] ([SurveyIdentifier], [SurveySectionTitle])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_CourseSurveySectionResponseRatingFactAggregatedNumericResponse_CourseSurveySectionResponseRatingFact]
ON [extension].[CourseSurveySectionResponseRatingFactAggregatedNumericResponse]([SurveyIdentifier] ASC, [SurveySectionTitle] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationCourseTranscriptFact_EducationOrganizationStudentAcademicRecordFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentAcademicRecordFact] ([EducationOrganizationId], [FactAsOfDate])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationCourseTranscriptFact_EducationOrganizationStudentAcademicRecordFact]
ON [extension].[EducationOrganizationCourseTranscriptFact]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationCourseTranscriptFact_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationCourseTranscriptFact_SchoolYearType]
ON [extension].[EducationOrganizationCourseTranscriptFact]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned_EducationOrganizationCourseTranscriptFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[EducationOrganizationCourseTranscriptFact] ([EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned_EducationOrganizationCourseTranscriptFact]
ON [extension].[EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned]([EducationOrganizationId] ASC, [FactAsOfDate] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned_SchoolYearType]
ON [extension].[EducationOrganizationCourseTranscriptFactAggregatedFinalLetterGradeEarned]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned_EducationOrganizationCourseTranscriptFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[EducationOrganizationCourseTranscriptFact] ([EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned_EducationOrganizationCourseTranscriptFact]
ON [extension].[EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned]([EducationOrganizationId] ASC, [FactAsOfDate] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned_SchoolYearType]
ON [extension].[EducationOrganizationCourseTranscriptFactAggregatedNumericGradeEarned]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationCourseTranscriptFactStudentsEnrolled_EducationOrganizationCourseTranscriptFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[EducationOrganizationCourseTranscriptFact] ([EducationOrganizationId], [FactAsOfDate], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationCourseTranscriptFactStudentsEnrolled_EducationOrganizationCourseTranscriptFact]
ON [extension].[EducationOrganizationCourseTranscriptFactStudentsEnrolled]([EducationOrganizationId] ASC, [FactAsOfDate] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationCourseTranscriptFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationCourseTranscriptFactStudentsEnrolled_SchoolYearType]
ON [extension].[EducationOrganizationCourseTranscriptFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationCourseTranscriptFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationCourseTranscriptFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationCourseTranscriptFactStudentsEnrolled_ValueType]
ON [extension].[EducationOrganizationCourseTranscriptFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationFacts] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationFacts_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationFacts_EducationOrganization]
ON [extension].[EducationOrganizationFacts]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationFacts] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationFacts_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationFacts_SchoolYearType]
ON [extension].[EducationOrganizationFacts]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationFactsAggregatedSalary] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationFactsAggregatedSalary_EducationOrganizationFacts] FOREIGN KEY ([EducationOrganizationId], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[EducationOrganizationFacts] ([EducationOrganizationId], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationFactsAggregatedSalary_EducationOrganizationFacts]
ON [extension].[EducationOrganizationFactsAggregatedSalary]([EducationOrganizationId] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationFactsVacancies] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationFactsVacancies_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationFactsVacancies_AcademicSubjectDescriptor]
ON [extension].[EducationOrganizationFactsVacancies]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationFactsVacancies] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationFactsVacancies_EducationOrganizationFacts] FOREIGN KEY ([EducationOrganizationId], [FactsAsOfDate], [SchoolYear])
REFERENCES [extension].[EducationOrganizationFacts] ([EducationOrganizationId], [FactsAsOfDate], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationFactsVacancies_EducationOrganizationFacts]
ON [extension].[EducationOrganizationFactsVacancies]([EducationOrganizationId] ASC, [FactsAsOfDate] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationFactsVacancies] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationFactsVacancies_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationFactsVacancies_ValueType]
ON [extension].[EducationOrganizationFactsVacancies]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAcademicRecordFact_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAcademicRecordFact_EducationOrganization]
ON [extension].[EducationOrganizationStudentAcademicRecordFact]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_EducationOrganizationStudentAcademicRecor] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentAcademicRecordFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_EducationOrganizationStudentAcademicRecor]
ON [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_SchoolYearType]
ON [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedCumulativeGradePointAverage]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage_EducationOrganizationStudentAcademicRecordFa] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentAcademicRecordFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage_EducationOrganizationStudentAcademicRecordFa]
ON [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage_SchoolYearType]
ON [extension].[EducationOrganizationStudentAcademicRecordFactAggregatedSessionGradePointAverage]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAcademicRecordFactStudentsEnrolled_EducationOrganizationStudentAcademicRecordFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentAcademicRecordFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAcademicRecordFactStudentsEnrolled_EducationOrganizationStudentAcademicRecordFact]
ON [extension].[EducationOrganizationStudentAcademicRecordFactStudentsEnrolled]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAcademicRecordFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAcademicRecordFactStudentsEnrolled_SchoolYearType]
ON [extension].[EducationOrganizationStudentAcademicRecordFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAcademicRecordFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAcademicRecordFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAcademicRecordFactStudentsEnrolled_ValueType]
ON [extension].[EducationOrganizationStudentAcademicRecordFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFact_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFact_AcademicSubjectDescriptor]
ON [extension].[EducationOrganizationStudentAssessmentFact]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFact_AssessmentCategoryDescriptor] FOREIGN KEY ([AssessmentCategoryDescriptorId])
REFERENCES [edfi].[AssessmentCategoryDescriptor] ([AssessmentCategoryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFact_AssessmentCategoryDescriptor]
ON [extension].[EducationOrganizationStudentAssessmentFact]([AssessmentCategoryDescriptorId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFact_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFact_EducationOrganization]
ON [extension].[EducationOrganizationStudentAssessmentFact]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFact_GradeLevelDescriptor] FOREIGN KEY ([GradeLevelDescriptorId])
REFERENCES [edfi].[GradeLevelDescriptor] ([GradeLevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFact_GradeLevelDescriptor]
ON [extension].[EducationOrganizationStudentAssessmentFact]([GradeLevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFact_SchoolYearType] FOREIGN KEY ([SchoolYearTakenSchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFact_SchoolYearType]
ON [extension].[EducationOrganizationStudentAssessmentFact]([SchoolYearTakenSchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFact_TermDescriptor] FOREIGN KEY ([TermDescriptorId])
REFERENCES [edfi].[TermDescriptor] ([TermDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFact_TermDescriptor]
ON [extension].[EducationOrganizationStudentAssessmentFact]([TermDescriptorId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel_EducationOrganizationStudentAssessmentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
REFERENCES [extension].[EducationOrganizationStudentAssessmentFact] ([EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel_EducationOrganizationStudentAssessmentFact]
ON [extension].[EducationOrganizationStudentAssessmentFactAggregatedPerformanceLevel]([EducationOrganizationId] ASC, [FactAsOfDate] ASC, [SchoolYearTakenSchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFactAggregatedScoreResult] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFactAggregatedScoreResult_AssessmentReportingMethodType] FOREIGN KEY ([AssessmentReportingMethodTypeId])
REFERENCES [edfi].[AssessmentReportingMethodType] ([AssessmentReportingMethodTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFactAggregatedScoreResult_AssessmentReportingMethodType]
ON [extension].[EducationOrganizationStudentAssessmentFactAggregatedScoreResult]([AssessmentReportingMethodTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFactAggregatedScoreResult] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFactAggregatedScoreResult_EducationOrganizationStudentAssessmentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
REFERENCES [extension].[EducationOrganizationStudentAssessmentFact] ([EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFactAggregatedScoreResult_EducationOrganizationStudentAssessmentFact]
ON [extension].[EducationOrganizationStudentAssessmentFactAggregatedScoreResult]([EducationOrganizationId] ASC, [FactAsOfDate] ASC, [SchoolYearTakenSchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFactAggregatedScoreResult] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFactAggregatedScoreResult_ResultDatatypeType] FOREIGN KEY ([AverageScoreResultDataTypeResultDatatypeTypeId])
REFERENCES [edfi].[ResultDatatypeType] ([ResultDatatypeTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFactAggregatedScoreResult_ResultDatatypeType]
ON [extension].[EducationOrganizationStudentAssessmentFactAggregatedScoreResult]([AverageScoreResultDataTypeResultDatatypeTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFactStudentsEnrolled_EducationOrganizationStudentAssessmentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
REFERENCES [extension].[EducationOrganizationStudentAssessmentFact] ([EducationOrganizationId], [FactAsOfDate], [SchoolYearTakenSchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFactStudentsEnrolled_EducationOrganizationStudentAssessmentFact]
ON [extension].[EducationOrganizationStudentAssessmentFactStudentsEnrolled]([EducationOrganizationId] ASC, [FactAsOfDate] ASC, [SchoolYearTakenSchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFactStudentsEnrolled_SchoolYearType]
ON [extension].[EducationOrganizationStudentAssessmentFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentAssessmentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentAssessmentFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentAssessmentFactStudentsEnrolled_ValueType]
ON [extension].[EducationOrganizationStudentAssessmentFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFact_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFact_EducationOrganization]
ON [extension].[EducationOrganizationStudentFact]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedELLEnrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedELLEnrollment_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedELLEnrollment_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedELLEnrollment]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedELLEnrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedELLEnrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedELLEnrollment_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedELLEnrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedELLEnrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedELLEnrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedELLEnrollment_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedELLEnrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedESLEnrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedESLEnrollment_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedESLEnrollment_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedESLEnrollment]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedESLEnrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedESLEnrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedESLEnrollment_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedESLEnrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedESLEnrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedESLEnrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedESLEnrollment_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedESLEnrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedGender_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedGender_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedGender]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedGender_GenderType] FOREIGN KEY ([GenderTypeId])
REFERENCES [extension].[GenderType] ([GenderTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedGender_GenderType]
ON [extension].[EducationOrganizationStudentFactAggregatedGender]([GenderTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedGender_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedGender_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedGender]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedGender_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedGender_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedGender]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedHispanicLatinoEthnicity]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedLanguage_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedLanguage_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedLanguage]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedLanguage_LanguageDescriptor] FOREIGN KEY ([LanguageDescriptorId])
REFERENCES [edfi].[LanguageDescriptor] ([LanguageDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedLanguage_LanguageDescriptor]
ON [extension].[EducationOrganizationStudentFactAggregatedLanguage]([LanguageDescriptorId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedLanguage_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedLanguage_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedLanguage]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedLanguage_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedLanguage_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedLanguage]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedRace_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedRace_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedRace]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedRace_RaceType] FOREIGN KEY ([RaceTypeId])
REFERENCES [edfi].[RaceType] ([RaceTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedRace_RaceType]
ON [extension].[EducationOrganizationStudentFactAggregatedRace]([RaceTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedRace_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedRace_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedRace]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedRace_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedRace_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedRace]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility_SchoolFoodServicesEligibilityDescriptor] FOREIGN KEY ([SchoolFoodServicesEligibilityDescriptorId])
REFERENCES [edfi].[SchoolFoodServicesEligibilityDescriptor] ([SchoolFoodServicesEligibilityDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility_SchoolFoodServicesEligibilityDescriptor]
ON [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility]([SchoolFoodServicesEligibilityDescriptorId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedSchoolFoodServicesEligibility]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSection504Enrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSection504Enrollment_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSection504Enrollment_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedSection504Enrollment]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSection504Enrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSection504Enrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSection504Enrollment_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedSection504Enrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSection504Enrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSection504Enrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSection504Enrollment_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedSection504Enrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSex_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSex_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedSex]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSex_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSex_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedSex]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSex_SexType] FOREIGN KEY ([SexTypeId])
REFERENCES [edfi].[SexType] ([SexTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSex_SexType]
ON [extension].[EducationOrganizationStudentFactAggregatedSex]([SexTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSex_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSex_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedSex]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSPED] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSPED_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSPED_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedSPED]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSPED] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSPED_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSPED_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedSPED]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedSPED] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedSPED_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedSPED_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedSPED]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedTitleIEnrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedTitleIEnrollment_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedTitleIEnrollment_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactAggregatedTitleIEnrollment]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedTitleIEnrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedTitleIEnrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedTitleIEnrollment_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactAggregatedTitleIEnrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactAggregatedTitleIEnrollment] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactAggregatedTitleIEnrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactAggregatedTitleIEnrollment_ValueType]
ON [extension].[EducationOrganizationStudentFactAggregatedTitleIEnrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactDisabilityByType_DisabilityDescriptor] FOREIGN KEY ([DisabilityDescriptorId])
REFERENCES [edfi].[DisabilityDescriptor] ([DisabilityDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactDisabilityByType_DisabilityDescriptor]
ON [extension].[EducationOrganizationStudentFactDisabilityByType]([DisabilityDescriptorId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactDisabilityByType_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactDisabilityByType_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactDisabilityByType]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactDisabilityByType_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactDisabilityByType_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactDisabilityByType]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactDisabilityByType_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactDisabilityByType_ValueType]
ON [extension].[EducationOrganizationStudentFactDisabilityByType]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactStudentsEnrolled_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactStudentsEnrolled_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactStudentsEnrolled]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactStudentsEnrolled_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactStudentsEnrolled_ValueType]
ON [extension].[EducationOrganizationStudentFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactTotalStudentsDisabled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactTotalStudentsDisabled_EducationOrganizationStudentFact] FOREIGN KEY ([EducationOrganizationId], [FactAsOfDate])
REFERENCES [extension].[EducationOrganizationStudentFact] ([EducationOrganizationId], [FactAsOfDate])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactTotalStudentsDisabled_EducationOrganizationStudentFact]
ON [extension].[EducationOrganizationStudentFactTotalStudentsDisabled]([EducationOrganizationId] ASC, [FactAsOfDate] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactTotalStudentsDisabled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactTotalStudentsDisabled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactTotalStudentsDisabled_SchoolYearType]
ON [extension].[EducationOrganizationStudentFactTotalStudentsDisabled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationStudentFactTotalStudentsDisabled] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationStudentFactTotalStudentsDisabled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationStudentFactTotalStudentsDisabled_ValueType]
ON [extension].[EducationOrganizationStudentFactTotalStudentsDisabled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationSurveyResponseFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationSurveyResponseFact_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationSurveyResponseFact_EducationOrganization]
ON [extension].[EducationOrganizationSurveyResponseFact]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationSurveyResponseFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationSurveyResponseFact_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationSurveyResponseFact_SchoolYearType]
ON [extension].[EducationOrganizationSurveyResponseFact]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationSurveyResponseFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationSurveyResponseFact_Survey] FOREIGN KEY ([SurveyIdentifier])
REFERENCES [extension].[Survey] ([SurveyIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationSurveyResponseFact_Survey]
ON [extension].[EducationOrganizationSurveyResponseFact]([SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationSurveySectionResponseRatingFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationSurveySectionResponseRatingFact_EducationOrganizationSurveyResponseFact] FOREIGN KEY ([EducationOrganizationId], [FactsAsOfDate], [SurveyIdentifier])
REFERENCES [extension].[EducationOrganizationSurveyResponseFact] ([EducationOrganizationId], [FactsAsOfDate], [SurveyIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationSurveySectionResponseRatingFact_EducationOrganizationSurveyResponseFact]
ON [extension].[EducationOrganizationSurveySectionResponseRatingFact]([EducationOrganizationId] ASC, [FactsAsOfDate] ASC, [SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationSurveySectionResponseRatingFact] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationSurveySectionResponseRatingFact_SurveySection] FOREIGN KEY ([SurveyIdentifier], [SurveySectionTitle])
REFERENCES [extension].[SurveySection] ([SurveyIdentifier], [SurveySectionTitle])


GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationSurveySectionResponseRatingFact_SurveySection]
ON [extension].[EducationOrganizationSurveySectionResponseRatingFact]([SurveyIdentifier] ASC, [SurveySectionTitle] ASC)
GO

ALTER TABLE [extension].[EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse] WITH CHECK ADD CONSTRAINT [FK_EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse_EducationOrganizationSurveySectionResponseRatin] FOREIGN KEY ([SurveyIdentifier], [SurveySectionTitle])
REFERENCES [extension].[EducationOrganizationSurveySectionResponseRatingFact] ([SurveyIdentifier], [SurveySectionTitle])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse_EducationOrganizationSurveySectionResponseRatin]
ON [extension].[EducationOrganizationSurveySectionResponseRatingFactAggregatedNumericResponse]([SurveyIdentifier] ASC, [SurveySectionTitle] ASC)
GO

ALTER TABLE [extension].[EnglishLanguageExamDescriptor] WITH CHECK ADD CONSTRAINT [FK_EnglishLanguageExamDescriptor_Descriptor] FOREIGN KEY ([EnglishLanguageExamDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_EnglishLanguageExamDescriptor_Descriptor]
ON [extension].[EnglishLanguageExamDescriptor]([EnglishLanguageExamDescriptorId] ASC)
GO

ALTER TABLE [extension].[EnglishLanguageExamDescriptor] WITH CHECK ADD CONSTRAINT [FK_EnglishLanguageExamDescriptor_EnglishLanguageExamType] FOREIGN KEY ([EnglishLanguageExamTypeId])
REFERENCES [extension].[EnglishLanguageExamType] ([EnglishLanguageExamTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_EnglishLanguageExamDescriptor_EnglishLanguageExamType]
ON [extension].[EnglishLanguageExamDescriptor]([EnglishLanguageExamTypeId] ASC)
GO

ALTER TABLE [extension].[FieldworkTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_FieldworkTypeDescriptor_Descriptor] FOREIGN KEY ([FieldworkTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_FieldworkTypeDescriptor_Descriptor]
ON [extension].[FieldworkTypeDescriptor]([FieldworkTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[FieldworkTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_FieldworkTypeDescriptor_FieldworkType] FOREIGN KEY ([FieldworkTypeId])
REFERENCES [extension].[FieldworkType] ([FieldworkTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_FieldworkTypeDescriptor_FieldworkType]
ON [extension].[FieldworkTypeDescriptor]([FieldworkTypeId] ASC)
GO

ALTER TABLE [extension].[LevelOfDegreeAwardedDescriptor] WITH CHECK ADD CONSTRAINT [FK_LevelOfDegreeAwardedDescriptor_Descriptor] FOREIGN KEY ([LevelOfDegreeAwardedDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_LevelOfDegreeAwardedDescriptor_Descriptor]
ON [extension].[LevelOfDegreeAwardedDescriptor]([LevelOfDegreeAwardedDescriptorId] ASC)
GO

ALTER TABLE [extension].[LevelOfDegreeAwardedDescriptor] WITH CHECK ADD CONSTRAINT [FK_LevelOfDegreeAwardedDescriptor_LevelOfDegreeAwardedType] FOREIGN KEY ([LevelOfDegreeAwardedTypeId])
REFERENCES [extension].[LevelOfDegreeAwardedType] ([LevelOfDegreeAwardedTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_LevelOfDegreeAwardedDescriptor_LevelOfDegreeAwardedType]
ON [extension].[LevelOfDegreeAwardedDescriptor]([LevelOfDegreeAwardedTypeId] ASC)
GO

ALTER TABLE [extension].[LevelTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_LevelTypeDescriptor_Descriptor] FOREIGN KEY ([LevelTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_LevelTypeDescriptor_Descriptor]
ON [extension].[LevelTypeDescriptor]([LevelTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[LevelTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_LevelTypeDescriptor_LevelType] FOREIGN KEY ([LevelTypeId])
REFERENCES [extension].[LevelType] ([LevelTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_LevelTypeDescriptor_LevelType]
ON [extension].[LevelTypeDescriptor]([LevelTypeId] ASC)
GO

ALTER TABLE [extension].[Observation] WITH CHECK ADD CONSTRAINT [FK_Observation_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_Observation_AcademicSubjectDescriptor]
ON [extension].[Observation]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[Observation] WITH CHECK ADD CONSTRAINT [FK_Observation_ObservationTypeDescriptor] FOREIGN KEY ([ObservationTypeDescriptorId])
REFERENCES [extension].[ObservationTypeDescriptor] ([ObservationTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_Observation_ObservationTypeDescriptor]
ON [extension].[Observation]([ObservationTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[Observation] WITH CHECK ADD CONSTRAINT [FK_Observation_Rubric] FOREIGN KEY ([EducationOrganizationId], [RubricTitle], [RubricTypeDescriptorId])
REFERENCES [extension].[Rubric] ([EducationOrganizationId], [RubricTitle], [RubricTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_Observation_Rubric]
ON [extension].[Observation]([EducationOrganizationId] ASC, [RubricTitle] ASC, [RubricTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[Observation] WITH CHECK ADD CONSTRAINT [FK_Observation_TermDescriptor] FOREIGN KEY ([TermDescriptorId])
REFERENCES [edfi].[TermDescriptor] ([TermDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_Observation_TermDescriptor]
ON [extension].[Observation]([TermDescriptorId] ASC)
GO

ALTER TABLE [extension].[ObservationFact] WITH CHECK ADD CONSTRAINT [FK_ObservationFact_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationFact_AcademicSubjectDescriptor]
ON [extension].[ObservationFact]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[ObservationFact] WITH CHECK ADD CONSTRAINT [FK_ObservationFact_ObservationTypeDescriptor] FOREIGN KEY ([ObservationTypeDescriptorId])
REFERENCES [extension].[ObservationTypeDescriptor] ([ObservationTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationFact_ObservationTypeDescriptor]
ON [extension].[ObservationFact]([ObservationTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ObservationFact] WITH CHECK ADD CONSTRAINT [FK_ObservationFact_Rubric] FOREIGN KEY ([EducationOrganizationId], [RubricTitle], [RubricTypeDescriptorId])
REFERENCES [extension].[Rubric] ([EducationOrganizationId], [RubricTitle], [RubricTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationFact_Rubric]
ON [extension].[ObservationFact]([EducationOrganizationId] ASC, [RubricTitle] ASC, [RubricTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ObservationFact] WITH CHECK ADD CONSTRAINT [FK_ObservationFact_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationFact_SchoolYearType]
ON [extension].[ObservationFact]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[ObservationFactGradeLevel] WITH CHECK ADD CONSTRAINT [FK_ObservationFactGradeLevel_GradeLevelDescriptor] FOREIGN KEY ([GradeLevelDescriptorId])
REFERENCES [edfi].[GradeLevelDescriptor] ([GradeLevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationFactGradeLevel_GradeLevelDescriptor]
ON [extension].[ObservationFactGradeLevel]([GradeLevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[ObservationFactGradeLevel] WITH CHECK ADD CONSTRAINT [FK_ObservationFactGradeLevel_ObservationFact] FOREIGN KEY ([EducationOrganizationId], [FactsAsOfDate], [RubricTitle], [RubricTypeDescriptorId], [SchoolYear])
REFERENCES [extension].[ObservationFact] ([EducationOrganizationId], [FactsAsOfDate], [RubricTitle], [RubricTypeDescriptorId], [SchoolYear])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ObservationFactGradeLevel_ObservationFact]
ON [extension].[ObservationFactGradeLevel]([EducationOrganizationId] ASC, [FactsAsOfDate] ASC, [RubricTitle] ASC, [RubricTypeDescriptorId] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[ObservationGradeLevel] WITH CHECK ADD CONSTRAINT [FK_ObservationGradeLevel_GradeLevelDescriptor] FOREIGN KEY ([GradeLevelDescriptorId])
REFERENCES [edfi].[GradeLevelDescriptor] ([GradeLevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationGradeLevel_GradeLevelDescriptor]
ON [extension].[ObservationGradeLevel]([GradeLevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[ObservationGradeLevel] WITH CHECK ADD CONSTRAINT [FK_ObservationGradeLevel_Observation] FOREIGN KEY ([ObservationIdentifier])
REFERENCES [extension].[Observation] ([ObservationIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ObservationGradeLevel_Observation]
ON [extension].[ObservationGradeLevel]([ObservationIdentifier] ASC)
GO

ALTER TABLE [extension].[ObservationObservee] WITH CHECK ADD CONSTRAINT [FK_ObservationObservee_Observation] FOREIGN KEY ([ObservationIdentifier])
REFERENCES [extension].[Observation] ([ObservationIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ObservationObservee_Observation]
ON [extension].[ObservationObservee]([ObservationIdentifier] ASC)
GO

ALTER TABLE [extension].[ObservationObservee] WITH CHECK ADD CONSTRAINT [FK_ObservationObservee_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationObservee_Prospect]
ON [extension].[ObservationObservee]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[ObservationObservee] WITH CHECK ADD CONSTRAINT [FK_ObservationObservee_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationObservee_Staff]
ON [extension].[ObservationObservee]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[ObservationObservee] WITH CHECK ADD CONSTRAINT [FK_ObservationObservee_TeacherCandidate] FOREIGN KEY ([TeacherCandidateUniqueId])
REFERENCES [extension].[TeacherCandidate] ([TeacherCandidateUniqueId])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationObservee_TeacherCandidate]
ON [extension].[ObservationObservee]([TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[ObservationObserver] WITH CHECK ADD CONSTRAINT [FK_ObservationObserver_Observation] FOREIGN KEY ([ObservationIdentifier])
REFERENCES [extension].[Observation] ([ObservationIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ObservationObserver_Observation]
ON [extension].[ObservationObserver]([ObservationIdentifier] ASC)
GO

ALTER TABLE [extension].[ObservationObserver] WITH CHECK ADD CONSTRAINT [FK_ObservationObserver_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationObserver_Staff]
ON [extension].[ObservationObserver]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[ObservationObserverReceivedTraining] WITH CHECK ADD CONSTRAINT [FK_ObservationObserverReceivedTraining_ObservationObserver] FOREIGN KEY ([ObservationIdentifier])
REFERENCES [extension].[ObservationObserver] ([ObservationIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ObservationObserverReceivedTraining_ObservationObserver]
ON [extension].[ObservationObserverReceivedTraining]([ObservationIdentifier] ASC)
GO

ALTER TABLE [extension].[ObservationProgramGateway] WITH CHECK ADD CONSTRAINT [FK_ObservationProgramGateway_Observation] FOREIGN KEY ([ObservationIdentifier])
REFERENCES [extension].[Observation] ([ObservationIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ObservationProgramGateway_Observation]
ON [extension].[ObservationProgramGateway]([ObservationIdentifier] ASC)
GO

ALTER TABLE [extension].[ObservationProgramGateway] WITH CHECK ADD CONSTRAINT [FK_ObservationProgramGateway_ProgramGatewayDescriptor] FOREIGN KEY ([ProgramGatewayDescriptorId])
REFERENCES [extension].[ProgramGatewayDescriptor] ([ProgramGatewayDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationProgramGateway_ProgramGatewayDescriptor]
ON [extension].[ObservationProgramGateway]([ProgramGatewayDescriptorId] ASC)
GO

ALTER TABLE [extension].[ObservationTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_ObservationTypeDescriptor_Descriptor] FOREIGN KEY ([ObservationTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ObservationTypeDescriptor_Descriptor]
ON [extension].[ObservationTypeDescriptor]([ObservationTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ObservationTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_ObservationTypeDescriptor_ObservationType] FOREIGN KEY ([ObservationTypeId])
REFERENCES [extension].[ObservationType] ([ObservationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ObservationTypeDescriptor_ObservationType]
ON [extension].[ObservationTypeDescriptor]([ObservationTypeId] ASC)
GO

ALTER TABLE [extension].[PreviousCareerDescriptor] WITH CHECK ADD CONSTRAINT [FK_PreviousCareerDescriptor_Descriptor] FOREIGN KEY ([PreviousCareerDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_PreviousCareerDescriptor_Descriptor]
ON [extension].[PreviousCareerDescriptor]([PreviousCareerDescriptorId] ASC)
GO

ALTER TABLE [extension].[PreviousCareerDescriptor] WITH CHECK ADD CONSTRAINT [FK_PreviousCareerDescriptor_PreviousCareerType] FOREIGN KEY ([PreviousCareerTypeId])
REFERENCES [extension].[PreviousCareerType] ([PreviousCareerTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_PreviousCareerDescriptor_PreviousCareerType]
ON [extension].[PreviousCareerDescriptor]([PreviousCareerTypeId] ASC)
GO

ALTER TABLE [extension].[ProfessionalDevelopmentOfferedByDescriptor] WITH CHECK ADD CONSTRAINT [FK_ProfessionalDevelopmentOfferedByDescriptor_Descriptor] FOREIGN KEY ([ProfessionalDevelopmentOfferedByDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProfessionalDevelopmentOfferedByDescriptor_Descriptor]
ON [extension].[ProfessionalDevelopmentOfferedByDescriptor]([ProfessionalDevelopmentOfferedByDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProfessionalDevelopmentOfferedByDescriptor] WITH CHECK ADD CONSTRAINT [FK_ProfessionalDevelopmentOfferedByDescriptor_ProfessionalDevelopmentOfferedByType] FOREIGN KEY ([ProfessionalDevelopmentOfferedByTypeId])
REFERENCES [extension].[ProfessionalDevelopmentOfferedByType] ([ProfessionalDevelopmentOfferedByTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ProfessionalDevelopmentOfferedByDescriptor_ProfessionalDevelopmentOfferedByType]
ON [extension].[ProfessionalDevelopmentOfferedByDescriptor]([ProfessionalDevelopmentOfferedByTypeId] ASC)
GO

ALTER TABLE [extension].[ProgramGatewayDescriptor] WITH CHECK ADD CONSTRAINT [FK_ProgramGatewayDescriptor_Descriptor] FOREIGN KEY ([ProgramGatewayDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProgramGatewayDescriptor_Descriptor]
ON [extension].[ProgramGatewayDescriptor]([ProgramGatewayDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProgramGatewayDescriptor] WITH CHECK ADD CONSTRAINT [FK_ProgramGatewayDescriptor_ProgramGatewayType] FOREIGN KEY ([ProgramGatewayTypeId])
REFERENCES [extension].[ProgramGatewayType] ([ProgramGatewayTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ProgramGatewayDescriptor_ProgramGatewayType]
ON [extension].[ProgramGatewayDescriptor]([ProgramGatewayTypeId] ASC)
GO

ALTER TABLE [extension].[Prospect] WITH CHECK ADD CONSTRAINT [FK_Prospect_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_Prospect_EducationOrganization]
ON [extension].[Prospect]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[Prospect] WITH CHECK ADD CONSTRAINT [FK_Prospect_GenderType] FOREIGN KEY ([GenderTypeId])
REFERENCES [extension].[GenderType] ([GenderTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_Prospect_GenderType]
ON [extension].[Prospect]([GenderTypeId] ASC)
GO

ALTER TABLE [extension].[Prospect] WITH CHECK ADD CONSTRAINT [FK_Prospect_SexType] FOREIGN KEY ([SexTypeId])
REFERENCES [edfi].[SexType] ([SexTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_Prospect_SexType]
ON [extension].[Prospect]([SexTypeId] ASC)
GO

ALTER TABLE [extension].[ProspectCredential] WITH CHECK ADD CONSTRAINT [FK_ProspectCredential_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredential_Prospect]
ON [extension].[ProspectCredential]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtension] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtension_ProspectCredential] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [ProspectIdentifier], [TeachingCredentialDescriptorId])
REFERENCES [extension].[ProspectCredential] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [ProspectIdentifier], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtension_ProspectCredential]
ON [extension].[ProspectCredentialExtension]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [EducationOrganizationId] ASC, [LevelDescriptorId] ASC, [ProspectIdentifier] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtension] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtension_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtension_ValueType]
ON [extension].[ProspectCredentialExtension]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionBoardCertification] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionBoardCertification_BoardCertificationTypeDescriptor] FOREIGN KEY ([BoardCertificationTypeDescriptorId])
REFERENCES [extension].[BoardCertificationTypeDescriptor] ([BoardCertificationTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionBoardCertification_BoardCertificationTypeDescriptor]
ON [extension].[ProspectCredentialExtensionBoardCertification]([BoardCertificationTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionBoardCertification] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionBoardCertification_ProspectCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [ProspectIdentifier], [TeachingCredentialDescriptorId])
REFERENCES [extension].[ProspectCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [ProspectIdentifier], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionBoardCertification_ProspectCredentialExtension]
ON [extension].[ProspectCredentialExtensionBoardCertification]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [EducationOrganizationId] ASC, [LevelDescriptorId] ASC, [ProspectIdentifier] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionCertificationExam] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionCertificationExam_CertificationExamTypeDescriptor] FOREIGN KEY ([CertificationExamTypeDescriptorId])
REFERENCES [extension].[CertificationExamTypeDescriptor] ([CertificationExamTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionCertificationExam_CertificationExamTypeDescriptor]
ON [extension].[ProspectCredentialExtensionCertificationExam]([CertificationExamTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionCertificationExam] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionCertificationExam_ProspectCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [ProspectIdentifier], [TeachingCredentialDescriptorId])
REFERENCES [extension].[ProspectCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [ProspectIdentifier], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionCertificationExam_ProspectCredentialExtension]
ON [extension].[ProspectCredentialExtensionCertificationExam]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [EducationOrganizationId] ASC, [LevelDescriptorId] ASC, [ProspectIdentifier] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionRecommendation_CredentialFieldDescriptor] FOREIGN KEY ([CredentialFieldDescriptorId])
REFERENCES [edfi].[CredentialFieldDescriptor] ([CredentialFieldDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionRecommendation_CredentialFieldDescriptor]
ON [extension].[ProspectCredentialExtensionRecommendation]([CredentialFieldDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionRecommendation_LevelDescriptor] FOREIGN KEY ([LevelDescriptorId])
REFERENCES [edfi].[LevelDescriptor] ([LevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionRecommendation_LevelDescriptor]
ON [extension].[ProspectCredentialExtensionRecommendation]([LevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionRecommendation_ProspectCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [ProspectIdentifier], [TeachingCredentialDescriptorId])
REFERENCES [extension].[ProspectCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [ProspectIdentifier], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionRecommendation_ProspectCredentialExtension]
ON [extension].[ProspectCredentialExtensionRecommendation]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [EducationOrganizationId] ASC, [LevelDescriptorId] ASC, [ProspectIdentifier] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionRecommendation_TeachingCredentialDescriptor] FOREIGN KEY ([TeachingCredentialDescriptorId])
REFERENCES [edfi].[TeachingCredentialDescriptor] ([TeachingCredentialDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionRecommendation_TeachingCredentialDescriptor]
ON [extension].[ProspectCredentialExtensionRecommendation]([TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionRecommendingInstitution_CountryDescriptor] FOREIGN KEY ([RecommendingInstitutionCountryDescriptorId])
REFERENCES [edfi].[CountryDescriptor] ([CountryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionRecommendingInstitution_CountryDescriptor]
ON [extension].[ProspectCredentialExtensionRecommendingInstitution]([RecommendingInstitutionCountryDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionRecommendingInstitution_ProspectCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [ProspectIdentifier], [TeachingCredentialDescriptorId])
REFERENCES [extension].[ProspectCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [EducationOrganizationId], [LevelDescriptorId], [ProspectIdentifier], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionRecommendingInstitution_ProspectCredentialExtension]
ON [extension].[ProspectCredentialExtensionRecommendingInstitution]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [EducationOrganizationId] ASC, [LevelDescriptorId] ASC, [ProspectIdentifier] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_ProspectCredentialExtensionRecommendingInstitution_StateAbbreviationType] FOREIGN KEY ([RecommendingInstutionStateAbbreviationTypeId])
REFERENCES [edfi].[StateAbbreviationType] ([StateAbbreviationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCredentialExtensionRecommendingInstitution_StateAbbreviationType]
ON [extension].[ProspectCredentialExtensionRecommendingInstitution]([RecommendingInstutionStateAbbreviationTypeId] ASC)
GO

ALTER TABLE [extension].[ProspectCurrentPosition] WITH CHECK ADD CONSTRAINT [FK_ProspectCurrentPosition_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCurrentPosition_AcademicSubjectDescriptor]
ON [extension].[ProspectCurrentPosition]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCurrentPosition] WITH CHECK ADD CONSTRAINT [FK_ProspectCurrentPosition_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectCurrentPosition_Prospect]
ON [extension].[ProspectCurrentPosition]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[ProspectCurrentPositionGradeLevel] WITH CHECK ADD CONSTRAINT [FK_ProspectCurrentPositionGradeLevel_GradeLevelDescriptor] FOREIGN KEY ([GradeLevelDescriptorId])
REFERENCES [edfi].[GradeLevelDescriptor] ([GradeLevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectCurrentPositionGradeLevel_GradeLevelDescriptor]
ON [extension].[ProspectCurrentPositionGradeLevel]([GradeLevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectCurrentPositionGradeLevel] WITH CHECK ADD CONSTRAINT [FK_ProspectCurrentPositionGradeLevel_ProspectCurrentPosition] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[ProspectCurrentPosition] ([EducationOrganizationId], [ProspectIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectCurrentPositionGradeLevel_ProspectCurrentPosition]
ON [extension].[ProspectCurrentPositionGradeLevel]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[ProspectDisability] WITH CHECK ADD CONSTRAINT [FK_ProspectDisability_DisabilityDescriptor] FOREIGN KEY ([DisabilityDescriptorId])
REFERENCES [edfi].[DisabilityDescriptor] ([DisabilityDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectDisability_DisabilityDescriptor]
ON [extension].[ProspectDisability]([DisabilityDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectDisability] WITH CHECK ADD CONSTRAINT [FK_ProspectDisability_DisabilityDeterminationSourceType] FOREIGN KEY ([DisabilityDeterminationSourceTypeId])
REFERENCES [edfi].[DisabilityDeterminationSourceType] ([DisabilityDeterminationSourceTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectDisability_DisabilityDeterminationSourceType]
ON [extension].[ProspectDisability]([DisabilityDeterminationSourceTypeId] ASC)
GO

ALTER TABLE [extension].[ProspectDisability] WITH CHECK ADD CONSTRAINT [FK_ProspectDisability_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectDisability_Prospect]
ON [extension].[ProspectDisability]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[ProspectIdentificationDocument] WITH CHECK ADD CONSTRAINT [FK_ProspectIdentificationDocument_CountryDescriptor] FOREIGN KEY ([IssuerCountryDescriptorId])
REFERENCES [edfi].[CountryDescriptor] ([CountryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectIdentificationDocument_CountryDescriptor]
ON [extension].[ProspectIdentificationDocument]([IssuerCountryDescriptorId] ASC)
GO

ALTER TABLE [extension].[ProspectIdentificationDocument] WITH CHECK ADD CONSTRAINT [FK_ProspectIdentificationDocument_IdentificationDocumentUseType] FOREIGN KEY ([IdentificationDocumentUseTypeId])
REFERENCES [edfi].[IdentificationDocumentUseType] ([IdentificationDocumentUseTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectIdentificationDocument_IdentificationDocumentUseType]
ON [extension].[ProspectIdentificationDocument]([IdentificationDocumentUseTypeId] ASC)
GO

ALTER TABLE [extension].[ProspectIdentificationDocument] WITH CHECK ADD CONSTRAINT [FK_ProspectIdentificationDocument_PersonalInformationVerificationType] FOREIGN KEY ([PersonalInformationVerificationTypeId])
REFERENCES [edfi].[PersonalInformationVerificationType] ([PersonalInformationVerificationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectIdentificationDocument_PersonalInformationVerificationType]
ON [extension].[ProspectIdentificationDocument]([PersonalInformationVerificationTypeId] ASC)
GO

ALTER TABLE [extension].[ProspectIdentificationDocument] WITH CHECK ADD CONSTRAINT [FK_ProspectIdentificationDocument_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectIdentificationDocument_Prospect]
ON [extension].[ProspectIdentificationDocument]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[ProspectQualifications] WITH CHECK ADD CONSTRAINT [FK_ProspectQualifications_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectQualifications_Prospect]
ON [extension].[ProspectQualifications]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[ProspectRace] WITH CHECK ADD CONSTRAINT [FK_ProspectRace_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectRace_Prospect]
ON [extension].[ProspectRace]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[ProspectRace] WITH CHECK ADD CONSTRAINT [FK_ProspectRace_RaceType] FOREIGN KEY ([RaceTypeId])
REFERENCES [edfi].[RaceType] ([RaceTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectRace_RaceType]
ON [extension].[ProspectRace]([RaceTypeId] ASC)
GO

ALTER TABLE [extension].[ProspectRecruitmentEvent] WITH CHECK ADD CONSTRAINT [FK_ProspectRecruitmentEvent_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectRecruitmentEvent_Prospect]
ON [extension].[ProspectRecruitmentEvent]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[ProspectRecruitmentEvent] WITH CHECK ADD CONSTRAINT [FK_ProspectRecruitmentEvent_RecruitmentEvent] FOREIGN KEY ([EventDate], [EventTitle])
REFERENCES [extension].[RecruitmentEvent] ([EventDate], [EventTitle])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectRecruitmentEvent_RecruitmentEvent]
ON [extension].[ProspectRecruitmentEvent]([EventDate] ASC, [EventTitle] ASC)
GO

ALTER TABLE [extension].[ProspectTelephone] WITH CHECK ADD CONSTRAINT [FK_ProspectTelephone_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectTelephone_Prospect]
ON [extension].[ProspectTelephone]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[ProspectTelephone] WITH CHECK ADD CONSTRAINT [FK_ProspectTelephone_TelephoneNumberType] FOREIGN KEY ([TelephoneNumberTypeId])
REFERENCES [edfi].[TelephoneNumberType] ([TelephoneNumberTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ProspectTelephone_TelephoneNumberType]
ON [extension].[ProspectTelephone]([TelephoneNumberTypeId] ASC)
GO

ALTER TABLE [extension].[ProspectTouchpoint] WITH CHECK ADD CONSTRAINT [FK_ProspectTouchpoint_Prospect] FOREIGN KEY ([EducationOrganizationId], [ProspectIdentifier])
REFERENCES [extension].[Prospect] ([EducationOrganizationId], [ProspectIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ProspectTouchpoint_Prospect]
ON [extension].[ProspectTouchpoint]([EducationOrganizationId] ASC, [ProspectIdentifier] ASC)
GO

ALTER TABLE [extension].[Rubric] WITH CHECK ADD CONSTRAINT [FK_Rubric_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_Rubric_EducationOrganization]
ON [extension].[Rubric]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[Rubric] WITH CHECK ADD CONSTRAINT [FK_Rubric_RubricTypeDescriptor] FOREIGN KEY ([RubricTypeDescriptorId])
REFERENCES [extension].[RubricTypeDescriptor] ([RubricTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_Rubric_RubricTypeDescriptor]
ON [extension].[Rubric]([RubricTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[RubricLevel] WITH CHECK ADD CONSTRAINT [FK_RubricLevel_Rubric] FOREIGN KEY ([EducationOrganizationId], [RubricTitle], [RubricTypeDescriptorId])
REFERENCES [extension].[Rubric] ([EducationOrganizationId], [RubricTitle], [RubricTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_RubricLevel_Rubric]
ON [extension].[RubricLevel]([EducationOrganizationId] ASC, [RubricTitle] ASC, [RubricTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[RubricLevelResponse] WITH CHECK ADD CONSTRAINT [FK_RubricLevelResponse_Observation] FOREIGN KEY ([ObservationIdentifier])
REFERENCES [extension].[Observation] ([ObservationIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_RubricLevelResponse_Observation]
ON [extension].[RubricLevelResponse]([ObservationIdentifier] ASC)
GO

ALTER TABLE [extension].[RubricLevelResponse] WITH CHECK ADD CONSTRAINT [FK_RubricLevelResponse_RubricLevel] FOREIGN KEY ([EducationOrganizationId], [RubricLevelCode], [RubricTitle], [RubricTypeDescriptorId])
REFERENCES [extension].[RubricLevel] ([EducationOrganizationId], [RubricLevelCode], [RubricTitle], [RubricTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_RubricLevelResponse_RubricLevel]
ON [extension].[RubricLevelResponse]([EducationOrganizationId] ASC, [RubricLevelCode] ASC, [RubricTitle] ASC, [RubricTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[RubricLevelResponseFact] WITH CHECK ADD CONSTRAINT [FK_RubricLevelResponseFact_ObservationFact] FOREIGN KEY ([EducationOrganizationId], [FactsAsOfDate], [RubricTitle], [RubricTypeDescriptorId], [SchoolYear])
REFERENCES [extension].[ObservationFact] ([EducationOrganizationId], [FactsAsOfDate], [RubricTitle], [RubricTypeDescriptorId], [SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_RubricLevelResponseFact_ObservationFact]
ON [extension].[RubricLevelResponseFact]([EducationOrganizationId] ASC, [FactsAsOfDate] ASC, [RubricTitle] ASC, [RubricTypeDescriptorId] ASC, [SchoolYear] ASC)
GO

ALTER TABLE [extension].[RubricLevelResponseFact] WITH CHECK ADD CONSTRAINT [FK_RubricLevelResponseFact_RubricLevel] FOREIGN KEY ([EducationOrganizationId], [RubricLevelCode], [RubricTitle], [RubricTypeDescriptorId])
REFERENCES [extension].[RubricLevel] ([EducationOrganizationId], [RubricLevelCode], [RubricTitle], [RubricTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_RubricLevelResponseFact_RubricLevel]
ON [extension].[RubricLevelResponseFact]([EducationOrganizationId] ASC, [RubricLevelCode] ASC, [RubricTitle] ASC, [RubricTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[RubricLevelThemeType] WITH CHECK ADD CONSTRAINT [FK_RubricLevelThemeType_RubricLevel] FOREIGN KEY ([EducationOrganizationId], [RubricLevelCode], [RubricTitle], [RubricTypeDescriptorId])
REFERENCES [extension].[RubricLevel] ([EducationOrganizationId], [RubricLevelCode], [RubricTitle], [RubricTypeDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_RubricLevelThemeType_RubricLevel]
ON [extension].[RubricLevelThemeType]([EducationOrganizationId] ASC, [RubricLevelCode] ASC, [RubricTitle] ASC, [RubricTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[RubricLevelThemeType] WITH CHECK ADD CONSTRAINT [FK_RubricLevelThemeType_ThemeTypeDescriptor] FOREIGN KEY ([ThemeTypeDescriptorId])
REFERENCES [extension].[ThemeTypeDescriptor] ([ThemeTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_RubricLevelThemeType_ThemeTypeDescriptor]
ON [extension].[RubricLevelThemeType]([ThemeTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[RubricTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_RubricTypeDescriptor_Descriptor] FOREIGN KEY ([RubricTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_RubricTypeDescriptor_Descriptor]
ON [extension].[RubricTypeDescriptor]([RubricTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[RubricTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_RubricTypeDescriptor_RubricType] FOREIGN KEY ([RubricTypeId])
REFERENCES [extension].[RubricType] ([RubricTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_RubricTypeDescriptor_RubricType]
ON [extension].[RubricTypeDescriptor]([RubricTypeId] ASC)
GO

ALTER TABLE [extension].[SalaryTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_SalaryTypeDescriptor_Descriptor] FOREIGN KEY ([SalaryTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_SalaryTypeDescriptor_Descriptor]
ON [extension].[SalaryTypeDescriptor]([SalaryTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[SalaryTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_SalaryTypeDescriptor_SalaryType] FOREIGN KEY ([SalaryTypeId])
REFERENCES [extension].[SalaryType] ([SalaryTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SalaryTypeDescriptor_SalaryType]
ON [extension].[SalaryTypeDescriptor]([SalaryTypeId] ASC)
GO

ALTER TABLE [extension].[SchoolExtension] WITH CHECK ADD CONSTRAINT [FK_SchoolExtension_School] FOREIGN KEY ([SchoolId])
REFERENCES [edfi].[School] ([SchoolId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_SchoolExtension_School]
ON [extension].[SchoolExtension]([SchoolId] ASC)
GO

ALTER TABLE [extension].[SchoolExtension] WITH CHECK ADD CONSTRAINT [FK_SchoolExtension_SchoolStatusDescriptor] FOREIGN KEY ([SchoolStatusDescriptorId])
REFERENCES [extension].[SchoolStatusDescriptor] ([SchoolStatusDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_SchoolExtension_SchoolStatusDescriptor]
ON [extension].[SchoolExtension]([SchoolStatusDescriptorId] ASC)
GO

ALTER TABLE [extension].[SchoolStatusDescriptor] WITH CHECK ADD CONSTRAINT [FK_SchoolStatusDescriptor_Descriptor] FOREIGN KEY ([SchoolStatusDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_SchoolStatusDescriptor_Descriptor]
ON [extension].[SchoolStatusDescriptor]([SchoolStatusDescriptorId] ASC)
GO

ALTER TABLE [extension].[SchoolStatusDescriptor] WITH CHECK ADD CONSTRAINT [FK_SchoolStatusDescriptor_SchoolStatusType] FOREIGN KEY ([SchoolStatusTypeId])
REFERENCES [extension].[SchoolStatusType] ([SchoolStatusTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SchoolStatusDescriptor_SchoolStatusType]
ON [extension].[SchoolStatusDescriptor]([SchoolStatusTypeId] ASC)
GO

ALTER TABLE [extension].[SectionCourseTranscriptFact] WITH CHECK ADD CONSTRAINT [FK_SectionCourseTranscriptFact_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionCourseTranscriptFact_SchoolYearType]
ON [extension].[SectionCourseTranscriptFact]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionCourseTranscriptFact] WITH CHECK ADD CONSTRAINT [FK_SectionCourseTranscriptFact_SectionStudentAcademicRecordFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentAcademicRecordFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionCourseTranscriptFact_SectionStudentAcademicRecordFact]
ON [extension].[SectionCourseTranscriptFact]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned] WITH CHECK ADD CONSTRAINT [FK_SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned_SchoolYearType]
ON [extension].[SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned] WITH CHECK ADD CONSTRAINT [FK_SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned_SectionCourseTranscriptFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [FactsAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionCourseTranscriptFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [FactsAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned_SectionCourseTranscriptFact]
ON [extension].[SectionCourseTranscriptFactAggregatedFinalLetterGradeEarned]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [FactsAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionCourseTranscriptFactAggregatedNumericGradeEarned] WITH CHECK ADD CONSTRAINT [FK_SectionCourseTranscriptFactAggregatedNumericGradeEarned_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionCourseTranscriptFactAggregatedNumericGradeEarned_SchoolYearType]
ON [extension].[SectionCourseTranscriptFactAggregatedNumericGradeEarned]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionCourseTranscriptFactAggregatedNumericGradeEarned] WITH CHECK ADD CONSTRAINT [FK_SectionCourseTranscriptFactAggregatedNumericGradeEarned_SectionCourseTranscriptFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [FactsAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionCourseTranscriptFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [FactsAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionCourseTranscriptFactAggregatedNumericGradeEarned_SectionCourseTranscriptFact]
ON [extension].[SectionCourseTranscriptFactAggregatedNumericGradeEarned]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [FactsAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionCourseTranscriptFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionCourseTranscriptFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionCourseTranscriptFactStudentsEnrolled_SchoolYearType]
ON [extension].[SectionCourseTranscriptFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionCourseTranscriptFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionCourseTranscriptFactStudentsEnrolled_SectionCourseTranscriptFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [FactsAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionCourseTranscriptFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [FactsAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionCourseTranscriptFactStudentsEnrolled_SectionCourseTranscriptFact]
ON [extension].[SectionCourseTranscriptFactStudentsEnrolled]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [FactsAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionCourseTranscriptFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionCourseTranscriptFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionCourseTranscriptFactStudentsEnrolled_ValueType]
ON [extension].[SectionCourseTranscriptFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentAcademicRecordFact] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAcademicRecordFact_Section] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [edfi].[Section] ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAcademicRecordFact_Section]
ON [extension].[SectionStudentAcademicRecordFact]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_SchoolYearType]
ON [extension].[SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_SectionStudentAcademicRecordFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentAcademicRecordFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage_SectionStudentAcademicRecordFact]
ON [extension].[SectionStudentAcademicRecordFactAggregatedCumulativeGradePointAverage]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage_SchoolYearType]
ON [extension].[SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage_SectionStudentAcademicRecordFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentAcademicRecordFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage_SectionStudentAcademicRecordFact]
ON [extension].[SectionStudentAcademicRecordFactAggregatedSessionGradePointAverage]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentAcademicRecordFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAcademicRecordFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAcademicRecordFactStudentsEnrolled_SchoolYearType]
ON [extension].[SectionStudentAcademicRecordFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentAcademicRecordFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAcademicRecordFactStudentsEnrolled_SectionStudentAcademicRecordFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentAcademicRecordFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAcademicRecordFactStudentsEnrolled_SectionStudentAcademicRecordFact]
ON [extension].[SectionStudentAcademicRecordFactStudentsEnrolled]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentAcademicRecordFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAcademicRecordFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAcademicRecordFactStudentsEnrolled_ValueType]
ON [extension].[SectionStudentAcademicRecordFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFact_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFact_AcademicSubjectDescriptor]
ON [extension].[SectionStudentAssessmentFact]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFact_AssessmentCategoryDescriptor] FOREIGN KEY ([AssessmentCategoryDescriptorId])
REFERENCES [edfi].[AssessmentCategoryDescriptor] ([AssessmentCategoryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFact_AssessmentCategoryDescriptor]
ON [extension].[SectionStudentAssessmentFact]([AssessmentCategoryDescriptorId] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFact_GradeLevelDescriptor] FOREIGN KEY ([GradeLevelDescriptorId])
REFERENCES [edfi].[GradeLevelDescriptor] ([GradeLevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFact_GradeLevelDescriptor]
ON [extension].[SectionStudentAssessmentFact]([GradeLevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFact_SchoolYearType] FOREIGN KEY ([SchoolYearTakenSchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFact_SchoolYearType]
ON [extension].[SectionStudentAssessmentFact]([SchoolYearTakenSchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFact_Section] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [edfi].[Section] ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFact_Section]
ON [extension].[SectionStudentAssessmentFact]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFact] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFact_TermDescriptor] FOREIGN KEY ([TermDescriptorId])
REFERENCES [edfi].[TermDescriptor] ([TermDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFact_TermDescriptor]
ON [extension].[SectionStudentAssessmentFact]([TermDescriptorId] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFactAggregatedPerformanceLevel] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFactAggregatedPerformanceLevel_SectionStudentAssessmentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SchoolYearTakenSchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentAssessmentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SchoolYearTakenSchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFactAggregatedPerformanceLevel_SectionStudentAssessmentFact]
ON [extension].[SectionStudentAssessmentFactAggregatedPerformanceLevel]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SchoolYearTakenSchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFactAggregatedScoreResult] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFactAggregatedScoreResult_AssessmentReportingMethodType] FOREIGN KEY ([AssessmentReportingMethodTypeId])
REFERENCES [edfi].[AssessmentReportingMethodType] ([AssessmentReportingMethodTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFactAggregatedScoreResult_AssessmentReportingMethodType]
ON [extension].[SectionStudentAssessmentFactAggregatedScoreResult]([AssessmentReportingMethodTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFactAggregatedScoreResult] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFactAggregatedScoreResult_ResultDatatypeType] FOREIGN KEY ([AverageScoreResultDataTypeResultDatatypeTypeId])
REFERENCES [edfi].[ResultDatatypeType] ([ResultDatatypeTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFactAggregatedScoreResult_ResultDatatypeType]
ON [extension].[SectionStudentAssessmentFactAggregatedScoreResult]([AverageScoreResultDataTypeResultDatatypeTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFactAggregatedScoreResult] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFactAggregatedScoreResult_SectionStudentAssessmentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SchoolYearTakenSchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentAssessmentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SchoolYearTakenSchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFactAggregatedScoreResult_SectionStudentAssessmentFact]
ON [extension].[SectionStudentAssessmentFactAggregatedScoreResult]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SchoolYearTakenSchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFactStudentsEnrolled_SchoolYearType]
ON [extension].[SectionStudentAssessmentFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFactStudentsEnrolled_SectionStudentAssessmentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SchoolYearTakenSchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentAssessmentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SchoolYearTakenSchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFactStudentsEnrolled_SectionStudentAssessmentFact]
ON [extension].[SectionStudentAssessmentFactStudentsEnrolled]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SchoolYearTakenSchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentAssessmentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentAssessmentFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentAssessmentFactStudentsEnrolled_ValueType]
ON [extension].[SectionStudentAssessmentFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFact] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFact_Section] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [edfi].[Section] ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFact_Section]
ON [extension].[SectionStudentFact]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedELLEnrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedELLEnrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedELLEnrollment_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedELLEnrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedELLEnrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedELLEnrollment_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedELLEnrollment_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedELLEnrollment]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedELLEnrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedELLEnrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedELLEnrollment_ValueType]
ON [extension].[SectionStudentFactAggregatedELLEnrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedESLEnrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedESLEnrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedESLEnrollment_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedESLEnrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedESLEnrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedESLEnrollment_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedESLEnrollment_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedESLEnrollment]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedESLEnrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedESLEnrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedESLEnrollment_ValueType]
ON [extension].[SectionStudentFactAggregatedESLEnrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedGender_GenderType] FOREIGN KEY ([GenderTypeId])
REFERENCES [extension].[GenderType] ([GenderTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedGender_GenderType]
ON [extension].[SectionStudentFactAggregatedGender]([GenderTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedGender_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedGender_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedGender]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedGender_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedGender_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedGender]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedGender] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedGender_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedGender_ValueType]
ON [extension].[SectionStudentFactAggregatedGender]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedHispanicLatinoEthnicity] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedHispanicLatinoEthnicity_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedHispanicLatinoEthnicity_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedHispanicLatinoEthnicity]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedHispanicLatinoEthnicity] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedHispanicLatinoEthnicity_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedHispanicLatinoEthnicity_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedHispanicLatinoEthnicity]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedHispanicLatinoEthnicity] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedHispanicLatinoEthnicity_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedHispanicLatinoEthnicity_ValueType]
ON [extension].[SectionStudentFactAggregatedHispanicLatinoEthnicity]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedLanguage_LanguageDescriptor] FOREIGN KEY ([LanguageDescriptorId])
REFERENCES [edfi].[LanguageDescriptor] ([LanguageDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedLanguage_LanguageDescriptor]
ON [extension].[SectionStudentFactAggregatedLanguage]([LanguageDescriptorId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedLanguage_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedLanguage_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedLanguage]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedLanguage_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedLanguage_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedLanguage]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedLanguage] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedLanguage_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedLanguage_ValueType]
ON [extension].[SectionStudentFactAggregatedLanguage]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedRace_RaceType] FOREIGN KEY ([RaceTypeId])
REFERENCES [edfi].[RaceType] ([RaceTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedRace_RaceType]
ON [extension].[SectionStudentFactAggregatedRace]([RaceTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedRace_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedRace_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedRace]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedRace_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedRace_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedRace]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedRace] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedRace_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedRace_ValueType]
ON [extension].[SectionStudentFactAggregatedRace]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSchoolFoodServicesEligibility_SchoolFoodServicesEligibilityDescriptor] FOREIGN KEY ([SchoolFoodServicesEligibilityDescriptorId])
REFERENCES [edfi].[SchoolFoodServicesEligibilityDescriptor] ([SchoolFoodServicesEligibilityDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSchoolFoodServicesEligibility_SchoolFoodServicesEligibilityDescriptor]
ON [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility]([SchoolFoodServicesEligibilityDescriptorId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSchoolFoodServicesEligibility_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSchoolFoodServicesEligibility_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSchoolFoodServicesEligibility_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSchoolFoodServicesEligibility_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSchoolFoodServicesEligibility_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSchoolFoodServicesEligibility_ValueType]
ON [extension].[SectionStudentFactAggregatedSchoolFoodServicesEligibility]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSection504Enrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSection504Enrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSection504Enrollment_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedSection504Enrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSection504Enrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSection504Enrollment_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSection504Enrollment_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedSection504Enrollment]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSection504Enrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSection504Enrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSection504Enrollment_ValueType]
ON [extension].[SectionStudentFactAggregatedSection504Enrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSex_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSex_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedSex]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSex_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSex_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedSex]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSex_SexType] FOREIGN KEY ([SexTypeId])
REFERENCES [edfi].[SexType] ([SexTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSex_SexType]
ON [extension].[SectionStudentFactAggregatedSex]([SexTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSex] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSex_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSex_ValueType]
ON [extension].[SectionStudentFactAggregatedSex]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSPED] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSPED_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSPED_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedSPED]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSPED] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSPED_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSPED_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedSPED]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedSPED] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedSPED_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedSPED_ValueType]
ON [extension].[SectionStudentFactAggregatedSPED]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedTitleIEnrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedTitleIEnrollment_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedTitleIEnrollment_SchoolYearType]
ON [extension].[SectionStudentFactAggregatedTitleIEnrollment]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedTitleIEnrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedTitleIEnrollment_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedTitleIEnrollment_SectionStudentFact]
ON [extension].[SectionStudentFactAggregatedTitleIEnrollment]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactAggregatedTitleIEnrollment] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactAggregatedTitleIEnrollment_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactAggregatedTitleIEnrollment_ValueType]
ON [extension].[SectionStudentFactAggregatedTitleIEnrollment]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactDisabilityByType_DisabilityDescriptor] FOREIGN KEY ([DisabilityDescriptorId])
REFERENCES [edfi].[DisabilityDescriptor] ([DisabilityDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactDisabilityByType_DisabilityDescriptor]
ON [extension].[SectionStudentFactDisabilityByType]([DisabilityDescriptorId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactDisabilityByType_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactDisabilityByType_SchoolYearType]
ON [extension].[SectionStudentFactDisabilityByType]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactDisabilityByType_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactDisabilityByType_SectionStudentFact]
ON [extension].[SectionStudentFactDisabilityByType]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactDisabilityByType] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactDisabilityByType_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactDisabilityByType_ValueType]
ON [extension].[SectionStudentFactDisabilityByType]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactStudentsEnrolled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactStudentsEnrolled_SchoolYearType]
ON [extension].[SectionStudentFactStudentsEnrolled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactStudentsEnrolled_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactStudentsEnrolled_SectionStudentFact]
ON [extension].[SectionStudentFactStudentsEnrolled]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactStudentsEnrolled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactStudentsEnrolled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactStudentsEnrolled_ValueType]
ON [extension].[SectionStudentFactStudentsEnrolled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactTotalStudentsDisabled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactTotalStudentsDisabled_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactTotalStudentsDisabled_SchoolYearType]
ON [extension].[SectionStudentFactTotalStudentsDisabled]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactTotalStudentsDisabled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactTotalStudentsDisabled_SectionStudentFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionStudentFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactTotalStudentsDisabled_SectionStudentFact]
ON [extension].[SectionStudentFactTotalStudentsDisabled]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionStudentFactTotalStudentsDisabled] WITH CHECK ADD CONSTRAINT [FK_SectionStudentFactTotalStudentsDisabled_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SectionStudentFactTotalStudentsDisabled_ValueType]
ON [extension].[SectionStudentFactTotalStudentsDisabled]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[SectionSurveyResponseFact] WITH CHECK ADD CONSTRAINT [FK_SectionSurveyResponseFact_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_SectionSurveyResponseFact_SchoolYearType]
ON [extension].[SectionSurveyResponseFact]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[SectionSurveyResponseFact] WITH CHECK ADD CONSTRAINT [FK_SectionSurveyResponseFact_Section] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [edfi].[Section] ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionSurveyResponseFact_Section]
ON [extension].[SectionSurveyResponseFact]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionSurveyResponseFact] WITH CHECK ADD CONSTRAINT [FK_SectionSurveyResponseFact_Survey] FOREIGN KEY ([SurveyIdentifier])
REFERENCES [extension].[Survey] ([SurveyIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_SectionSurveyResponseFact_Survey]
ON [extension].[SectionSurveyResponseFact]([SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[SectionSurveySectionResponseRatingFact] WITH CHECK ADD CONSTRAINT [FK_SectionSurveySectionResponseRatingFact_SectionSurveyResponseFact] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [FactsAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [SurveyIdentifier], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [extension].[SectionSurveyResponseFact] ([ClassPeriodName], [ClassroomIdentificationCode], [FactsAsOfDate], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [SurveyIdentifier], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_SectionSurveySectionResponseRatingFact_SectionSurveyResponseFact]
ON [extension].[SectionSurveySectionResponseRatingFact]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [FactsAsOfDate] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [SurveyIdentifier] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[SectionSurveySectionResponseRatingFact] WITH CHECK ADD CONSTRAINT [FK_SectionSurveySectionResponseRatingFact_SurveySection] FOREIGN KEY ([SurveyIdentifier], [SurveySectionTitle])
REFERENCES [extension].[SurveySection] ([SurveyIdentifier], [SurveySectionTitle])


GO

CREATE NONCLUSTERED INDEX [FK_SectionSurveySectionResponseRatingFact_SurveySection]
ON [extension].[SectionSurveySectionResponseRatingFact]([SurveyIdentifier] ASC, [SurveySectionTitle] ASC)
GO

ALTER TABLE [extension].[SectionSurveySectionResponseRatingFactAggregatedNumericResponse] WITH CHECK ADD CONSTRAINT [FK_SectionSurveySectionResponseRatingFactAggregatedNumericResponse_SectionSurveySectionResponseRatingFact] FOREIGN KEY ([SurveyIdentifier], [SurveySectionTitle])
REFERENCES [extension].[SectionSurveySectionResponseRatingFact] ([SurveyIdentifier], [SurveySectionTitle])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_SectionSurveySectionResponseRatingFactAggregatedNumericResponse_SectionSurveySectionResponseRatingFact]
ON [extension].[SectionSurveySectionResponseRatingFactAggregatedNumericResponse]([SurveyIdentifier] ASC, [SurveySectionTitle] ASC)
GO

ALTER TABLE [extension].[StaffApplicant] WITH CHECK ADD CONSTRAINT [FK_StaffApplicant_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffApplicant_Applicant]
ON [extension].[StaffApplicant]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[StaffApplicant] WITH CHECK ADD CONSTRAINT [FK_StaffApplicant_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffApplicant_Staff]
ON [extension].[StaffApplicant]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffBackgroundCheck] WITH CHECK ADD CONSTRAINT [FK_StaffBackgroundCheck_BackgroundCheckStatusDescriptor] FOREIGN KEY ([BackgroundCheckStatusDescriptorId])
REFERENCES [extension].[BackgroundCheckStatusDescriptor] ([BackgroundCheckStatusDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffBackgroundCheck_BackgroundCheckStatusDescriptor]
ON [extension].[StaffBackgroundCheck]([BackgroundCheckStatusDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffBackgroundCheck] WITH CHECK ADD CONSTRAINT [FK_StaffBackgroundCheck_BackgroundCheckTypeDescriptor] FOREIGN KEY ([BackgroundCheckTypeDescriptorId])
REFERENCES [extension].[BackgroundCheckTypeDescriptor] ([BackgroundCheckTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffBackgroundCheck_BackgroundCheckTypeDescriptor]
ON [extension].[StaffBackgroundCheck]([BackgroundCheckTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffBackgroundCheck] WITH CHECK ADD CONSTRAINT [FK_StaffBackgroundCheck_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffBackgroundCheck_Staff]
ON [extension].[StaffBackgroundCheck]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtension] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtension_StaffCredential] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
REFERENCES [edfi].[StaffCredential] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtension_StaffCredential]
ON [extension].[StaffCredentialExtension]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [LevelDescriptorId] ASC, [StaffUSI] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtension] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtension_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtension_ValueType]
ON [extension].[StaffCredentialExtension]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionBoardCertification] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionBoardCertification_BoardCertificationTypeDescriptor] FOREIGN KEY ([BoardCertificationTypeDescriptorId])
REFERENCES [extension].[BoardCertificationTypeDescriptor] ([BoardCertificationTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionBoardCertification_BoardCertificationTypeDescriptor]
ON [extension].[StaffCredentialExtensionBoardCertification]([BoardCertificationTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionBoardCertification] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionBoardCertification_StaffCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
REFERENCES [extension].[StaffCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionBoardCertification_StaffCredentialExtension]
ON [extension].[StaffCredentialExtensionBoardCertification]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [LevelDescriptorId] ASC, [StaffUSI] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionCertificationExam] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionCertificationExam_CertificationExamTypeDescriptor] FOREIGN KEY ([CertificationExamTypeDescriptorId])
REFERENCES [extension].[CertificationExamTypeDescriptor] ([CertificationExamTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionCertificationExam_CertificationExamTypeDescriptor]
ON [extension].[StaffCredentialExtensionCertificationExam]([CertificationExamTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionCertificationExam] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionCertificationExam_StaffCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
REFERENCES [extension].[StaffCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionCertificationExam_StaffCredentialExtension]
ON [extension].[StaffCredentialExtensionCertificationExam]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [LevelDescriptorId] ASC, [StaffUSI] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionRecommendation_CredentialFieldDescriptor] FOREIGN KEY ([CredentialFieldDescriptorId])
REFERENCES [edfi].[CredentialFieldDescriptor] ([CredentialFieldDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionRecommendation_CredentialFieldDescriptor]
ON [extension].[StaffCredentialExtensionRecommendation]([CredentialFieldDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionRecommendation_LevelDescriptor] FOREIGN KEY ([LevelDescriptorId])
REFERENCES [edfi].[LevelDescriptor] ([LevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionRecommendation_LevelDescriptor]
ON [extension].[StaffCredentialExtensionRecommendation]([LevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionRecommendation_StaffCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
REFERENCES [extension].[StaffCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionRecommendation_StaffCredentialExtension]
ON [extension].[StaffCredentialExtensionRecommendation]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [LevelDescriptorId] ASC, [StaffUSI] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionRecommendation_TeachingCredentialDescriptor] FOREIGN KEY ([TeachingCredentialDescriptorId])
REFERENCES [edfi].[TeachingCredentialDescriptor] ([TeachingCredentialDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionRecommendation_TeachingCredentialDescriptor]
ON [extension].[StaffCredentialExtensionRecommendation]([TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionRecommendingInstitution_CountryDescriptor] FOREIGN KEY ([RecommendingInstitutionCountryDescriptorId])
REFERENCES [edfi].[CountryDescriptor] ([CountryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionRecommendingInstitution_CountryDescriptor]
ON [extension].[StaffCredentialExtensionRecommendingInstitution]([RecommendingInstitutionCountryDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionRecommendingInstitution_StaffCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
REFERENCES [extension].[StaffCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionRecommendingInstitution_StaffCredentialExtension]
ON [extension].[StaffCredentialExtensionRecommendingInstitution]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [LevelDescriptorId] ASC, [StaffUSI] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_StaffCredentialExtensionRecommendingInstitution_StateAbbreviationType] FOREIGN KEY ([RecommendingInstutionStateAbbreviationTypeId])
REFERENCES [edfi].[StateAbbreviationType] ([StateAbbreviationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffCredentialExtensionRecommendingInstitution_StateAbbreviationType]
ON [extension].[StaffCredentialExtensionRecommendingInstitution]([RecommendingInstutionStateAbbreviationTypeId] ASC)
GO

ALTER TABLE [extension].[StaffEducationOrganizationAssignmentAssociationExtension] WITH CHECK ADD CONSTRAINT [FK_StaffEducationOrganizationAssignmentAssociationExtension_StaffEducationOrganizationAssignmentAssociation] FOREIGN KEY ([BeginDate], [EducationOrganizationId], [StaffClassificationDescriptorId], [StaffUSI])
REFERENCES [edfi].[StaffEducationOrganizationAssignmentAssociation] ([BeginDate], [EducationOrganizationId], [StaffClassificationDescriptorId], [StaffUSI])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffEducationOrganizationAssignmentAssociationExtension_StaffEducationOrganizationAssignmentAssociation]
ON [extension].[StaffEducationOrganizationAssignmentAssociationExtension]([BeginDate] ASC, [EducationOrganizationId] ASC, [StaffClassificationDescriptorId] ASC, [StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffExtension] WITH CHECK ADD CONSTRAINT [FK_StaffExtension_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffExtension_Staff]
ON [extension].[StaffExtension]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffFieldworkAbsenceEvent] WITH CHECK ADD CONSTRAINT [FK_StaffFieldworkAbsenceEvent_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])


GO

CREATE NONCLUSTERED INDEX [FK_StaffFieldworkAbsenceEvent_Staff]
ON [extension].[StaffFieldworkAbsenceEvent]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffFieldworkExperience] WITH CHECK ADD CONSTRAINT [FK_StaffFieldworkExperience_FieldworkTypeDescriptor] FOREIGN KEY ([FieldworkTypeDescriptorId])
REFERENCES [extension].[FieldworkTypeDescriptor] ([FieldworkTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffFieldworkExperience_FieldworkTypeDescriptor]
ON [extension].[StaffFieldworkExperience]([FieldworkTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffFieldworkExperience] WITH CHECK ADD CONSTRAINT [FK_StaffFieldworkExperience_School] FOREIGN KEY ([SchoolId])
REFERENCES [edfi].[School] ([SchoolId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffFieldworkExperience_School]
ON [extension].[StaffFieldworkExperience]([SchoolId] ASC)
GO

ALTER TABLE [extension].[StaffFieldworkExperience] WITH CHECK ADD CONSTRAINT [FK_StaffFieldworkExperience_Section] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [edfi].[Section] ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_StaffFieldworkExperience_Section]
ON [extension].[StaffFieldworkExperience]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[StaffFieldworkExperience] WITH CHECK ADD CONSTRAINT [FK_StaffFieldworkExperience_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])


GO

CREATE NONCLUSTERED INDEX [FK_StaffFieldworkExperience_Staff]
ON [extension].[StaffFieldworkExperience]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffFieldworkExperienceCoteaching] WITH CHECK ADD CONSTRAINT [FK_StaffFieldworkExperienceCoteaching_StaffFieldworkExperience] FOREIGN KEY ([BeginDate], [FieldworkIdentifier], [SchoolId], [StaffUSI])
REFERENCES [extension].[StaffFieldworkExperience] ([BeginDate], [FieldworkIdentifier], [SchoolId], [StaffUSI])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffFieldworkExperienceCoteaching_StaffFieldworkExperience]
ON [extension].[StaffFieldworkExperienceCoteaching]([BeginDate] ASC, [FieldworkIdentifier] ASC, [SchoolId] ASC, [StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffHighlyQualifiedAcademicSubject] WITH CHECK ADD CONSTRAINT [FK_StaffHighlyQualifiedAcademicSubject_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffHighlyQualifiedAcademicSubject_AcademicSubjectDescriptor]
ON [extension].[StaffHighlyQualifiedAcademicSubject]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffHighlyQualifiedAcademicSubject] WITH CHECK ADD CONSTRAINT [FK_StaffHighlyQualifiedAcademicSubject_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffHighlyQualifiedAcademicSubject_Staff]
ON [extension].[StaffHighlyQualifiedAcademicSubject]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffSalary] WITH CHECK ADD CONSTRAINT [FK_StaffSalary_SalaryTypeDescriptor] FOREIGN KEY ([SalaryTypeDescriptorId])
REFERENCES [extension].[SalaryTypeDescriptor] ([SalaryTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffSalary_SalaryTypeDescriptor]
ON [extension].[StaffSalary]([SalaryTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffSalary] WITH CHECK ADD CONSTRAINT [FK_StaffSalary_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffSalary_Staff]
ON [extension].[StaffSalary]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffSeniority] WITH CHECK ADD CONSTRAINT [FK_StaffSeniority_CredentialFieldDescriptor] FOREIGN KEY ([CredentialFieldDescriptorId])
REFERENCES [edfi].[CredentialFieldDescriptor] ([CredentialFieldDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffSeniority_CredentialFieldDescriptor]
ON [extension].[StaffSeniority]([CredentialFieldDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffSeniority] WITH CHECK ADD CONSTRAINT [FK_StaffSeniority_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffSeniority_Staff]
ON [extension].[StaffSeniority]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffStudentGrowthFact] WITH CHECK ADD CONSTRAINT [FK_StaffStudentGrowthFact_ResultDatatypeType] FOREIGN KEY ([ResultDatatypeTypeId])
REFERENCES [edfi].[ResultDatatypeType] ([ResultDatatypeTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffStudentGrowthFact_ResultDatatypeType]
ON [extension].[StaffStudentGrowthFact]([ResultDatatypeTypeId] ASC)
GO

ALTER TABLE [extension].[StaffStudentGrowthFact] WITH CHECK ADD CONSTRAINT [FK_StaffStudentGrowthFact_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_StaffStudentGrowthFact_SchoolYearType]
ON [extension].[StaffStudentGrowthFact]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[StaffStudentGrowthFact] WITH CHECK ADD CONSTRAINT [FK_StaffStudentGrowthFact_SchoolYearType1] FOREIGN KEY ([StudentGrowthReportYearSchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_StaffStudentGrowthFact_SchoolYearType1]
ON [extension].[StaffStudentGrowthFact]([StudentGrowthReportYearSchoolYear] ASC)
GO

ALTER TABLE [extension].[StaffStudentGrowthFact] WITH CHECK ADD CONSTRAINT [FK_StaffStudentGrowthFact_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])


GO

CREATE NONCLUSTERED INDEX [FK_StaffStudentGrowthFact_Staff]
ON [extension].[StaffStudentGrowthFact]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffStudentGrowthFact] WITH CHECK ADD CONSTRAINT [FK_StaffStudentGrowthFact_StudentGrowthTypeDescriptor] FOREIGN KEY ([StudentGrowthTypeDescriptorId])
REFERENCES [extension].[StudentGrowthTypeDescriptor] ([StudentGrowthTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffStudentGrowthFact_StudentGrowthTypeDescriptor]
ON [extension].[StaffStudentGrowthFact]([StudentGrowthTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherEducatorResearch] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherEducatorResearch_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherEducatorResearch_Staff]
ON [extension].[StaffTeacherEducatorResearch]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProgram] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProgram_LevelOfDegreeAwardedDescriptor] FOREIGN KEY ([LevelOfDegreeAwardedDescriptorId])
REFERENCES [extension].[LevelOfDegreeAwardedDescriptor] ([LevelOfDegreeAwardedDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProgram_LevelOfDegreeAwardedDescriptor]
ON [extension].[StaffTeacherPreparationProgram]([LevelOfDegreeAwardedDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProgram] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProgram_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProgram_Staff]
ON [extension].[StaffTeacherPreparationProgram]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProgram] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProgram_TeacherPreparationProgramTypeDescriptor] FOREIGN KEY ([TeacherPreparationProgramTypeDescriptorId])
REFERENCES [extension].[TeacherPreparationProgramTypeDescriptor] ([TeacherPreparationProgramTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProgram_TeacherPreparationProgramTypeDescriptor]
ON [extension].[StaffTeacherPreparationProgram]([TeacherPreparationProgramTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProgramAddress] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProgramAddress_AddressType] FOREIGN KEY ([AddressTypeId])
REFERENCES [edfi].[AddressType] ([AddressTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProgramAddress_AddressType]
ON [extension].[StaffTeacherPreparationProgramAddress]([AddressTypeId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProgramAddress] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProgramAddress_StaffTeacherPreparationProgram] FOREIGN KEY ([StaffUSI], [TeacherPreparationProgramName])
REFERENCES [extension].[StaffTeacherPreparationProgram] ([StaffUSI], [TeacherPreparationProgramName])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProgramAddress_StaffTeacherPreparationProgram]
ON [extension].[StaffTeacherPreparationProgramAddress]([StaffUSI] ASC, [TeacherPreparationProgramName] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProgramAddress] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProgramAddress_StateAbbreviationType] FOREIGN KEY ([StateAbbreviationTypeId])
REFERENCES [edfi].[StateAbbreviationType] ([StateAbbreviationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProgramAddress_StateAbbreviationType]
ON [extension].[StaffTeacherPreparationProgramAddress]([StateAbbreviationTypeId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociation] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProviderAssociation_ProgramAssignmentDescriptor] FOREIGN KEY ([ProgramAssignmentDescriptorId])
REFERENCES [edfi].[ProgramAssignmentDescriptor] ([ProgramAssignmentDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProviderAssociation_ProgramAssignmentDescriptor]
ON [extension].[StaffTeacherPreparationProviderAssociation]([ProgramAssignmentDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociation] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProviderAssociation_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProviderAssociation_SchoolYearType]
ON [extension].[StaffTeacherPreparationProviderAssociation]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociation] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProviderAssociation_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProviderAssociation_Staff]
ON [extension].[StaffTeacherPreparationProviderAssociation]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociation] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProviderAssociation_TeacherPreparationProvider] FOREIGN KEY ([TeacherPreparationProviderId])
REFERENCES [extension].[TeacherPreparationProvider] ([TeacherPreparationProviderId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProviderAssociation_TeacherPreparationProvider]
ON [extension].[StaffTeacherPreparationProviderAssociation]([TeacherPreparationProviderId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociationAcademicSubject] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProviderAssociationAcademicSubject_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProviderAssociationAcademicSubject_AcademicSubjectDescriptor]
ON [extension].[StaffTeacherPreparationProviderAssociationAcademicSubject]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociationAcademicSubject] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProviderAssociationAcademicSubject_StaffTeacherPreparationProviderAssociation] FOREIGN KEY ([StaffUSI], [TeacherPreparationProviderId])
REFERENCES [extension].[StaffTeacherPreparationProviderAssociation] ([StaffUSI], [TeacherPreparationProviderId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProviderAssociationAcademicSubject_StaffTeacherPreparationProviderAssociation]
ON [extension].[StaffTeacherPreparationProviderAssociationAcademicSubject]([StaffUSI] ASC, [TeacherPreparationProviderId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociationGradeLevel] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProviderAssociationGradeLevel_GradeLevelDescriptor] FOREIGN KEY ([GradeLevelDescriptorId])
REFERENCES [edfi].[GradeLevelDescriptor] ([GradeLevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProviderAssociationGradeLevel_GradeLevelDescriptor]
ON [extension].[StaffTeacherPreparationProviderAssociationGradeLevel]([GradeLevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProviderAssociationGradeLevel] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProviderAssociationGradeLevel_StaffTeacherPreparationProviderAssociation] FOREIGN KEY ([StaffUSI], [TeacherPreparationProviderId])
REFERENCES [extension].[StaffTeacherPreparationProviderAssociation] ([StaffUSI], [TeacherPreparationProviderId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProviderAssociationGradeLevel_StaffTeacherPreparationProviderAssociation]
ON [extension].[StaffTeacherPreparationProviderAssociationGradeLevel]([StaffUSI] ASC, [TeacherPreparationProviderId] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProviderProgramAssociation] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProviderProgramAssociation_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProviderProgramAssociation_Staff]
ON [extension].[StaffTeacherPreparationProviderProgramAssociation]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[StaffTeacherPreparationProviderProgramAssociation] WITH CHECK ADD CONSTRAINT [FK_StaffTeacherPreparationProviderProgramAssociation_TeacherPreparationProviderProgram] FOREIGN KEY ([EducationOrganizationId], [ProgramName], [ProgramTypeId])
REFERENCES [extension].[TeacherPreparationProviderProgram] ([EducationOrganizationId], [ProgramName], [ProgramTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_StaffTeacherPreparationProviderProgramAssociation_TeacherPreparationProviderProgram]
ON [extension].[StaffTeacherPreparationProviderProgramAssociation]([EducationOrganizationId] ASC, [ProgramName] ASC, [ProgramTypeId] ASC)
GO

ALTER TABLE [extension].[StudentGradebookEntryExtension] WITH CHECK ADD CONSTRAINT [FK_StudentGradebookEntryExtension_StudentGradebookEntry] FOREIGN KEY ([BeginDate], [ClassPeriodName], [ClassroomIdentificationCode], [DateAssigned], [GradebookEntryTitle], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [StudentUSI], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [edfi].[StudentGradebookEntry] ([BeginDate], [ClassPeriodName], [ClassroomIdentificationCode], [DateAssigned], [GradebookEntryTitle], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [StudentUSI], [TermDescriptorId], [UniqueSectionCode])
ON DELETE CASCADE
ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_StudentGradebookEntryExtension_StudentGradebookEntry]
ON [extension].[StudentGradebookEntryExtension]([BeginDate] ASC, [ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [DateAssigned] ASC, [GradebookEntryTitle] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [StudentUSI] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[StudentGrowthTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_StudentGrowthTypeDescriptor_Descriptor] FOREIGN KEY ([StudentGrowthTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_StudentGrowthTypeDescriptor_Descriptor]
ON [extension].[StudentGrowthTypeDescriptor]([StudentGrowthTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[StudentGrowthTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_StudentGrowthTypeDescriptor_StudentGrowthType] FOREIGN KEY ([StudentGrowthTypeId])
REFERENCES [extension].[StudentGrowthType] ([StudentGrowthTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_StudentGrowthTypeDescriptor_StudentGrowthType]
ON [extension].[StudentGrowthTypeDescriptor]([StudentGrowthTypeId] ASC)
GO

ALTER TABLE [extension].[Survey] WITH CHECK ADD CONSTRAINT [FK_Survey_EducationOrganization] FOREIGN KEY ([EducationOrganizationId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_Survey_EducationOrganization]
ON [extension].[Survey]([EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[Survey] WITH CHECK ADD CONSTRAINT [FK_Survey_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_Survey_SchoolYearType]
ON [extension].[Survey]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[Survey] WITH CHECK ADD CONSTRAINT [FK_Survey_SurveyCategoryDescriptor] FOREIGN KEY ([SurveyCategoryDescriptorId])
REFERENCES [extension].[SurveyCategoryDescriptor] ([SurveyCategoryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_Survey_SurveyCategoryDescriptor]
ON [extension].[Survey]([SurveyCategoryDescriptorId] ASC)
GO

ALTER TABLE [extension].[Survey] WITH CHECK ADD CONSTRAINT [FK_Survey_TermDescriptor] FOREIGN KEY ([TermDescriptorId])
REFERENCES [edfi].[TermDescriptor] ([TermDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_Survey_TermDescriptor]
ON [extension].[Survey]([TermDescriptorId] ASC)
GO

ALTER TABLE [extension].[SurveyCategoryDescriptor] WITH CHECK ADD CONSTRAINT [FK_SurveyCategoryDescriptor_Descriptor] FOREIGN KEY ([SurveyCategoryDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_SurveyCategoryDescriptor_Descriptor]
ON [extension].[SurveyCategoryDescriptor]([SurveyCategoryDescriptorId] ASC)
GO

ALTER TABLE [extension].[SurveyCategoryDescriptor] WITH CHECK ADD CONSTRAINT [FK_SurveyCategoryDescriptor_SurveyCategoryType] FOREIGN KEY ([SurveyCategoryTypeId])
REFERENCES [extension].[SurveyCategoryType] ([SurveyCategoryTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyCategoryDescriptor_SurveyCategoryType]
ON [extension].[SurveyCategoryDescriptor]([SurveyCategoryTypeId] ASC)
GO

ALTER TABLE [extension].[SurveyQuestion] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestion_QuestionFormType] FOREIGN KEY ([QuestionFormTypeId])
REFERENCES [extension].[QuestionFormType] ([QuestionFormTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestion_QuestionFormType]
ON [extension].[SurveyQuestion]([QuestionFormTypeId] ASC)
GO

ALTER TABLE [extension].[SurveyQuestion] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestion_Survey] FOREIGN KEY ([SurveyIdentifier])
REFERENCES [extension].[Survey] ([SurveyIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestion_Survey]
ON [extension].[SurveyQuestion]([SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveyQuestion] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestion_SurveySection] FOREIGN KEY ([SurveyIdentifier], [SurveySectionTitle])
REFERENCES [extension].[SurveySection] ([SurveyIdentifier], [SurveySectionTitle])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestion_SurveySection]
ON [extension].[SurveyQuestion]([SurveyIdentifier] ASC, [SurveySectionTitle] ASC)
GO

ALTER TABLE [extension].[SurveyQuestionMatrixElement] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestionMatrixElement_SurveyQuestion] FOREIGN KEY ([QuestionCode], [SurveyIdentifier])
REFERENCES [extension].[SurveyQuestion] ([QuestionCode], [SurveyIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestionMatrixElement_SurveyQuestion]
ON [extension].[SurveyQuestionMatrixElement]([QuestionCode] ASC, [SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveyQuestionNumericChoice] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestionNumericChoice_SurveyQuestion] FOREIGN KEY ([QuestionCode], [SurveyIdentifier])
REFERENCES [extension].[SurveyQuestion] ([QuestionCode], [SurveyIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestionNumericChoice_SurveyQuestion]
ON [extension].[SurveyQuestionNumericChoice]([QuestionCode] ASC, [SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveyQuestionResponse] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestionResponse_SurveyQuestion] FOREIGN KEY ([QuestionCode], [SurveyIdentifier])
REFERENCES [extension].[SurveyQuestion] ([QuestionCode], [SurveyIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestionResponse_SurveyQuestion]
ON [extension].[SurveyQuestionResponse]([QuestionCode] ASC, [SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveyQuestionResponse] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestionResponse_SurveyResponse] FOREIGN KEY ([SurveyIdentifier], [SurveyResponseIdentifier])
REFERENCES [extension].[SurveyResponse] ([SurveyIdentifier], [SurveyResponseIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestionResponse_SurveyResponse]
ON [extension].[SurveyQuestionResponse]([SurveyIdentifier] ASC, [SurveyResponseIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveyQuestionResponseFact] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestionResponseFact_SurveyQuestion] FOREIGN KEY ([QuestionCode], [SurveyIdentifier])
REFERENCES [extension].[SurveyQuestion] ([QuestionCode], [SurveyIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestionResponseFact_SurveyQuestion]
ON [extension].[SurveyQuestionResponseFact]([QuestionCode] ASC, [SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveyQuestionResponseFactAggregatedNumericResponse] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestionResponseFactAggregatedNumericResponse_SurveyQuestionResponseFact] FOREIGN KEY ([QuestionCode], [SurveyIdentifier])
REFERENCES [extension].[SurveyQuestionResponseFact] ([QuestionCode], [SurveyIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestionResponseFactAggregatedNumericResponse_SurveyQuestionResponseFact]
ON [extension].[SurveyQuestionResponseFactAggregatedNumericResponse]([QuestionCode] ASC, [SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveyQuestionResponseSurveyQuestionMatrixElementResponse] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestionResponseSurveyQuestionMatrixElementResponse_SurveyQuestionResponse] FOREIGN KEY ([QuestionCode], [SurveyIdentifier], [SurveyResponseIdentifier])
REFERENCES [extension].[SurveyQuestionResponse] ([QuestionCode], [SurveyIdentifier], [SurveyResponseIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestionResponseSurveyQuestionMatrixElementResponse_SurveyQuestionResponse]
ON [extension].[SurveyQuestionResponseSurveyQuestionMatrixElementResponse]([QuestionCode] ASC, [SurveyIdentifier] ASC, [SurveyResponseIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveyQuestionTextChoice] WITH CHECK ADD CONSTRAINT [FK_SurveyQuestionTextChoice_SurveyQuestion] FOREIGN KEY ([QuestionCode], [SurveyIdentifier])
REFERENCES [extension].[SurveyQuestion] ([QuestionCode], [SurveyIdentifier])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_SurveyQuestionTextChoice_SurveyQuestion]
ON [extension].[SurveyQuestionTextChoice]([QuestionCode] ASC, [SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveyResponse] WITH CHECK ADD CONSTRAINT [FK_SurveyResponse_Applicant] FOREIGN KEY ([ApplicantIdentifier], [EducationOrganizationId])
REFERENCES [extension].[Applicant] ([ApplicantIdentifier], [EducationOrganizationId])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyResponse_Applicant]
ON [extension].[SurveyResponse]([ApplicantIdentifier] ASC, [EducationOrganizationId] ASC)
GO

ALTER TABLE [extension].[SurveyResponse] WITH CHECK ADD CONSTRAINT [FK_SurveyResponse_Parent] FOREIGN KEY ([ParentUSI])
REFERENCES [edfi].[Parent] ([ParentUSI])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyResponse_Parent]
ON [extension].[SurveyResponse]([ParentUSI] ASC)
GO

ALTER TABLE [extension].[SurveyResponse] WITH CHECK ADD CONSTRAINT [FK_SurveyResponse_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyResponse_Staff]
ON [extension].[SurveyResponse]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[SurveyResponse] WITH CHECK ADD CONSTRAINT [FK_SurveyResponse_Student] FOREIGN KEY ([StudentUSI])
REFERENCES [edfi].[Student] ([StudentUSI])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyResponse_Student]
ON [extension].[SurveyResponse]([StudentUSI] ASC)
GO

ALTER TABLE [extension].[SurveyResponse] WITH CHECK ADD CONSTRAINT [FK_SurveyResponse_Survey] FOREIGN KEY ([SurveyIdentifier])
REFERENCES [extension].[Survey] ([SurveyIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_SurveyResponse_Survey]
ON [extension].[SurveyResponse]([SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveySection] WITH CHECK ADD CONSTRAINT [FK_SurveySection_Survey] FOREIGN KEY ([SurveyIdentifier])
REFERENCES [extension].[Survey] ([SurveyIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_SurveySection_Survey]
ON [extension].[SurveySection]([SurveyIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveySectionResponseRating] WITH CHECK ADD CONSTRAINT [FK_SurveySectionResponseRating_SurveyResponse] FOREIGN KEY ([SurveyIdentifier], [SurveyResponseIdentifier])
REFERENCES [extension].[SurveyResponse] ([SurveyIdentifier], [SurveyResponseIdentifier])


GO

CREATE NONCLUSTERED INDEX [FK_SurveySectionResponseRating_SurveyResponse]
ON [extension].[SurveySectionResponseRating]([SurveyIdentifier] ASC, [SurveyResponseIdentifier] ASC)
GO

ALTER TABLE [extension].[SurveySectionResponseRating] WITH CHECK ADD CONSTRAINT [FK_SurveySectionResponseRating_SurveySection] FOREIGN KEY ([SurveyIdentifier], [SurveySectionTitle])
REFERENCES [extension].[SurveySection] ([SurveyIdentifier], [SurveySectionTitle])


GO

CREATE NONCLUSTERED INDEX [FK_SurveySectionResponseRating_SurveySection]
ON [extension].[SurveySectionResponseRating]([SurveyIdentifier] ASC, [SurveySectionTitle] ASC)
GO

ALTER TABLE [extension].[TeacherCandidate] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidate_EnglishLanguageExamDescriptor] FOREIGN KEY ([EnglishLanguageExamDescriptorId])
REFERENCES [extension].[EnglishLanguageExamDescriptor] ([EnglishLanguageExamDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidate_EnglishLanguageExamDescriptor]
ON [extension].[TeacherCandidate]([EnglishLanguageExamDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidate] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidate_GenderType] FOREIGN KEY ([GenderTypeId])
REFERENCES [extension].[GenderType] ([GenderTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidate_GenderType]
ON [extension].[TeacherCandidate]([GenderTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidate] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidate_PreviousCareerDescriptor] FOREIGN KEY ([PreviousCareerDescriptorId])
REFERENCES [extension].[PreviousCareerDescriptor] ([PreviousCareerDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidate_PreviousCareerDescriptor]
ON [extension].[TeacherCandidate]([PreviousCareerDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidate] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidate_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidate_Staff]
ON [extension].[TeacherCandidate]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[TeacherCandidate] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidate_Student] FOREIGN KEY ([TeacherCandidateUniqueId])
REFERENCES [edfi].[Student] ([StudentUniqueId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidate_Student]
ON [extension].[TeacherCandidate]([TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateAcademicRecord] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateAcademicRecord_ProgramGatewayDescriptor] FOREIGN KEY ([ProgramGatewayDescriptorId])
REFERENCES [extension].[ProgramGatewayDescriptor] ([ProgramGatewayDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateAcademicRecord_ProgramGatewayDescriptor]
ON [extension].[TeacherCandidateAcademicRecord]([ProgramGatewayDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateAcademicRecord] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateAcademicRecord_StudentAcademicRecord] FOREIGN KEY ([EducationOrganizationId], [SchoolYear], [StudentUSI], [TermDescriptorId])
REFERENCES [edfi].[StudentAcademicRecord] ([EducationOrganizationId], [SchoolYear], [StudentUSI], [TermDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateAcademicRecord_StudentAcademicRecord]
ON [extension].[TeacherCandidateAcademicRecord]([EducationOrganizationId] ASC, [SchoolYear] ASC, [StudentUSI] ASC, [TermDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateAcademicRecord] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateAcademicRecord_TPPDegreeTypeDescriptor] FOREIGN KEY ([TPPDegreeTypeDescriptorId])
REFERENCES [extension].[TPPDegreeTypeDescriptor] ([TPPDegreeTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateAcademicRecord_TPPDegreeTypeDescriptor]
ON [extension].[TeacherCandidateAcademicRecord]([TPPDegreeTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateAid] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateAid_AidTypeDescriptor] FOREIGN KEY ([AidTypeDescriptorId])
REFERENCES [extension].[AidTypeDescriptor] ([AidTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateAid_AidTypeDescriptor]
ON [extension].[TeacherCandidateAid]([AidTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateAid] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateAid_TeacherCandidate] FOREIGN KEY ([TeacherCandidateUniqueId])
REFERENCES [extension].[TeacherCandidate] ([TeacherCandidateUniqueId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateAid_TeacherCandidate]
ON [extension].[TeacherCandidateAid]([TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateBackgroundCheck] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateBackgroundCheck_BackgroundCheckStatusDescriptor] FOREIGN KEY ([BackgroundCheckStatusDescriptorId])
REFERENCES [extension].[BackgroundCheckStatusDescriptor] ([BackgroundCheckStatusDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateBackgroundCheck_BackgroundCheckStatusDescriptor]
ON [extension].[TeacherCandidateBackgroundCheck]([BackgroundCheckStatusDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateBackgroundCheck] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateBackgroundCheck_BackgroundCheckTypeDescriptor] FOREIGN KEY ([BackgroundCheckTypeDescriptorId])
REFERENCES [extension].[BackgroundCheckTypeDescriptor] ([BackgroundCheckTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateBackgroundCheck_BackgroundCheckTypeDescriptor]
ON [extension].[TeacherCandidateBackgroundCheck]([BackgroundCheckTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateBackgroundCheck] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateBackgroundCheck_TeacherCandidate] FOREIGN KEY ([TeacherCandidateUniqueId])
REFERENCES [extension].[TeacherCandidate] ([TeacherCandidateUniqueId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateBackgroundCheck_TeacherCandidate]
ON [extension].[TeacherCandidateBackgroundCheck]([TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCharacteristicDescriptor] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCharacteristicDescriptor_Descriptor] FOREIGN KEY ([TeacherCandidateCharacteristicDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCharacteristicDescriptor_Descriptor]
ON [extension].[TeacherCandidateCharacteristicDescriptor]([TeacherCandidateCharacteristicDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCharacteristicDescriptor] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCharacteristicDescriptor_TeacherCandidateCharacteristicType] FOREIGN KEY ([TeacherCandidateCharacteristicTypeId])
REFERENCES [extension].[TeacherCandidateCharacteristicType] ([TeacherCandidateCharacteristicTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCharacteristicDescriptor_TeacherCandidateCharacteristicType]
ON [extension].[TeacherCandidateCharacteristicDescriptor]([TeacherCandidateCharacteristicTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCourseTranscript] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCourseTranscript_CourseTranscript] FOREIGN KEY ([CourseAttemptResultTypeId], [CourseCode], [CourseEducationOrganizationId], [EducationOrganizationId], [SchoolYear], [StudentUSI], [TermDescriptorId])
REFERENCES [edfi].[CourseTranscript] ([CourseAttemptResultTypeId], [CourseCode], [CourseEducationOrganizationId], [EducationOrganizationId], [SchoolYear], [StudentUSI], [TermDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCourseTranscript_CourseTranscript]
ON [extension].[TeacherCandidateCourseTranscript]([CourseAttemptResultTypeId] ASC, [CourseCode] ASC, [CourseEducationOrganizationId] ASC, [EducationOrganizationId] ASC, [SchoolYear] ASC, [StudentUSI] ASC, [TermDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory_SchoolCategoryType] FOREIGN KEY ([SchoolCategoryTypeId])
REFERENCES [edfi].[SchoolCategoryType] ([SchoolCategoryTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory_SchoolCategoryType]
ON [extension].[TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory]([SchoolCategoryTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory_TeacherCandidateCourseTranscript] FOREIGN KEY ([CourseAttemptResultTypeId], [CourseCode], [CourseEducationOrganizationId], [EducationOrganizationId], [SchoolYear], [StudentUSI], [TermDescriptorId])
REFERENCES [extension].[TeacherCandidateCourseTranscript] ([CourseAttemptResultTypeId], [CourseCode], [CourseEducationOrganizationId], [EducationOrganizationId], [SchoolYear], [StudentUSI], [TermDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory_TeacherCandidateCourseTranscript]
ON [extension].[TeacherCandidateCourseTranscriptPreviousInsitutionCategorySchoolCategory]([CourseAttemptResultTypeId] ASC, [CourseCode] ASC, [CourseEducationOrganizationId] ASC, [EducationOrganizationId] ASC, [SchoolYear] ASC, [StudentUSI] ASC, [TermDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredential] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredential_Staff] FOREIGN KEY ([StaffUSI])
REFERENCES [edfi].[Staff] ([StaffUSI])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredential_Staff]
ON [extension].[TeacherCandidateCredential]([StaffUSI] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtension] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtension_TeacherCandidateCredential] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
REFERENCES [extension].[TeacherCandidateCredential] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtension_TeacherCandidateCredential]
ON [extension].[TeacherCandidateCredentialExtension]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [LevelDescriptorId] ASC, [StaffUSI] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtension] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtension_ValueType] FOREIGN KEY ([ValueTypeId])
REFERENCES [extension].[ValueType] ([ValueTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtension_ValueType]
ON [extension].[TeacherCandidateCredentialExtension]([ValueTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionBoardCertification] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionBoardCertification_BoardCertificationTypeDescriptor] FOREIGN KEY ([BoardCertificationTypeDescriptorId])
REFERENCES [extension].[BoardCertificationTypeDescriptor] ([BoardCertificationTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionBoardCertification_BoardCertificationTypeDescriptor]
ON [extension].[TeacherCandidateCredentialExtensionBoardCertification]([BoardCertificationTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionBoardCertification] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionBoardCertification_TeacherCandidateCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
REFERENCES [extension].[TeacherCandidateCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionBoardCertification_TeacherCandidateCredentialExtension]
ON [extension].[TeacherCandidateCredentialExtensionBoardCertification]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [LevelDescriptorId] ASC, [StaffUSI] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionCertificationExam] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionCertificationExam_CertificationExamTypeDescriptor] FOREIGN KEY ([CertificationExamTypeDescriptorId])
REFERENCES [extension].[CertificationExamTypeDescriptor] ([CertificationExamTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionCertificationExam_CertificationExamTypeDescriptor]
ON [extension].[TeacherCandidateCredentialExtensionCertificationExam]([CertificationExamTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionCertificationExam] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionCertificationExam_TeacherCandidateCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
REFERENCES [extension].[TeacherCandidateCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionCertificationExam_TeacherCandidateCredentialExtension]
ON [extension].[TeacherCandidateCredentialExtensionCertificationExam]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [LevelDescriptorId] ASC, [StaffUSI] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionRecommendation_CredentialFieldDescriptor] FOREIGN KEY ([CredentialFieldDescriptorId])
REFERENCES [edfi].[CredentialFieldDescriptor] ([CredentialFieldDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionRecommendation_CredentialFieldDescriptor]
ON [extension].[TeacherCandidateCredentialExtensionRecommendation]([CredentialFieldDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionRecommendation_LevelDescriptor] FOREIGN KEY ([LevelDescriptorId])
REFERENCES [edfi].[LevelDescriptor] ([LevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionRecommendation_LevelDescriptor]
ON [extension].[TeacherCandidateCredentialExtensionRecommendation]([LevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionRecommendation_TeacherCandidateCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
REFERENCES [extension].[TeacherCandidateCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionRecommendation_TeacherCandidateCredentialExtension]
ON [extension].[TeacherCandidateCredentialExtensionRecommendation]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [LevelDescriptorId] ASC, [StaffUSI] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionRecommendation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionRecommendation_TeachingCredentialDescriptor] FOREIGN KEY ([TeachingCredentialDescriptorId])
REFERENCES [edfi].[TeachingCredentialDescriptor] ([TeachingCredentialDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionRecommendation_TeachingCredentialDescriptor]
ON [extension].[TeacherCandidateCredentialExtensionRecommendation]([TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionRecommendingInstitution_CountryDescriptor] FOREIGN KEY ([RecommendingInstitutionCountryDescriptorId])
REFERENCES [edfi].[CountryDescriptor] ([CountryDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionRecommendingInstitution_CountryDescriptor]
ON [extension].[TeacherCandidateCredentialExtensionRecommendingInstitution]([RecommendingInstitutionCountryDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionRecommendingInstitution_StateAbbreviationType] FOREIGN KEY ([RecommendingInstutionStateAbbreviationTypeId])
REFERENCES [edfi].[StateAbbreviationType] ([StateAbbreviationTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionRecommendingInstitution_StateAbbreviationType]
ON [extension].[TeacherCandidateCredentialExtensionRecommendingInstitution]([RecommendingInstutionStateAbbreviationTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateCredentialExtensionRecommendingInstitution] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateCredentialExtensionRecommendingInstitution_TeacherCandidateCredentialExtension] FOREIGN KEY ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
REFERENCES [extension].[TeacherCandidateCredentialExtension] ([CredentialFieldDescriptorId], [CredentialIssuanceDate], [CredentialTypeId], [LevelDescriptorId], [StaffUSI], [TeachingCredentialDescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateCredentialExtensionRecommendingInstitution_TeacherCandidateCredentialExtension]
ON [extension].[TeacherCandidateCredentialExtensionRecommendingInstitution]([CredentialFieldDescriptorId] ASC, [CredentialIssuanceDate] ASC, [CredentialTypeId] ASC, [LevelDescriptorId] ASC, [StaffUSI] ASC, [TeachingCredentialDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateFieldworkAbsenceEvent] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateFieldworkAbsenceEvent_TeacherCandidate] FOREIGN KEY ([TeacherCandidateUniqueId])
REFERENCES [extension].[TeacherCandidate] ([TeacherCandidateUniqueId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateFieldworkAbsenceEvent_TeacherCandidate]
ON [extension].[TeacherCandidateFieldworkAbsenceEvent]([TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateFieldworkExperience] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateFieldworkExperience_FieldworkTypeDescriptor] FOREIGN KEY ([FieldworkTypeDescriptorId])
REFERENCES [extension].[FieldworkTypeDescriptor] ([FieldworkTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateFieldworkExperience_FieldworkTypeDescriptor]
ON [extension].[TeacherCandidateFieldworkExperience]([FieldworkTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateFieldworkExperience] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateFieldworkExperience_School] FOREIGN KEY ([SchoolId])
REFERENCES [edfi].[School] ([SchoolId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateFieldworkExperience_School]
ON [extension].[TeacherCandidateFieldworkExperience]([SchoolId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateFieldworkExperience] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateFieldworkExperience_Section] FOREIGN KEY ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])
REFERENCES [edfi].[Section] ([ClassPeriodName], [ClassroomIdentificationCode], [LocalCourseCode], [SchoolId], [SchoolYear], [SequenceOfCourse], [TermDescriptorId], [UniqueSectionCode])

ON UPDATE CASCADE
GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateFieldworkExperience_Section]
ON [extension].[TeacherCandidateFieldworkExperience]([ClassPeriodName] ASC, [ClassroomIdentificationCode] ASC, [LocalCourseCode] ASC, [SchoolId] ASC, [SchoolYear] ASC, [SequenceOfCourse] ASC, [TermDescriptorId] ASC, [UniqueSectionCode] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateFieldworkExperience] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateFieldworkExperience_TeacherCandidate] FOREIGN KEY ([TeacherCandidateUniqueId])
REFERENCES [extension].[TeacherCandidate] ([TeacherCandidateUniqueId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateFieldworkExperience_TeacherCandidate]
ON [extension].[TeacherCandidateFieldworkExperience]([TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateFieldworkExperienceCoteaching] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateFieldworkExperienceCoteaching_TeacherCandidateFieldworkExperience] FOREIGN KEY ([BeginDate], [FieldworkIdentifier], [SchoolId], [TeacherCandidateUniqueId])
REFERENCES [extension].[TeacherCandidateFieldworkExperience] ([BeginDate], [FieldworkIdentifier], [SchoolId], [TeacherCandidateUniqueId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateFieldworkExperienceCoteaching_TeacherCandidateFieldworkExperience]
ON [extension].[TeacherCandidateFieldworkExperienceCoteaching]([BeginDate] ASC, [FieldworkIdentifier] ASC, [SchoolId] ASC, [TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateStudentGrowthFact] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateStudentGrowthFact_ResultDatatypeType] FOREIGN KEY ([ResultDatatypeTypeId])
REFERENCES [edfi].[ResultDatatypeType] ([ResultDatatypeTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateStudentGrowthFact_ResultDatatypeType]
ON [extension].[TeacherCandidateStudentGrowthFact]([ResultDatatypeTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateStudentGrowthFact] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateStudentGrowthFact_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateStudentGrowthFact_SchoolYearType]
ON [extension].[TeacherCandidateStudentGrowthFact]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateStudentGrowthFact] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateStudentGrowthFact_SchoolYearType1] FOREIGN KEY ([StudentGrowthReportYearSchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateStudentGrowthFact_SchoolYearType1]
ON [extension].[TeacherCandidateStudentGrowthFact]([StudentGrowthReportYearSchoolYear] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateStudentGrowthFact] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateStudentGrowthFact_StudentGrowthTypeDescriptor] FOREIGN KEY ([StudentGrowthTypeDescriptorId])
REFERENCES [extension].[StudentGrowthTypeDescriptor] ([StudentGrowthTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateStudentGrowthFact_StudentGrowthTypeDescriptor]
ON [extension].[TeacherCandidateStudentGrowthFact]([StudentGrowthTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateStudentGrowthFact] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateStudentGrowthFact_TeacherCandidate] FOREIGN KEY ([TeacherCandidateUniqueId])
REFERENCES [extension].[TeacherCandidate] ([TeacherCandidateUniqueId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateStudentGrowthFact_TeacherCandidate]
ON [extension].[TeacherCandidateStudentGrowthFact]([TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderAssociation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderAssociation_EntryTypeDescriptor] FOREIGN KEY ([EntryTypeDescriptorId])
REFERENCES [edfi].[EntryTypeDescriptor] ([EntryTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderAssociation_EntryTypeDescriptor]
ON [extension].[TeacherCandidateTeacherPreparationProviderAssociation]([EntryTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderAssociation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderAssociation_ExitWithdrawTypeDescriptor] FOREIGN KEY ([ExitWithdrawTypeDescriptorId])
REFERENCES [edfi].[ExitWithdrawTypeDescriptor] ([ExitWithdrawTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderAssociation_ExitWithdrawTypeDescriptor]
ON [extension].[TeacherCandidateTeacherPreparationProviderAssociation]([ExitWithdrawTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderAssociation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderAssociation_SchoolYearType] FOREIGN KEY ([SchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderAssociation_SchoolYearType]
ON [extension].[TeacherCandidateTeacherPreparationProviderAssociation]([SchoolYear] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderAssociation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderAssociation_SchoolYearType1] FOREIGN KEY ([ClassOfSchoolYear])
REFERENCES [edfi].[SchoolYearType] ([SchoolYear])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderAssociation_SchoolYearType1]
ON [extension].[TeacherCandidateTeacherPreparationProviderAssociation]([ClassOfSchoolYear] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderAssociation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderAssociation_TeacherCandidate] FOREIGN KEY ([TeacherCandidateUniqueId])
REFERENCES [extension].[TeacherCandidate] ([TeacherCandidateUniqueId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderAssociation_TeacherCandidate]
ON [extension].[TeacherCandidateTeacherPreparationProviderAssociation]([TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderAssociation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderAssociation_TeacherPreparationProvider] FOREIGN KEY ([TeacherPreparationProviderId])
REFERENCES [extension].[TeacherPreparationProvider] ([TeacherPreparationProviderId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderAssociation_TeacherPreparationProvider]
ON [extension].[TeacherCandidateTeacherPreparationProviderAssociation]([TeacherPreparationProviderId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderProgramAssociation_ReasonExitedDescriptor] FOREIGN KEY ([ReasonExitedDescriptorId])
REFERENCES [edfi].[ReasonExitedDescriptor] ([ReasonExitedDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderProgramAssociation_ReasonExitedDescriptor]
ON [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation]([ReasonExitedDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderProgramAssociation_TeacherCandidate] FOREIGN KEY ([TeacherCandidateUniqueId])
REFERENCES [extension].[TeacherCandidate] ([TeacherCandidateUniqueId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderProgramAssociation_TeacherCandidate]
ON [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation]([TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderProgramAssociation_TeacherPreparationProviderProgram] FOREIGN KEY ([EducationOrganizationId], [ProgramName], [ProgramTypeId])
REFERENCES [extension].[TeacherPreparationProviderProgram] ([EducationOrganizationId], [ProgramName], [ProgramTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderProgramAssociation_TeacherPreparationProviderProgram]
ON [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation]([EducationOrganizationId] ASC, [ProgramName] ASC, [ProgramTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociationService] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderProgramAssociationService_ServiceDescriptor] FOREIGN KEY ([ServiceDescriptorId])
REFERENCES [edfi].[ServiceDescriptor] ([ServiceDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderProgramAssociationService_ServiceDescriptor]
ON [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociationService]([ServiceDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociationService] WITH CHECK ADD CONSTRAINT [FK_TeacherCandidateTeacherPreparationProviderProgramAssociationService_TeacherCandidateTeacherPreparationProviderProgramAssociat] FOREIGN KEY ([BeginDate], [EducationOrganizationId], [ProgramName], [ProgramTypeId], [TeacherCandidateUniqueId])
REFERENCES [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation] ([BeginDate], [EducationOrganizationId], [ProgramName], [ProgramTypeId], [TeacherCandidateUniqueId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherCandidateTeacherPreparationProviderProgramAssociationService_TeacherCandidateTeacherPreparationProviderProgramAssociat]
ON [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociationService]([BeginDate] ASC, [EducationOrganizationId] ASC, [ProgramName] ASC, [ProgramTypeId] ASC, [TeacherCandidateUniqueId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProgramTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProgramTypeDescriptor_Descriptor] FOREIGN KEY ([TeacherPreparationProgramTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProgramTypeDescriptor_Descriptor]
ON [extension].[TeacherPreparationProgramTypeDescriptor]([TeacherPreparationProgramTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProgramTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProgramTypeDescriptor_TeacherPreparationProgramType] FOREIGN KEY ([TeacherPreparationProgramTypeId])
REFERENCES [extension].[TeacherPreparationProgramType] ([TeacherPreparationProgramTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProgramTypeDescriptor_TeacherPreparationProgramType]
ON [extension].[TeacherPreparationProgramTypeDescriptor]([TeacherPreparationProgramTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProvider] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProvider_EducationOrganization] FOREIGN KEY ([TeacherPreparationProviderId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProvider_EducationOrganization]
ON [extension].[TeacherPreparationProvider]([TeacherPreparationProviderId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProvider] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProvider_University] FOREIGN KEY ([UniversityId])
REFERENCES [extension].[University] ([UniversityId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProvider_University]
ON [extension].[TeacherPreparationProvider]([UniversityId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProviderProgram] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProviderProgram_Program] FOREIGN KEY ([EducationOrganizationId], [ProgramName], [ProgramTypeId])
REFERENCES [edfi].[Program] ([EducationOrganizationId], [ProgramName], [ProgramTypeId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProviderProgram_Program]
ON [extension].[TeacherPreparationProviderProgram]([EducationOrganizationId] ASC, [ProgramName] ASC, [ProgramTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProviderProgram] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProviderProgram_TPPProgramPathwayDescriptor] FOREIGN KEY ([TPPProgramPathwayDescriptorId])
REFERENCES [extension].[TPPProgramPathwayDescriptor] ([TPPProgramPathwayDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProviderProgram_TPPProgramPathwayDescriptor]
ON [extension].[TeacherPreparationProviderProgram]([TPPProgramPathwayDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProviderProgramGradeLevel] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProviderProgramGradeLevel_GradeLevelDescriptor] FOREIGN KEY ([GradeLevelDescriptorId])
REFERENCES [edfi].[GradeLevelDescriptor] ([GradeLevelDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProviderProgramGradeLevel_GradeLevelDescriptor]
ON [extension].[TeacherPreparationProviderProgramGradeLevel]([GradeLevelDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProviderProgramGradeLevel] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProviderProgramGradeLevel_TeacherPreparationProviderProgram] FOREIGN KEY ([EducationOrganizationId], [ProgramName], [ProgramTypeId])
REFERENCES [extension].[TeacherPreparationProviderProgram] ([EducationOrganizationId], [ProgramName], [ProgramTypeId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProviderProgramGradeLevel_TeacherPreparationProviderProgram]
ON [extension].[TeacherPreparationProviderProgramGradeLevel]([EducationOrganizationId] ASC, [ProgramName] ASC, [ProgramTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProviderProgramTPPProgramDegree] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProviderProgramTPPProgramDegree_AcademicSubjectDescriptor] FOREIGN KEY ([AcademicSubjectDescriptorId])
REFERENCES [edfi].[AcademicSubjectDescriptor] ([AcademicSubjectDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProviderProgramTPPProgramDegree_AcademicSubjectDescriptor]
ON [extension].[TeacherPreparationProviderProgramTPPProgramDegree]([AcademicSubjectDescriptorId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProviderProgramTPPProgramDegree] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProviderProgramTPPProgramDegree_TeacherPreparationProviderProgram] FOREIGN KEY ([EducationOrganizationId], [ProgramName], [ProgramTypeId])
REFERENCES [extension].[TeacherPreparationProviderProgram] ([EducationOrganizationId], [ProgramName], [ProgramTypeId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProviderProgramTPPProgramDegree_TeacherPreparationProviderProgram]
ON [extension].[TeacherPreparationProviderProgramTPPProgramDegree]([EducationOrganizationId] ASC, [ProgramName] ASC, [ProgramTypeId] ASC)
GO

ALTER TABLE [extension].[TeacherPreparationProviderProgramTPPProgramDegree] WITH CHECK ADD CONSTRAINT [FK_TeacherPreparationProviderProgramTPPProgramDegree_TPPDegreeTypeDescriptor] FOREIGN KEY ([TPPDegreeTypeDescriptorId])
REFERENCES [extension].[TPPDegreeTypeDescriptor] ([TPPDegreeTypeDescriptorId])


GO

CREATE NONCLUSTERED INDEX [FK_TeacherPreparationProviderProgramTPPProgramDegree_TPPDegreeTypeDescriptor]
ON [extension].[TeacherPreparationProviderProgramTPPProgramDegree]([TPPDegreeTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ThemeTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_ThemeTypeDescriptor_Descriptor] FOREIGN KEY ([ThemeTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_ThemeTypeDescriptor_Descriptor]
ON [extension].[ThemeTypeDescriptor]([ThemeTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[ThemeTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_ThemeTypeDescriptor_ThemeType] FOREIGN KEY ([ThemeTypeId])
REFERENCES [extension].[ThemeType] ([ThemeTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_ThemeTypeDescriptor_ThemeType]
ON [extension].[ThemeTypeDescriptor]([ThemeTypeId] ASC)
GO

ALTER TABLE [extension].[TPPDegreeTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_TPPDegreeTypeDescriptor_Descriptor] FOREIGN KEY ([TPPDegreeTypeDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TPPDegreeTypeDescriptor_Descriptor]
ON [extension].[TPPDegreeTypeDescriptor]([TPPDegreeTypeDescriptorId] ASC)
GO

ALTER TABLE [extension].[TPPDegreeTypeDescriptor] WITH CHECK ADD CONSTRAINT [FK_TPPDegreeTypeDescriptor_TPPDegreeType] FOREIGN KEY ([TPPDegreeTypeId])
REFERENCES [extension].[TPPDegreeType] ([TPPDegreeTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_TPPDegreeTypeDescriptor_TPPDegreeType]
ON [extension].[TPPDegreeTypeDescriptor]([TPPDegreeTypeId] ASC)
GO

ALTER TABLE [extension].[TPPProgramPathwayDescriptor] WITH CHECK ADD CONSTRAINT [FK_TPPProgramPathwayDescriptor_Descriptor] FOREIGN KEY ([TPPProgramPathwayDescriptorId])
REFERENCES [edfi].[Descriptor] ([DescriptorId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_TPPProgramPathwayDescriptor_Descriptor]
ON [extension].[TPPProgramPathwayDescriptor]([TPPProgramPathwayDescriptorId] ASC)
GO

ALTER TABLE [extension].[TPPProgramPathwayDescriptor] WITH CHECK ADD CONSTRAINT [FK_TPPProgramPathwayDescriptor_TPPProgramPathwayType] FOREIGN KEY ([TPPProgramPathwayTypeId])
REFERENCES [extension].[TPPProgramPathwayType] ([TPPProgramPathwayTypeId])


GO

CREATE NONCLUSTERED INDEX [FK_TPPProgramPathwayDescriptor_TPPProgramPathwayType]
ON [extension].[TPPProgramPathwayDescriptor]([TPPProgramPathwayTypeId] ASC)
GO

ALTER TABLE [extension].[University] WITH CHECK ADD CONSTRAINT [FK_University_EducationOrganization] FOREIGN KEY ([UniversityId])
REFERENCES [edfi].[EducationOrganization] ([EducationOrganizationId])
ON DELETE CASCADE

GO

CREATE NONCLUSTERED INDEX [FK_University_EducationOrganization]
ON [extension].[University]([UniversityId] ASC)
GO



/****** Trigger:  [extension].[AnonymizedStudent_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[AnonymizedStudent_TR_DeleteEvent]
    ON [extension].[AnonymizedStudent]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'AnonymizedStudent', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[AnonymizedStudentAcademicRecord_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[AnonymizedStudentAcademicRecord_TR_DeleteEvent]
    ON [extension].[AnonymizedStudentAcademicRecord]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'AnonymizedStudentAcademicRecord', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[AnonymizedStudentAssessment_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[AnonymizedStudentAssessment_TR_DeleteEvent]
    ON [extension].[AnonymizedStudentAssessment]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'AnonymizedStudentAssessment', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[AnonymizedStudentCourseAssociation_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[AnonymizedStudentCourseAssociation_TR_DeleteEvent]
    ON [extension].[AnonymizedStudentCourseAssociation]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'AnonymizedStudentCourseAssociation', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[AnonymizedStudentCourseTranscript_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[AnonymizedStudentCourseTranscript_TR_DeleteEvent]
    ON [extension].[AnonymizedStudentCourseTranscript]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'AnonymizedStudentCourseTranscript', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[AnonymizedStudentEducationOrganizationAssociation_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[AnonymizedStudentEducationOrganizationAssociation_TR_DeleteEvent]
    ON [extension].[AnonymizedStudentEducationOrganizationAssociation]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'AnonymizedStudentEducationOrganizationAssociation', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[AnonymizedStudentSectionAssociation_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[AnonymizedStudentSectionAssociation_TR_DeleteEvent]
    ON [extension].[AnonymizedStudentSectionAssociation]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'AnonymizedStudentSectionAssociation', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[Applicant_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[Applicant_TR_DeleteEvent]
    ON [extension].[Applicant]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'Applicant', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[ApplicantCredential_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[ApplicantCredential_TR_DeleteEvent]
    ON [extension].[ApplicantCredential]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'ApplicantCredential', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[CourseCourseTranscriptFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[CourseCourseTranscriptFact_TR_DeleteEvent]
    ON [extension].[CourseCourseTranscriptFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'CourseCourseTranscriptFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[CourseStudentAcademicRecordFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[CourseStudentAcademicRecordFact_TR_DeleteEvent]
    ON [extension].[CourseStudentAcademicRecordFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'CourseStudentAcademicRecordFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[CourseStudentAssessmentFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[CourseStudentAssessmentFact_TR_DeleteEvent]
    ON [extension].[CourseStudentAssessmentFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'CourseStudentAssessmentFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[CourseStudentFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[CourseStudentFact_TR_DeleteEvent]
    ON [extension].[CourseStudentFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'CourseStudentFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[CourseSurveyResponseFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[CourseSurveyResponseFact_TR_DeleteEvent]
    ON [extension].[CourseSurveyResponseFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'CourseSurveyResponseFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[CourseSurveySectionResponseRatingFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[CourseSurveySectionResponseRatingFact_TR_DeleteEvent]
    ON [extension].[CourseSurveySectionResponseRatingFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'CourseSurveySectionResponseRatingFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[EducationOrganizationCourseTranscriptFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[EducationOrganizationCourseTranscriptFact_TR_DeleteEvent]
    ON [extension].[EducationOrganizationCourseTranscriptFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'EducationOrganizationCourseTranscriptFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[EducationOrganizationFacts_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[EducationOrganizationFacts_TR_DeleteEvent]
    ON [extension].[EducationOrganizationFacts]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'EducationOrganizationFacts', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[EducationOrganizationStudentAcademicRecordFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[EducationOrganizationStudentAcademicRecordFact_TR_DeleteEvent]
    ON [extension].[EducationOrganizationStudentAcademicRecordFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'EducationOrganizationStudentAcademicRecordFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[EducationOrganizationStudentAssessmentFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[EducationOrganizationStudentAssessmentFact_TR_DeleteEvent]
    ON [extension].[EducationOrganizationStudentAssessmentFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'EducationOrganizationStudentAssessmentFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[EducationOrganizationStudentFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[EducationOrganizationStudentFact_TR_DeleteEvent]
    ON [extension].[EducationOrganizationStudentFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'EducationOrganizationStudentFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[EducationOrganizationSurveyResponseFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[EducationOrganizationSurveyResponseFact_TR_DeleteEvent]
    ON [extension].[EducationOrganizationSurveyResponseFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'EducationOrganizationSurveyResponseFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[EducationOrganizationSurveySectionResponseRatingFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[EducationOrganizationSurveySectionResponseRatingFact_TR_DeleteEvent]
    ON [extension].[EducationOrganizationSurveySectionResponseRatingFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'EducationOrganizationSurveySectionResponseRatingFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[Observation_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[Observation_TR_DeleteEvent]
    ON [extension].[Observation]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'Observation', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[ObservationFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[ObservationFact_TR_DeleteEvent]
    ON [extension].[ObservationFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'ObservationFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[ProfessionalDevelopmentEvent_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[ProfessionalDevelopmentEvent_TR_DeleteEvent]
    ON [extension].[ProfessionalDevelopmentEvent]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'ProfessionalDevelopmentEvent', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[Prospect_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[Prospect_TR_DeleteEvent]
    ON [extension].[Prospect]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'Prospect', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[ProspectCredential_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[ProspectCredential_TR_DeleteEvent]
    ON [extension].[ProspectCredential]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'ProspectCredential', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[RecruitmentEvent_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[RecruitmentEvent_TR_DeleteEvent]
    ON [extension].[RecruitmentEvent]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'RecruitmentEvent', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[Rubric_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[Rubric_TR_DeleteEvent]
    ON [extension].[Rubric]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'Rubric', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[RubricLevel_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[RubricLevel_TR_DeleteEvent]
    ON [extension].[RubricLevel]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'RubricLevel', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[RubricLevelResponse_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[RubricLevelResponse_TR_DeleteEvent]
    ON [extension].[RubricLevelResponse]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'RubricLevelResponse', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[RubricLevelResponseFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[RubricLevelResponseFact_TR_DeleteEvent]
    ON [extension].[RubricLevelResponseFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'RubricLevelResponseFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SectionCourseTranscriptFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SectionCourseTranscriptFact_TR_DeleteEvent]
    ON [extension].[SectionCourseTranscriptFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SectionCourseTranscriptFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SectionStudentAcademicRecordFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SectionStudentAcademicRecordFact_TR_DeleteEvent]
    ON [extension].[SectionStudentAcademicRecordFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SectionStudentAcademicRecordFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SectionStudentAssessmentFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SectionStudentAssessmentFact_TR_DeleteEvent]
    ON [extension].[SectionStudentAssessmentFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SectionStudentAssessmentFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SectionStudentFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SectionStudentFact_TR_DeleteEvent]
    ON [extension].[SectionStudentFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SectionStudentFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SectionSurveyResponseFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SectionSurveyResponseFact_TR_DeleteEvent]
    ON [extension].[SectionSurveyResponseFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SectionSurveyResponseFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SectionSurveySectionResponseRatingFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SectionSurveySectionResponseRatingFact_TR_DeleteEvent]
    ON [extension].[SectionSurveySectionResponseRatingFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SectionSurveySectionResponseRatingFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[StaffCredential_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[StaffCredential_TR_DeleteEvent]
    ON [extension].[StaffCredential]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'StaffCredential', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[StaffFieldworkAbsenceEvent_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[StaffFieldworkAbsenceEvent_TR_DeleteEvent]
    ON [extension].[StaffFieldworkAbsenceEvent]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'StaffFieldworkAbsenceEvent', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[StaffFieldworkExperience_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[StaffFieldworkExperience_TR_DeleteEvent]
    ON [extension].[StaffFieldworkExperience]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'StaffFieldworkExperience', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[StaffStudentGrowthFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[StaffStudentGrowthFact_TR_DeleteEvent]
    ON [extension].[StaffStudentGrowthFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'StaffStudentGrowthFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[StaffTeacherPreparationProviderAssociation_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[StaffTeacherPreparationProviderAssociation_TR_DeleteEvent]
    ON [extension].[StaffTeacherPreparationProviderAssociation]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'StaffTeacherPreparationProviderAssociation', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[StaffTeacherPreparationProviderProgramAssociation_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[StaffTeacherPreparationProviderProgramAssociation_TR_DeleteEvent]
    ON [extension].[StaffTeacherPreparationProviderProgramAssociation]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'StaffTeacherPreparationProviderProgramAssociation', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[Survey_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[Survey_TR_DeleteEvent]
    ON [extension].[Survey]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'Survey', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SurveyQuestion_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SurveyQuestion_TR_DeleteEvent]
    ON [extension].[SurveyQuestion]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SurveyQuestion', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SurveyQuestionResponse_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SurveyQuestionResponse_TR_DeleteEvent]
    ON [extension].[SurveyQuestionResponse]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SurveyQuestionResponse', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SurveyQuestionResponseFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SurveyQuestionResponseFact_TR_DeleteEvent]
    ON [extension].[SurveyQuestionResponseFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SurveyQuestionResponseFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SurveyResponse_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SurveyResponse_TR_DeleteEvent]
    ON [extension].[SurveyResponse]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SurveyResponse', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SurveySection_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SurveySection_TR_DeleteEvent]
    ON [extension].[SurveySection]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SurveySection', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[SurveySectionResponseRating_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[SurveySectionResponseRating_TR_DeleteEvent]
    ON [extension].[SurveySectionResponseRating]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'SurveySectionResponseRating', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[TeacherCandidate_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherCandidate_TR_DeleteEvent]
    ON [extension].[TeacherCandidate]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherCandidate', 'extension'
FROM deleted d
    INNER JOIN [edfi].[Student] base
        ON
            d.TeacherCandidateUniqueId = base.StudentUniqueId
;
END
GO

/****** Trigger:  [extension].[TeacherCandidateAcademicRecord_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherCandidateAcademicRecord_TR_DeleteEvent]
    ON [extension].[TeacherCandidateAcademicRecord]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherCandidateAcademicRecord', 'extension'
FROM deleted d
    INNER JOIN [edfi].[StudentAcademicRecord] base
        ON
            d.EducationOrganizationId = base.EducationOrganizationId
            AND d.SchoolYear = base.SchoolYear
            AND d.StudentUSI = base.StudentUSI
            AND d.TermDescriptorId = base.TermDescriptorId
;
END
GO

/****** Trigger:  [extension].[TeacherCandidateCourseTranscript_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherCandidateCourseTranscript_TR_DeleteEvent]
    ON [extension].[TeacherCandidateCourseTranscript]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherCandidateCourseTranscript', 'extension'
FROM deleted d
    INNER JOIN [edfi].[CourseTranscript] base
        ON
            d.CourseAttemptResultTypeId = base.CourseAttemptResultTypeId
            AND d.CourseCode = base.CourseCode
            AND d.CourseEducationOrganizationId = base.CourseEducationOrganizationId
            AND d.EducationOrganizationId = base.EducationOrganizationId
            AND d.SchoolYear = base.SchoolYear
            AND d.StudentUSI = base.StudentUSI
            AND d.TermDescriptorId = base.TermDescriptorId
;
END
GO

/****** Trigger:  [extension].[TeacherCandidateCredential_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherCandidateCredential_TR_DeleteEvent]
    ON [extension].[TeacherCandidateCredential]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherCandidateCredential', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[TeacherCandidateFieldworkAbsenceEvent_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherCandidateFieldworkAbsenceEvent_TR_DeleteEvent]
    ON [extension].[TeacherCandidateFieldworkAbsenceEvent]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherCandidateFieldworkAbsenceEvent', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[TeacherCandidateFieldworkExperience_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherCandidateFieldworkExperience_TR_DeleteEvent]
    ON [extension].[TeacherCandidateFieldworkExperience]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherCandidateFieldworkExperience', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[TeacherCandidateStudentGrowthFact_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherCandidateStudentGrowthFact_TR_DeleteEvent]
    ON [extension].[TeacherCandidateStudentGrowthFact]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherCandidateStudentGrowthFact', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[TeacherCandidateTeacherPreparationProviderAssociation_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherCandidateTeacherPreparationProviderAssociation_TR_DeleteEvent]
    ON [extension].[TeacherCandidateTeacherPreparationProviderAssociation]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherCandidateTeacherPreparationProviderAssociation', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation_TR_DeleteEvent]
    ON [extension].[TeacherCandidateTeacherPreparationProviderProgramAssociation]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherCandidateTeacherPreparationProviderProgramAssociation', 'extension'
FROM deleted;
END
GO

/****** Trigger:  [extension].[TeacherPreparationProvider_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherPreparationProvider_TR_DeleteEvent]
    ON [extension].[TeacherPreparationProvider]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherPreparationProvider', 'extension'
FROM deleted d
    INNER JOIN [edfi].[EducationOrganization] base
        ON
            d.TeacherPreparationProviderId = base.EducationOrganizationId
;
END
GO

/****** Trigger:  [extension].[TeacherPreparationProviderProgram_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[TeacherPreparationProviderProgram_TR_DeleteEvent]
    ON [extension].[TeacherPreparationProviderProgram]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'TeacherPreparationProviderProgram', 'extension'
FROM deleted d
    INNER JOIN [edfi].[Program] base
        ON
            d.EducationOrganizationId = base.EducationOrganizationId
            AND d.ProgramName = base.ProgramName
            AND d.ProgramTypeId = base.ProgramTypeId
;
END
GO

/****** Trigger:  [extension].[University_TR_DeleteEvent] ******/

CREATE TRIGGER [extension].[University_TR_DeleteEvent]
    ON [extension].[University]
    AFTER DELETE 
AS
BEGIN
    SET NOCOUNT ON;
    
INSERT INTO dbo.DeleteEvent (Id, DeletionDate, TableName, SchemaName)
SELECT Id, GETUTCDATE(), 'University', 'extension'
FROM deleted d
    INNER JOIN [edfi].[EducationOrganization] base
        ON
            d.UniversityId = base.EducationOrganizationId
;
END
GO



INSERT INTO [extension].[AbsenceEventCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Doctor','Doctor')

INSERT INTO [extension].[AbsenceEventCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Family','Family')

INSERT INTO [extension].[AbsenceEventCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Injured','Injured')

INSERT INTO [extension].[AbsenceEventCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[AbsenceEventCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Personal','Personal')

INSERT INTO [extension].[AbsenceEventCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Sick','Sick')

INSERT INTO [extension].[AbsenceEventCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Vacation','Vacation')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Assistantships','Assistantships')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Federal Scholarships','Federal Scholarships')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Federal Subsidized Loans','Federal Subsidized Loans')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Federal Unsubsidized Loans','Federal Unsubsidized Loans')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Federal Work Study','Federal Work Study')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Institutional Grants','Institutional Grants')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Institutional Loans','Institutional Loans')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Institutional Scholarships','Institutional Scholarships')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Loan Forgiveness','Loan Forgiveness')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other Federal Grants','Other Federal Grants')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other Grants','Other Grants')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other On-Campus Work','Other On-Campus Work')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other Scholarships','Other Scholarships')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Parent PLUS Loans','Parent PLUS Loans')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Pell Grants','Pell Grants')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Private Grants','Private Grants')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Private Loans','Private Loans')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Private Scholarships','Private Scholarships')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','State and Local Grants','State and Local Grants')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','State and Local Scholarships','State and Local Scholarships')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','State Loans','State Loans')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','State Work','State Work')

INSERT INTO [extension].[AidType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Tuition Reimbursements','Tuition Reimbursements')

INSERT INTO [extension].[BackgroundCheckStatusType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Eligible','Eligible')

INSERT INTO [extension].[BackgroundCheckStatusType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Employer Review','Employer Review')

INSERT INTO [extension].[BackgroundCheckStatusType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Not Eligible','Not Eligible')

INSERT INTO [extension].[BackgroundCheckStatusType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Started','Started')

INSERT INTO [extension].[BackgroundCheckStatusType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Submitted','Submitted')

INSERT INTO [extension].[BackgroundCheckStatusType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Waiting','Waiting')

INSERT INTO [extension].[BackgroundCheckType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','City','City')

INSERT INTO [extension].[BackgroundCheckType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','County','County')

INSERT INTO [extension].[BackgroundCheckType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Federal','Federal')

INSERT INTO [extension].[BackgroundCheckType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[BackgroundCheckType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','State','State')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Art/Early Adolescence through Young Adulthood','Art/Early Adolescence through Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Art/Early and Middle Childhood','Art/Early and Middle Childhood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Career and Technical Education/Early Adolescence through Young Adulthood','Career and Technical Education/Early Adolescence through Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','English as  New Language/Early and Middle Childhood','English as  New Language/Early and Middle Childhood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','English as a New Language/Early Adolescence through Young Adulthood','English as a New Language/Early Adolescence through Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','English Language Arts/Adolescence and Young Adulthood','English Language Arts/Adolescence and Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','English Language Arts/Early Adolescence','English Language Arts/Early Adolescence')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Exceptional Needs Specialist/Early Childhood through Young Adulthood','Exceptional Needs Specialist/Early Childhood through Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Generalist/Early Adolescence','Generalist/Early Adolescence')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Generalist/Early Childhood','Generalist/Early Childhood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Generalist/Middle Childhood','Generalist/Middle Childhood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Health Education/Early Adolescence through Young Adulthood','Health Education/Early Adolescence through Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Library Media/Early Childhood through Young Adulthood','Library Media/Early Childhood through Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Literacy: Reading - Language Arts/Early and Middle Childhood','Literacy: Reading - Language Arts/Early and Middle Childhood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Mathematics/Adolescence and Young Adulthood','Mathematics/Adolescence and Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Mathematics/Early Adolescence','Mathematics/Early Adolescence')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Music/Early Adolescence through Young Adulthood','Music/Early Adolescence through Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Music/Early and Middle Childhood','Music/Early and Middle Childhood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','None','None')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Physical Education/Early Adolescence through Young Adulthood','Physical Education/Early Adolescence through Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Physical Education/Early and Middle Childhood','Physical Education/Early and Middle Childhood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','School Counseling/Early Childhood through Young Adulthood','School Counseling/Early Childhood through Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Science/Adolescence and Young Adulthood','Science/Adolescence and Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Science/Early Adolescence','Science/Early Adolescence')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Social Studies - History/Adolescence and Young Adulthood','Social Studies - History/Adolescence and Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Social Studies - History/Early Adolescence','Social Studies - History/Early Adolescence')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','World Languages Other Than English/Early Adolescence through Young Adulthood','World Languages Other Than English/Early Adolescence through Young Adulthood')

INSERT INTO [extension].[BoardCertificationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','World Languages Other Than English/Early and Middle Childhood','World Languages Other Than English/Early and Middle Childhood')

INSERT INTO [extension].[CertificationExamType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','National','National')

INSERT INTO [extension].[CertificationExamType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[CertificationExamType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','State','State')

INSERT INTO [extension].[EnglishLanguageExamType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Fail','Fail')

INSERT INTO [extension].[EnglishLanguageExamType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','N/A','N/A')

INSERT INTO [extension].[EnglishLanguageExamType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[EnglishLanguageExamType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Pass','Pass')

INSERT INTO [extension].[FieldworkType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Clinical Experience','Clinical Experience')

INSERT INTO [extension].[FieldworkType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Field Placement','Field Placement')

INSERT INTO [extension].[FieldworkType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[FieldworkType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Residential Program','Residential Program')

INSERT INTO [extension].[GenderType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Female','Female')

INSERT INTO [extension].[GenderType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Male','Male')

INSERT INTO [extension].[GenderType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Not Selected','Not Selected')

INSERT INTO [extension].[LevelOfDegreeAwardedType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Associates','Associates')

INSERT INTO [extension].[LevelOfDegreeAwardedType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Bachelors','Bachelors')

INSERT INTO [extension].[LevelOfDegreeAwardedType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Masters','Masters')

INSERT INTO [extension].[LevelOfDegreeAwardedType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','None','None')

INSERT INTO [extension].[LevelOfDegreeAwardedType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','PhD','PhD')

INSERT INTO [extension].[LevelType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','1','1')

INSERT INTO [extension].[LevelType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','2','2')

INSERT INTO [extension].[LevelType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','3','3')

INSERT INTO [extension].[LevelType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','4','4')

INSERT INTO [extension].[LevelType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','5','5')

INSERT INTO [extension].[LevelType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[ObservationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Formal','Formal')

INSERT INTO [extension].[ObservationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Informal','Informal')

INSERT INTO [extension].[ObservationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[ObservationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Self Reflection','Self Reflection')

INSERT INTO [extension].[ObservationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Summative','Summative')

INSERT INTO [extension].[ObservationType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Walkthrough','Walkthrough')

INSERT INTO [extension].[PreviousCareerType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Accounting','Accounting')

INSERT INTO [extension].[PreviousCareerType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Consulting','Consulting')

INSERT INTO [extension].[PreviousCareerType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Education','Education')

INSERT INTO [extension].[PreviousCareerType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Maintenance','Maintenance')

INSERT INTO [extension].[PreviousCareerType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Medical','Medical')

INSERT INTO [extension].[PreviousCareerType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[PreviousCareerType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Science and Technology','Science and Technology')

INSERT INTO [extension].[ProfessionalDevelopmentOfferedByType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','District','District')

INSERT INTO [extension].[ProfessionalDevelopmentOfferedByType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','School','School')

INSERT INTO [extension].[ProfessionalDevelopmentOfferedByType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','State','State')

INSERT INTO [extension].[ProfessionalDevelopmentOfferedByType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Teacher Preparation Provider','Teacher Preparation Provider')

INSERT INTO [extension].[ProgramGatewayType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Gateway 1','Gateway 1')

INSERT INTO [extension].[ProgramGatewayType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Gateway 2','Gateway 2')

INSERT INTO [extension].[ProgramGatewayType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Gateway 3','Gateway 3')

INSERT INTO [extension].[ProgramGatewayType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Gateway 4','Gateway 4')

INSERT INTO [extension].[ProgramGatewayType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Gateway 5','Gateway 5')

INSERT INTO [extension].[QuestionFormType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Checkbox','Checkbox')

INSERT INTO [extension].[QuestionFormType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Dropdown','Dropdown')

INSERT INTO [extension].[QuestionFormType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Matrix of dropdowns','Matrix of dropdowns')

INSERT INTO [extension].[QuestionFormType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Matrix of numeric ratings','Matrix of numeric ratings')

INSERT INTO [extension].[QuestionFormType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Matrix of textboxes','Matrix of textboxes')

INSERT INTO [extension].[QuestionFormType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Radio box','Radio box')

INSERT INTO [extension].[QuestionFormType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Ranking','Ranking')

INSERT INTO [extension].[QuestionFormType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Textbox','Textbox')

INSERT INTO [extension].[RubricType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','District','District')

INSERT INTO [extension].[RubricType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[RubricType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','State','State')

INSERT INTO [extension].[RubricType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Teacher Preparation Provider','Teacher Preparation Provider')

INSERT INTO [extension].[SalaryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Contract','Contract')

INSERT INTO [extension].[SalaryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Full Time','Full Time')

INSERT INTO [extension].[SalaryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Hourly','Hourly')

INSERT INTO [extension].[SalaryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[SalaryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Part Time','Part Time')

INSERT INTO [extension].[SchoolStatusType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Focus','Focus')

INSERT INTO [extension].[SchoolStatusType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[SchoolStatusType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Priority','Priority')

INSERT INTO [extension].[StudentGrowthType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Growth Percentile','Growth Percentile')

INSERT INTO [extension].[StudentGrowthType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[StudentGrowthType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Student Learning Objective (SLO)','Student Learning Objective (SLO)')

INSERT INTO [extension].[StudentGrowthType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Value Add','Value Add')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Administrator','Administrator')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Alumni','Alumni')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Applicant','Applicant')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Community','Community')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Course Evaluation','Course Evaluation')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Disposition','Disposition')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','District','District')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Exit','Exit')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Faculty','Faculty')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Mentor/Cooperating Teacher','Mentor/Cooperating Teacher')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Parent','Parent')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Principal','Principal')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','School/District Leader','School/District Leader')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Student','Student')

INSERT INTO [extension].[SurveyCategoryType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Teacher','Teacher')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Asylee','Asylee')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Displaced Homemaker','Displaced Homemaker')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','First Generation College Student','First Generation College Student')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Foster Care','Foster Care')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Homeless','Homeless')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Immigrant','Immigrant')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Migrant','Migrant')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Neglected or Delinquent','Neglected or Delinquent')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Parent in Military','Parent in Military')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Pregnant','Pregnant')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Refugee','Refugee')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Runaway','Runaway')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Section 504 Handicapped','Section 504 Handicapped')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Single Parent','Single Parent')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Unaccompanied Youth','Unaccompanied Youth')

INSERT INTO [extension].[TeacherCandidateCharacteristicType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Veteran','Veteran')

INSERT INTO [extension].[TeacherPreparationProgramType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Alternate','Alternate')

INSERT INTO [extension].[TeacherPreparationProgramType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[TeacherPreparationProgramType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Traditional','Traditional')

INSERT INTO [extension].[ThemeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Classroom Environment','Classroom Environment')

INSERT INTO [extension].[ThemeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Classroom Instruction','Classroom Instruction')

INSERT INTO [extension].[ThemeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Effective Planning','Effective Planning')

INSERT INTO [extension].[ThemeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Lesson Alignment','Lesson Alignment')

INSERT INTO [extension].[ThemeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Managing Student Behavior','Managing Student Behavior')

INSERT INTO [extension].[ThemeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[ThemeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Professionalism','Professionalism')

INSERT INTO [extension].[ThemeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Student Assessment','Student Assessment')

INSERT INTO [extension].[ThemeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Student Investment and Engagement','Student Investment and Engagement')

INSERT INTO [extension].[ThemeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Teacher Reflection','Teacher Reflection')

INSERT INTO [extension].[TPPDegreeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Bachelor of Arts','Bachelor of Arts')

INSERT INTO [extension].[TPPDegreeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Bachelor of Science','Bachelor of Science')

INSERT INTO [extension].[TPPDegreeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Doctor of Philosophy','Doctor of Philosophy')

INSERT INTO [extension].[TPPDegreeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Educational Doctorate','Educational Doctorate')

INSERT INTO [extension].[TPPDegreeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Educational Specialist','Educational Specialist')

INSERT INTO [extension].[TPPDegreeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Master''s of Arts','Master''s of Arts')

INSERT INTO [extension].[TPPDegreeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Master''s of Education','Master''s of Education')

INSERT INTO [extension].[TPPDegreeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Master''s of Science','Master''s of Science')

INSERT INTO [extension].[TPPDegreeType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[TPPProgramPathwayType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Fellowship','Fellowship')

INSERT INTO [extension].[TPPProgramPathwayType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Intership','Intership')

INSERT INTO [extension].[TPPProgramPathwayType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[TPPProgramPathwayType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Residency','Residency')

INSERT INTO [extension].[TPPProgramPathwayType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Traditional','Traditional')

INSERT INTO [extension].[ValueType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Actual','Actual')

INSERT INTO [extension].[ValueType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Other','Other')

INSERT INTO [extension].[ValueType] ([CodeValue],[Description],[ShortDescription]) VALUES ('','Projected','Projected')

GO


